{"version":3,"sources":["src/assets/DukeBasketballLogoSpace.png","src/assets/coachKLogo.png","src/assets/tentemoji.png","src/assets/DukeBasketballLogo.png","src/assets/kvilleBoundary.jpg","src/assets/kvillesign.jpg","src/theme/theme.js","src/context/ThemeProvider.js","src/redux/reducers/snackbarSlice.js","src/screens/auth/Register.js","src/screens/auth/Login.js","src/screens/About.js","src/components/ConfirmationModal.js","src/redux/reducers/userSlice.js","src/screens/AccountSettings.js","src/navigation/StackNavigator.js","src/backend/CreateGroupSchedule.js","src/components/LoadingIndicator.js","src/components/ErrorPage.js","src/components/ActionSheetModal.js","src/hooks/useRefreshByUser.js","src/screens/Home.js","src/backend/GroupCode.js","src/screens/CreateGroup.js","src/screens/JoinGroup.js","src/components/BottomSheetModal.js","src/components/SettingsModal.js","src/screens/GroupInfo.js","src/screens/DrawerContent.js","src/screens/Availability.js","src/screens/Schedule.js","src/screens/Monitor.js","src/screens/Info.js","src/screens/Shifts.js","src/components/Snackbar.js","src/navigation/DrawerNavigator.js","src/screens/auth/ForgotPassword.js","src/redux/store/index.js","App.js"],"names":["module","exports","lightTheme","background","primary","primaryContainer","secondary","tertiary","quaternary","white1","white2","grey1","grey2","grey3","grey4","grey5","grey6","popOutBorder","greyModal","text1","text2","icon1","icon2","error","generalTheme","roundness","ThemeContext","createContext","useTheme","useContext","ThemeProvider","children","useState","theme","Provider","value","snackbarSlice","createSlice","name","initialState","snackbarOpen","snackbarMessage","reducers","toggleSnackBar","state","setSnackMessage","action","payload","actions","window","Dimensions","get","Register","props","email","setEmail","password","setPassword","username","setUsername","groupCode","secureTextEntry","setSecureTextEntry","dimensions","setDimensions","dispatch","useDispatch","useEffect","subscription","addEventListener","remove","View","style","styles","container","KeyboardAvoidingView","behavior","banner","Text","color","fontSize","marginTop","imageContainer","Image","logo","flex","tintColor","opacity","aspectRatio","width","top","resizeMode","source","DukeBasketballLogo","boldImage","slant","borderRightWidth","borderTopWidth","height","formCenter","section","icon","size","TextInput","textInput","placeholder","onChangeText","normalize","replace","keyboardType","TouchableOpacity","marginRight","onPress","button","length","firebase","firestore","collection","where","then","snapshot","empty","auth","createUserWithEmailAndPassword","doc","currentUser","uid","set","catch","bottomButton","textAlign","navigation","navigate","StyleSheet","create","backgroundColor","alignItems","position","bottom","left","zIndex","margin","borderRadius","justifyContent","marginLeft","borderStyle","borderRightColor","borderBottomColor","borderTopColor","alignContent","flexDirection","shadowColor","elevation","shadowOffset","shadowOpacity","shadowRadius","padding","marginBottom","Login","isReady","setIsReady","mounted","a","async","AsyncStorage","getItem","oldEmail","oldPassword","signInWithEmailAndPassword","prepare","setItem","message","includes","title","whit2","About","goBack","ConfirmationModal","bodyText","toggleModal","buttonAction","body","buttonText","userStyle","BottomModalView","swipeDirection","backdropTransitionOutTiming","keyboardDismissMode","confirmationPop","borderBottomWidth","confirmationText","confirmationHeader","confirmationBottomBtn","alignSelf","fontWeight","userSlice","currGroupCode","currGroupName","currUserName","currTentType","currGroupRole","setCurrentUser","reset","setGroupCode","setGroupName","setUserName","setTentType","setGroupRole","AccountSettings","groups","useSelector","user","isConfirmationVisible","setConfirmationVisible","toggleConfirmation","SafeAreaView","settingsContainer","topBanner","headerText","multiRemove","signOut","leaveButton","credentials","EmailAuthProvider","credential","reauthenticateWithCredential","delete","deleteUser","isVisible","onBackdropPress","onSwipeComplete","borderTopRightRadius","borderTopLeftRadius","paddingVertical","borderColor","paddingHorizontal","headerContainer","modalText","tentChangeListItem","tentChangeBtn","borderWidth","Stack","createNativeStackNavigator","StackNavigator","Navigator","Screen","component","AccountSettingsScreen","options","headerShown","AboutScreen","colors","createGroupSchedule","tentType","sortMembers","idx","array","sort","b","hours","Number","availability","numDay","numNight","memberArr","Array","groupScheduleArr","prevMember1","prevMember2","memberIDs","id","changedHrs","collSnap","forEach","data","shifts","fill","member","push","current","consecutive","time","idxOfUsr","findIndex","element","splice","unshift","nightHour","memberIdx","i","update","scheduledHrs","index","LoadingIndicator","ActivityIndicator","ErrorPage","infoText","returnBtn","marginVertical","ActionSheetModal","swipeDown","cancelButton","undefined","adjustedHeight","TopSectionView","CancelBtn","CancelBtnText","useRefreshByUser","refetch","isRefetchingByUser","setIsRefetchingByUser","refetchByUser","Home","isModalVisible","setModalVisible","isCountVisible","setCountVisible","isDisabled","setIsDisabled","useRef","Math","round","Date","getTime","now","useFocusEffect","useCallback","useQuery","currGroup","map","group","code","groupName","initialData","onSuccess","isLoading","isError","EmptyGroup","listItem","shadowProp","image","Group","e","memDoc","groupRole","updateRedux","disabled","listText","startContainer","topText","IconButton","groupText","paddingTop","transform","rotateX","rotate","right","xmlns","viewBox","d","fillRule","FlatList","renderItem","item","keyExtractor","refreshControl","RefreshControl","enabled","refreshing","onRefresh","flexGrow","showsVerticalScrollIndicator","until","onFinish","alert","digitStyle","digitTxtStyle","timeLabelStyle","separatorStyle","showSeparator","popUp","popUpHeader","popButton","borderBottomLeftRadius","borderBottomRightRadius","generateUUID","digits","str","uuid","floor","random","join","CreateGroup","groupRef","userName","setGroup","isTentChangeVisible","setTentChangeVisible","queryClient","useQueryClient","userRef","toggleTentChange","groupContainer","groupHeader","btnTxt","groupSchedule","previousSchedule","previousMemberArr","inTent","FieldValue","arrayUnion","exists","invalidateQueries","maxLength","autoCorrect","selectable","selectTent","clearTextOnFocus","triangle","coachKLogo","backgroundImage","textContainer","text","centerText","picker","pickerItem","scaleX","JoinGroup","setInputGroupCode","setName","header","docSnapshot","onJoinGroup","trim","ModalContext","useModal","context","Error","BottomSheetModal","headerColor","barSize","ModalContainer","modalBar","modalSmallBar","SecondContainer","ModalSecondaryView","Header","verticalMargin","ModalHeader","ModalText","SettingsModal","params","isModalSnackVisible","setModalSnackVisible","modalSnackMessage","setModalSnackMessage","postSave","useMutation","onSave","onError","useOnSave","newGroupName","newUserName","newTentType","valid","userDoc","groupCodeArr","groupIndex","toggleModalSnackBar","initialValues","onSubmit","values","mutate","handleChange","handleBlur","handleSubmit","setFieldValue","setFieldTouched","onBlur","querySnapshot","arrayRemove","Snackbar","visible","onDismiss","wrapperStyle","duration","GroupInfo","isRoleChangeVisible","setRoleChangeVisible","isSettingsVisible","setSettingsVisible","currMember","useFonts","Merriweather_400Regular","Merriweather_700Bold","Montserrat_400Regular","Montserrat_700Bold","OpenSans_400Regular","fontsLoaded","toggleRoleChange","toggleSettings","Keyboard","dismiss","memberRef","currName","tentCondition","scheduledHours","memID","role","fetchGroupMembers","postRemoveMember","removeMember","useRemoveMember","postGroupRole","useGroupRole","Member","containerHeader","openDrawer","boxText","contentText","slice","ListHeaderComponent","marginHorizontal","popUpHeaderView","popUpHalfBody","Divider","removeBtn","roleChangeListItem","fontFamily","highlightShadow","memo","status","setStatus","postTentStatus","updateTentStatus","useUpdateTentStatus","DrawerContentScrollView","drawerContent","userInfoSection","Title","Section","drawerSection","DrawerItem","label","Switch","onValueChange","bottomDrawerSection","paddingLeft","caption","lineHeight","row","paragraph","agenda","tableHead","tableTime","tableData","rowData","j","currIndex","Availability","isDeleteModalVisible","setDeleteModalVisible","isSnackVisible","setSnackVisible","snackMessage","selectedDay","setSelectedDay","hour","minute","day","startTime","setStartTime","endTime","setEndTime","availabilityUI","fetchAvailability","postAvailability","updateAvailability","useUpdateAvailability","startIdx","parseInt","endIdx","deleteAvailability","deleteCell","useDeleteAvailability","toggleDeleteModal","cellData","btn","flatten","head","widthArr","textStyle","ScrollView","heightArr","cellHeight","cellIndex","cell","addContainer","FAB","modalBody","selectDay","selectedValue","itemValue","itemIndex","Platform","OS","itemStyle","Item","selectTime","timePickerBody","modalFooter","addBtn","btnText","overflow","UIManager","setLayoutAnimationEnabledExperimental","prevColorCodes","times","prevSchedule","win","Schedule","isRefetching","setIsRefetching","isMemberModalVisible","setMemberModalVisible","open","fabState","setFabState","weekDisplay","setWeekDisplay","renderDay","setRenderDay","newMember","setNewMember","oldMember","editIndex","newSchedule","editSuccessful","scrollRef","colorCodes","dayHighlightOffset","useSharedValue","isCurrentWeek","currSchedule","fetchGroupSchedule","postEditCell","split","indexofOld","object","indexofNew","oldHours","oldShifts","newHours","newShifts","editCell","setQueryData","useEditCell","postSchedule","createNewGroupSchedule","useUpdateSchedule","LayoutAnimation","configureNext","Presets","spring","toggleMemberModal","toggleWeek","TimeColumn","timesText","OneCell","person","indexofUser","timeSlotBtn","adjustsFontSizeToFit","minimumFontScale","numberOfLines","RenderCell","arrayIndex","members","people","DailyTable","indexAdder","dayArr","customSpringStyles","useAnimatedStyle","translateX","withSpring","damping","stiffness","toggleWeekSpring","DayButton","abbrev","scrollTo","x","y","animated","Badge","bigContainer","ItemSeparatorComponent","buttonContainer","Animated","dayHighlight","toggleWeekContainer","toggleWeekHighlight","toggleWeekButton","ref","contentContainerStyle","paddingBottom","removeClippedSubviews","Portal","fabStyle","onStateChange","emptyStateContainer","tentemoji","topEditBtn","topEditBtnText","dayHeader","Monitor","NIGHTHOURS","tableTitle","BLACKTENT","BLUETENT","WHITETENT","Info","hourPos","tentCheckPos","missPos","gracePos","tentPos","pCheckPos","ratioSignImg","BulletPoint","autoScroll","yPos","kvillesign","onLayout","event","layout","nativeEvent","flexArr","tableText","tableWrapper","tableRow","kvilleBoundary","tentHeaderBox","tentTableRow","timeOfDayMapping","0","1","minMapping","colorMapping","Shifts","parsedShifts","start","startDay","end","fetchCurrentUserShifts","markComplete","useShiftUpdate","isEmpty","screenContainer","SectionList","sections","startTimeOfDay","startHour","startMin","endDay","endTimeOfDay","endHour","endMin","shiftTime","timeText","renderSectionHeader","sectionHeader","renderSectionFooter","stickySectionHeadersEnabled","CustomizedSnackbar","snackbar","TouchableWithoutFeedback","Drawer","createDrawerNavigator","NavigationStack","setInitialState","isInfoVisible","setInfoVisible","isScheduleInfoVisible","setScheduleInfoVisible","toggleInfo","toggleScheduleInfo","AvailabilityText","InfoText","ScheduleText","Linking","getInitialURL","savedStateString","JSON","parse","restoreState","NavigationContainer","stringify","initialRouteName","screenOptions","drawerType","HomeScreen","swipeEnabled","CreateGroupScreen","JoinGroupScreen","GroupInfoScreen","AvailabilityScreen","headerStyle","headerLeft","headerRight","textView","scrollToOverflowEnabled","closeBtn","ShiftsScreen","ScheduleScreen","MonitorScreen","InfoScreen","StatusBar","ForgotPassword","sendPasswordResetEmail","combineReducers","userReducer","snackbarReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","thunk","persistor","persistStore","apps","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","QueryClient","App","setState","groupCodes","TaskManager","eventType","region","Location","Enter","loggedIn","Exit","latitude","longitude","radius","location","SplashScreen","onAuthStateChanged","onLayoutRootView","client","loading","onReady","RegisterScreen","LoginScreen","ForgotPasswordScreen","headerTitleStyle"],"mappings":"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","file":"static/js/app.3dc23699.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DukeBasketballLogoSpace.2ce598c8.png\";","module.exports = __webpack_public_path__ + \"static/media/coachKLogo.05a5d5ff.png\";","module.exports = __webpack_public_path__ + \"static/media/tentemoji.b41cdda7.png\";","module.exports = __webpack_public_path__ + \"static/media/DukeBasketballLogo.52f6c490.png\";","module.exports = __webpack_public_path__ + \"static/media/kvilleBoundary.43414a24.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kvillesign.fc81b6fa.jpg\";","export const lightTheme = {\n  background: '#F2F2F7', //#C2C6D0',\n  primary: '#00539B',\n  primaryContainer: '#F2F2F7', //'#C2C6D0',\n  secondary: '#1E3F66',\n  tertiary: '#2E5984',\n  quaternary: '#0FA4DC',\n  white1: '#FFFAFACC',\n  white2: '#f6f6f6',\n  grey1: '#3a3b3c',\n  grey2: '#656565',\n  grey3: '#e5e5e5',\n  grey4: '#555555',\n  grey5: '#8E8E93',\n  grey6: '#a9a9a9',\n  popOutBorder: '#d8d9dc',\n  greyModal: '#565656',\n  text1: '#fff',\n  text2: '#000',\n  icon1: '#fff',\n  icon2: '#000',\n  error: '#E01805',\n};\n\nexport const generalTheme = {\n  roundness: 5,\n};\n\nexport const darkTheme = {\n  \n}","import { createContext, useContext, useState } from 'react';\nimport { lightTheme, darkTheme, generalTheme } from '../theme/theme'\n\nexport const ThemeContext = createContext();\n\nconst ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState(lightTheme);\n  //setTheme(darkTheme)\n  return (\n    <ThemeContext.Provider value={{theme:theme, generalTheme: generalTheme}}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport default ThemeProvider;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const snackbarSlice = createSlice({\n  name: 'snackbar',\n  initialState: {\n    snackbarOpen: false,\n    snackbarMessage: '',\n  },\n  reducers: {\n    toggleSnackBar: (state) => {\n      state.snackbarOpen = !state.snackbarOpen;\n    },\n    setSnackMessage: (state, action) => {\n      state.snackbarMessage = action.payload;\n    },\n  },\n});\n\nexport const { toggleSnackBar, setSnackMessage } = snackbarSlice.actions;\n\nexport default snackbarSlice.reducer;\n","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  TextInput,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Dimensions,\n  Image,\n  KeyboardAvoidingView,\n} from 'react-native';\nimport { useDispatch } from 'react-redux';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport { useTheme } from '../../context/ThemeProvider';\nimport { toggleSnackBar, setSnackMessage } from '../../redux/reducers/snackbarSlice';\nimport DukeBasketballLogo from '../../assets/DukeBasketballLogoSpace.png';\n\nconst window = Dimensions.get('window');\n\nexport default function Register(props) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [groupCode, setGroupCode] = useState([]);\n  const [secureTextEntry, setSecureTextEntry] = useState(true);\n  const [dimensions, setDimensions] = useState({ window });\n  const { theme } = useTheme();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const subscription = Dimensions.addEventListener('change', ({ window }) => {\n      setDimensions({ window });\n    });\n    return () => subscription?.remove();\n  });\n\n  function onRegister() {\n    if (username.length == 0 || email.length == 0 || password.length == 0) {\n      dispatch(setSnackMessage('Please fill out everything'));\n      dispatch(toggleSnackBar());\n      return;\n    }\n    if (password.length < 6) {\n      dispatch(setSnackMessage('Passwords must be at least 6 characters'));\n      dispatch(toggleSnackBar());\n      return;\n    }\n    firebase\n      .firestore()\n      .collection('users')\n      .where('username', '==', username)\n      .get()\n      .then((snapshot) => {\n        if (snapshot.empty) {\n          firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then(() => {\n              // firebase\n              //   .auth()\n              //   .setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n              //   .then(() => console.log('persistence set'))\n              //   .catch((error) => console.error(error));\n              firebase\n                .firestore()\n                .collection('users')\n                .doc(firebase.auth().currentUser.uid)\n                .set({\n                  email,\n                  username,\n                  groupCode,\n                })\n                .catch((error) => console.error(error));\n            })\n            .catch((error) => {\n              console.error(error);\n              dispatch(setSnackMessage('The email address is already in use by another account'));\n              dispatch(toggleSnackBar());\n            });\n        } else {\n          dispatch(setSnackMessage('Username Taken'));\n          dispatch(toggleSnackBar());\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        dispatch(setSnackMessage('Something went wrong'));\n        dispatch(toggleSnackBar());\n      });\n  }\n\n  return (\n    <View style={styles(theme).container}>\n      <KeyboardAvoidingView behavior='padding' style={styles(theme).container}>\n        <View style={styles(theme).banner}>\n          <Text style={{ color: theme.white2, fontSize: 35, marginTop: 50 }}>REGISTER</Text>\n          <View style={styles(theme).imageContainer}>\n            <Image\n              style={[\n                styles(theme).logo,\n                {\n                  flex: 1,\n                  tintColor: '#D9D9D9',\n                  opacity: 0.2,\n                  aspectRatio: 0.84,\n                  width: 50,\n                  top: -30,\n                  resizeMode: 'repeat',\n                },\n              ]}\n              source={DukeBasketballLogo}\n            />\n            <View style={styles(theme).boldImage}>\n              <Image style={styles(theme).logo} source={DukeBasketballLogo} />\n            </View>\n          </View>\n          <View\n            style={[\n              styles(theme).slant,\n              {\n                borderRightWidth: dimensions.window.width,\n                borderTopWidth: dimensions.window.height / 5,\n              },\n            ]}\n          ></View>\n        </View>\n\n        <View style={styles(theme).formCenter}>\n          <View style={styles(theme).section}>\n            <View style={styles(theme).icon}>\n              <Icon name='account-circle-outline' color={theme.icon2} size={25} />\n            </View>\n            <TextInput\n              style={styles(theme).textInput}\n              placeholder='Username'\n              value={username}\n              //keyboardType='twitter'\n              onChangeText={(username) =>\n                setUsername(\n                  username\n                    .normalize('NFD')\n                    .replace(/[\\u0300-\\u036f]/g, '')\n                    .replace(/\\s+/g, '')\n                    .replace(/[^a-z0-9]/gi, '')\n                )\n              }\n            />\n          </View>\n\n          <View style={styles(theme).section}>\n            <View style={styles(theme).icon}>\n              <Icon name='email-outline' color={theme.icon2} size={25} />\n            </View>\n            <TextInput\n              style={styles(theme).textInput}\n              placeholder='Email'\n              value={email}\n              keyboardType={'email-address'}\n              onChangeText={(email) => setEmail(email)}\n            />\n          </View>\n\n          <View style={styles(theme).section}>\n            <View style={styles(theme).icon}>\n              <Icon name='lock-outline' color={theme.icon2} size={25} />\n            </View>\n            <TextInput\n              style={styles(theme).textInput}\n              placeholder='Password'\n              value={password}\n              secureTextEntry={secureTextEntry}\n              onChangeText={(password) => setPassword(password)}\n            />\n            <TouchableOpacity\n              style={{ marginRight: 10 }}\n              onPress={() => {\n                setSecureTextEntry(!secureTextEntry);\n                return false;\n              }}\n            >\n              <Icon name={secureTextEntry ? 'eye-off-outline' : 'eye-outline'} color={theme.icon2} size={20} />\n            </TouchableOpacity>\n          </View>\n\n          <TouchableOpacity style={styles(theme).button} onPress={onRegister}>\n            <Text style={{ color: theme.text1 }}>Register</Text>\n          </TouchableOpacity>\n        </View>\n      </KeyboardAvoidingView>\n      <View style={styles(theme).bottomButton}>\n        <Text>Already have an account? </Text>\n        <Text\n          style={{ textAlign: 'center', color: theme.quaternary }}\n          onPress={() => props.navigation.navigate('Login')}\n        >\n          Sign In\n        </Text>\n      </View>\n    </View>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: theme.white2,\n    },\n    banner: {\n      //position: 'absolute',\n      backgroundColor: theme.primary,\n      width: '100%',\n      height: '50%',\n      //justifyContent: 'center',\n      alignItems: 'center',\n    },\n    imageContainer: {\n      position: 'absolute',\n      bottom: 0,\n      left: 30,\n      backgroundColor: 'transparent',\n      width: 90,\n      height: '100%',\n      //justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 2,\n      margin: 0,\n    },\n    // dimImage: {\n    //   borderWidth: 1,\n    //   height: '100%',\n    //   width: 90,\n    //   alignItems: 'center',\n    // },\n    boldImage: {\n      position: 'absolute',\n      bottom: 0,\n      backgroundColor: theme.white2,\n      borderRadius: 15,\n      width: 90,\n      height: 70,\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 2,\n    },\n    logo: {\n      height: 60,\n      width: 60,\n      resizeMode: 'contain',\n    },\n    slant: {\n      position: 'absolute',\n      bottom: 0,\n      zIndex: 1,\n      marginLeft: 0,\n      //backgroundColor: '#fff',\n      height: 0,\n      width: 0,\n      borderStyle: 'solid',\n      borderTopWidth: 150,\n      borderRightColor: theme.white2,\n      borderBottomColor: theme.white2,\n      borderTopColor: 'transparent',\n      //borderLeftColor: 'transparent',\n    },\n    formCenter: {\n      justifyContent: 'start',\n      alignContent: 'center',\n      flex: 1,\n      margin: 25,\n    },\n    section: {\n      flexDirection: 'row',\n      //justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: theme.white2,\n      height: 40,\n      borderRadius: 20,\n      margin: 10,\n      //marginTop: 10,\n      shadowColor: theme.primary,\n      elevation: 20,\n      shadowOffset: { width: 0, height: 4 },\n      shadowOpacity: 0.3,\n      shadowRadius: 7,\n    },\n    icon: {\n      position: 'absolute',\n      left: -10,\n      height: 50,\n      width: 50,\n      borderRadius: 100,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: theme.white2,\n      shadowColor: theme.primary,\n      elevation: 20,\n      shadowOffset: { width: 0, height: 4 },\n      shadowOpacity: 0.3,\n      shadowRadius: 7,\n    },\n    textInput: {\n      marginLeft: 50,\n      flexDirection: 'row',\n      flex: 1,\n      backgroundColor: theme.white2,\n      padding: 10,\n      borderRadius: 20,\n      height: '100%',\n      //outlineWidth: 0,\n      //justifyContent: \"center\",\n    },\n    button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'row',\n      width: '100%',\n      backgroundColor: theme.primary,\n      height: 30,\n      marginTop: 40,\n      borderRadius: 50,\n    },\n    bottomButton: {\n      flexDirection: 'row',\n      alignContent: 'center',\n      justifyContent: 'center',\n      borderTopColor: 'gray',\n      borderTopWidth: 1,\n      padding: 10,\n      textAlign: 'center',\n      marginBottom: 60,\n    },\n  });\n","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  TouchableOpacity,\n  Text,\n  StyleSheet,\n  TextInput,\n  Dimensions,\n  Image,\n  KeyboardAvoidingView,\n  SafeAreaView,\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useDispatch } from 'react-redux';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\n\nimport DukeBasketballLogo from '../../assets/DukeBasketballLogoSpace.png';\nimport { useTheme } from '../../context/ThemeProvider';\nimport { toggleSnackBar, setSnackMessage } from '../../redux/reducers/snackbarSlice';\n\nconst window = Dimensions.get('window');\n\nexport default function Login(props) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [secureTextEntry, setSecureTextEntry] = useState(true);\n  const [isReady, setIsReady] = useState(false);\n  const { theme } = useTheme();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let mounted = true\n    async function prepare() {\n      const oldEmail = await AsyncStorage.getItem('USER_EMAIL');\n      const oldPassword = await AsyncStorage.getItem('USER_PASSWORD');\n      if (oldEmail && oldPassword) {\n        console.log('oldEmail', oldEmail)\n        console.log('oldPassword', oldPassword);\n        firebase\n          .auth()\n          .signInWithEmailAndPassword(oldEmail, oldPassword)\n          .then(() => {\n            console.log('login successful');\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      } else {\n        setIsReady(true);\n      }\n    }\n\n    if (mounted) {\n      prepare();\n    }\n    return () => (mounted = false);\n  });\n\n  function onSignUp() {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        console.log('login successful');\n        AsyncStorage.setItem('USER_EMAIL', email);\n        AsyncStorage.setItem('USER_PASSWORD', password);\n      })\n      .catch((error) => {\n        console.log(error);\n        let message = 'Login unsuccessful';\n        if (error.message.includes('The email address is badly formatted')) {\n          message = 'Not a valid email';\n        }\n        if (error.message.includes('There is no user record')) {\n          message = 'Account does not exist';\n        }\n        if (error.message.includes('The password is invalid')) {\n          message = 'Incorrect password';\n        }\n        dispatch(setSnackMessage(message));\n        dispatch(toggleSnackBar());\n        return;\n      });\n    //firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n    // firebase\n    //   .auth()\n    //   .setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n    //   .then(() => {\n    //     // Existing and future Auth states are now persisted in the current\n    //     // session only. Closing the window would clear any existing state even\n    //     // if a user forgets to sign out.\n    //     // ...\n    //     // New sign-in will be persisted with session persistence.\n    //     return firebase.auth().signInWithEmailAndPassword(email, password);\n    //   })\n    //   .catch((error) => {\n    //     // Handle Errors here.\n    //     const errorCode = error.code;\n    //     const errorMessage = error.message;\n    //     console.log(errorCode, errorMessage);\n    //   });\n  }\n\n  if (!isReady) {\n    return null;\n  }\n\n  return (\n    <View style={styles(theme).container}>\n      <KeyboardAvoidingView behavior='padding' style={styles(theme).container}>\n        <View style={styles(theme).banner}>\n          <Text style={{ color: theme.white2, fontSize: 35, marginTop: 50 }}>LOGIN</Text>\n          <View style={styles(theme).imageContainer}>\n            <Image\n              style={[\n                styles(theme).logo,\n                {\n                  flex: 1,\n                  tintColor: '#D9D9D9',\n                  opacity: 0.2,\n                  aspectRatio: 0.84,\n                  width: 50,\n                  top: -30,\n                  resizeMode: 'repeat',\n                },\n              ]}\n              resizeMode={'repeat'}\n              source={DukeBasketballLogo}\n            />\n            <View style={styles(theme).boldImage}>\n              <Image style={styles(theme).logo} source={DukeBasketballLogo} />\n            </View>\n          </View>\n          <View\n            style={[\n              styles(theme).slant,\n              {\n                borderRightWidth: window.width,\n                borderTopWidth: window.height / 5,\n              },\n            ]}\n          ></View>\n        </View>\n        <View style={styles(theme).formCenter}>\n          <View style={styles(theme).section}>\n            <View style={styles(theme).icon}>\n              <Icon name='account-circle-outline' color={theme.icon2} size={25} />\n            </View>\n            <TextInput\n              style={styles(theme).textInput}\n              placeholder='Email'\n              value={email}\n              onChangeText={(email) => setEmail(email)}\n              keyboardType='email-address'\n            />\n          </View>\n\n          <View style={styles(theme).section}>\n            <View style={styles(theme).icon}>\n              <Icon name='lock-outline' color={theme.icon2} size={25} />\n            </View>\n            <TextInput\n              style={styles(theme).textInput}\n              placeholder='Password'\n              secureTextEntry={secureTextEntry}\n              value={password}\n              onChangeText={(password) => setPassword(password)}\n            />\n            <TouchableOpacity\n              style={{ marginRight: 10 }}\n              onPress={() => {\n                setSecureTextEntry(!secureTextEntry);\n                return false;\n              }}\n            >\n              <Icon name={secureTextEntry ? 'eye-off-outline' : 'eye-outline'} color={theme.icon2} size={20} />\n            </TouchableOpacity>\n          </View>\n\n          <TouchableOpacity style={styles(theme).button} onPress={onSignUp}>\n            <Text style={{ color: theme.text1 }}>Sign In</Text>\n          </TouchableOpacity>\n        </View>\n      </KeyboardAvoidingView>\n      <View style={styles(theme).bottomButton}>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignContent: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Don't have an account? </Text>\n          <Text\n            title='Register'\n            onPress={() => props.navigation.navigate('Register')}\n            style={{ textAlign: 'center', color: theme.quaternary }}\n          >\n            Sign Up\n          </Text>\n        </View>\n        <View style={{ width: '100%', justifyContent: 'center', alignItems: 'center' }}>\n          <Text\n            style={{ margin: 10, color: theme.quaternary, textAlign: 'center' }}\n            onPress={() => props.navigation.navigate('ForgotPassword')}\n          >\n            Forgot Password?\n          </Text>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: theme.white2,\n    },\n    banner: {\n      //position: 'absolute',\n      backgroundColor: theme.primary,\n      width: '100%',\n      height: '50%',\n      //justifyContent: 'center',\n      alignItems: 'center',\n    },\n    imageContainer: {\n      position: 'absolute',\n      bottom: 0,\n      left: 30,\n      backgroundColor: 'transparent',\n      width: 90,\n      height: '100%',\n      //justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 2,\n      margin: 0,\n    },\n    // dimImage: {\n    //   borderWidth: 1,\n    //   height: '100%',\n    //   width: 90,\n    //   alignItems: 'center',\n    // },\n    boldImage: {\n      position: 'absolute',\n      bottom: 0,\n      backgroundColor: theme.white2,\n      borderRadius: 15,\n      width: 90,\n      height: 70,\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 2,\n    },\n    logo: {\n      height: 60,\n      width: 60,\n      resizeMode: 'contain',\n    },\n    slant: {\n      position: 'absolute',\n      bottom: 0,\n      zIndex: 1,\n      marginLeft: 0,\n      //backgroundColor: '#fff',\n      height: 0,\n      width: 0,\n      borderStyle: 'solid',\n      borderTopWidth: 150,\n      borderRightColor: theme.white2,\n      borderBottomColor: theme.whit2,\n      borderTopColor: 'transparent',\n      //borderLeftColor: 'transparent',\n    },\n    formCenter: {\n      justifyContent: 'center',\n      flex: 1,\n      margin: 25,\n    },\n    section: {\n      flexDirection: 'row',\n      //justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: theme.white2,\n      height: 40,\n      borderRadius: 20,\n      margin: 10,\n      shadowColor: theme.primary,\n      elevation: 20,\n      shadowOffset: { width: 0, height: 4 },\n      shadowOpacity: 0.3,\n      shadowRadius: 7,\n    },\n    icon: {\n      position: 'absolute',\n      left: -10,\n      height: 50,\n      width: 50,\n      borderRadius: 100,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: theme.white2,\n      shadowColor: theme.primary,\n      elevation: 20,\n      shadowOffset: { width: 0, height: 4 },\n      shadowOpacity: 0.3,\n      shadowRadius: 7,\n    },\n    textInput: {\n      marginLeft: 50,\n      flexDirection: 'row',\n      flex: 1,\n      backgroundColor: theme.white2,\n      padding: 10,\n      borderRadius: 20,\n      height: '100%',\n      //outlineWidth: 0,\n      //justifyContent: \"center\",\n    },\n    button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'row',\n      width: '100%',\n      backgroundColor: theme.primary,\n      height: 30,\n      marginTop: 40,\n      borderRadius: 50,\n    },\n    bottomButton: {\n      //flexDirection: 'row',\n      alignContent: 'center',\n      justifyContent: 'center',\n      borderTopColor: 'gray',\n      borderTopWidth: 1,\n      padding: 10,\n      textAlign: 'center',\n      marginBottom: 30,\n    },\n  });\n","import React from 'react'\nimport {\n  Text,\n  View,\n  StyleSheet,\n  SafeAreaView,\n  TouchableOpacity,\n\n} from 'react-native';\n\nexport default function About({navigation}) {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <TouchableOpacity onPress={()=>navigation.goBack()} style={{backgroundColor: '#00f'}}>\n        <Text style={{color:'#fff'}}>Go Back</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n","import React from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity } from 'react-native';\nimport Modal from 'react-native-modal';\nimport { useTheme } from '../context/ThemeProvider';\n//import { Divider } from 'react-native-paper';\n\n/**\n * Parent Function for Confirmation Modal component\n * This Modal has little to no customization for uniform look\n * @param {function} toggleModal --  unction for toggling the modal\n * @param {string} userStyle -- options: ('dark' | 'light') background color of modal and text color\n * @param {function} buttonAction -- action taken the confirmation button \n * @param {string} body -- text prompt for the confirmation\n * @param {string} buttonText -- text for confirmation button\n * \n * @param {props} props --\n    **NOTE: must include normal modal props in the props of the Modal such as:\n        isVisible={isModalVisible} \n        onBackdropPress={() => setModalVisible(false)}\n        onSwipeComplete = {toggleModal} \n\n * @returns Modal Component\n */\nconst ConfirmationModal = ({ toggleModal, buttonAction, body, buttonText, userStyle, ...props }) => {\n  {\n    const { theme } = useTheme();\n\n    //set up default styles for light and dark themes\n    let backgroundColor, opacity, bodyText;\n    userStyle == 'light'\n      ? ((backgroundColor = '#fff'), (opacity = '92%'), (bodyText = 'black'))\n      : ((backgroundColor = '#565656'), (opacity = '100%'), (bodyText = '#fff'));\n\n    return (\n      <Modal\n        style={styles(theme).BottomModalView}\n        swipeDirection={['down']}\n        backdropTransitionOutTiming={0}\n        keyboardDismissMode={'on-drag'}\n        {...props}\n      >\n        <View>\n          <View style={[styles(theme).confirmationPop, { backgroundColor: backgroundColor, opacity: opacity }]}>\n            <View\n              style={{\n                height: '60%',\n                width: '100%',\n                justifyContent: 'center',\n                borderBottomWidth: 1,\n                borderBottomColor: '#cfcfcf',\n                padding: 10,\n              }}\n            >\n              <Text style={[styles(theme).confirmationText, { color: bodyText }]}>{body}</Text>\n            </View>\n\n            <TouchableOpacity\n              onPress={() => {\n                buttonAction();\n                toggleModal();\n              }}\n              style={{ height: '40%', width: '100%' }}\n            >\n              <View style={{ height: '100%', width: '100%', justifyContent: 'center' }}>\n                <Text style={[styles(theme).confirmationHeader, { color: theme.error }]}>{buttonText}</Text>\n              </View>\n            </TouchableOpacity>\n          </View>\n\n          <TouchableOpacity\n            onPress={() => toggleModal()}\n            style={[styles(theme).confirmationBottomBtn, { backgroundColor: backgroundColor, opacity: opacity }]}\n          >\n            <Text style={[styles(theme).confirmationHeader, { color: '#1988f8' }]}>Cancel</Text>\n          </TouchableOpacity>\n        </View>\n      </Modal>\n    );\n  }\n};\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    BottomModalView: {\n      //Modal Style for placing at bottom\n      margin: 0,\n      justifyContent: 'flex-end',\n    },\n    confirmationPop: {\n      //Style for top part container\n      width: '95%',\n      height: 150,\n      alignSelf: 'center',\n      alignItems: 'center',\n      justifyContent: 'space-evenly',\n      borderRadius: 20,\n      margin: 15,\n\n      // shadowColor: '#171717',\n      // shadowOffset: { width: 0, height: -5 },\n      // shadowOpacity: 0.5,\n      // shadowRadius: 20,\n      // elevation: 5,\n    },\n    confirmationHeader: {\n      //style for text of buttons\n      fontWeight: '600',\n      textAlign: 'center',\n      fontSize: 23,\n    },\n    confirmationText: {\n      //style for prompt text\n      textAlign: 'center',\n      justifyContent: 'center',\n      padding: 5,\n    },\n    confirmationBottomBtn: {\n      //style for cancel button\n      color: theme.text1,\n      alignSelf: 'center',\n      width: '95%',\n      borderRadius: 15,\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: 65,\n      marginBottom: 15,\n\n      shadowColor: '#171717',\n      shadowOffset: { width: 0, height: -5 },\n      shadowOpacity: 0.5,\n      shadowRadius: 20,\n      elevation: 5,\n    },\n  });\n\nexport { ConfirmationModal };\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    currentUser: null,\n    currGroupCode: '',\n    currGroupName: '',\n    currUserName: '',\n    currTentType: '',\n    currGroupRole: '',\n  },\n  reducers: {\n    setCurrentUser: (state, action) => {\n      state.currentUser = action.payload;\n    },\n    reset: (state) => {\n      state.currentUser = null;\n      state.currGroupCode = '';\n      state.currGroupName = '';\n      state.currUserName = '';\n      state.currTentType = '';\n      state.currGroupRole = '';\n    },\n    setGroupCode: (state, action) => {\n      state.currGroupCode = action.payload;\n    },\n    setGroupName: (state, action) => {\n      state.currGroupName = action.payload;\n    },\n    setUserName: (state, action) => {\n      state.currUserName = action.payload;\n    },\n    setTentType: (state, action) => {\n      state.currTentType = action.payload;\n    },\n    setGroupRole: (state, action) => {\n      state.currGroupRole = action.payload;\n    },\n  },\n});\n\nexport const { setCurrentUser, reset, setGroupCode, setGroupName, setUserName, setTentType, setGroupRole } =\n  userSlice.actions;\n\nexport default userSlice.reducer;\n","import React, { useState } from 'react';\nimport { Text, View, StyleSheet, TextInput, TouchableOpacity, SafeAreaView } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\n\nimport { useTheme } from '../context/ThemeProvider';\nimport { ConfirmationModal } from '../components/ConfirmationModal';\nimport { reset } from '../redux/reducers/userSlice';\nimport { setSnackMessage, toggleSnackBar } from '../redux/reducers/snackbarSlice';\n\nconst PERSISTENCE_KEY = 'NAVIGATION_STATE_V1';\n\nexport default function AccountSettings({ navigation }) {\n  const groups = useSelector((state)=>state.user.currentUser.groupCode);\n  const [isConfirmationVisible, setConfirmationVisible] = useState(false);\n  const { theme } = useTheme();\n  const dispatch = useDispatch();\n\n  async function deleteUser() {\n    toggleConfirmation();\n    if (groups.length == 0) {\n      const user = firebase.auth().currentUser;\n      const credentials = firebase.auth.EmailAuthProvider.credential(user.email, '123456');\n      await user.reauthenticateWithCredential(credentials).catch((error) => console.error(error));\n\n      await AsyncStorage.multiRemove(['USER_EMAIL', 'USER_PASSWORD', PERSISTENCE_KEY]);\n      firebase\n        .firestore()\n        .collection('users')\n        .doc(firebase.auth().currentUser.uid)\n        .delete()\n        .catch((error) => console.error(error));\n      await firebase\n        .auth()\n        .currentUser.delete()\n        .catch((error) => console.error(error));\n      dispatch(reset());\n    } else {\n      dispatch(setSnackMessage('Delete or leave all current groups before deleting account'));\n      dispatch(toggleSnackBar());\n    }\n  }\n\n  async function onLogout() {\n    await AsyncStorage.multiRemove(['USER_EMAIL', 'USER_PASSWORD', PERSISTENCE_KEY]);\n    await firebase.auth().signOut();\n    dispatch(reset());\n  }\n\n  function toggleConfirmation() {\n    setConfirmationVisible(!isConfirmationVisible);\n  }\n\n  return (\n    <SafeAreaView style={styles(theme).settingsContainer}>\n      <View style={styles(theme).topBanner}>\n        <TouchableOpacity onPress={() => navigation.goBack()}>\n          <Text style={{ fontSize: 18, fontWeight: '700', color: theme.primary }}>Back</Text>\n        </TouchableOpacity>\n        <Text style={[styles(theme).headerText, { color: theme.text2, alignSelf: 'center', fontSize: 26 }]}>\n          Settings\n        </Text>\n\n        {/* <TouchableOpacity onPress={handleSubmit}>\n          <Text style={{ fontSize: 18, fontWeight: '700', color: theme.primary }}>Save</Text>\n        </TouchableOpacity> */}\n      </View>\n      <TouchableOpacity onPress={() => navigation.navigate('AboutScreen')}>\n        <Text>About</Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={onLogout}>\n        <Text>Logout</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles(theme).leaveButton} onPress={toggleConfirmation}>\n        <Text style={{ color: theme.error, fontSize: 20, fontWeight: '500' }}>Delete Account</Text>\n      </TouchableOpacity>\n\n      <ConfirmationModal\n        body={\n          'Are you sure you want to DELETE your account? This will delete any groups you have created and remove you from any groups you have joined.'\n        }\n        buttonText={'Delete account'}\n        buttonAction={() => {\n          deleteUser();\n        }}\n        toggleModal={toggleConfirmation}\n        isVisible={isConfirmationVisible}\n        onBackdropPress={() => setConfirmationVisible(false)}\n        onSwipeComplete={toggleConfirmation}\n        userStyle='light'\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    settingsContainer: {\n      flexDirection: 'column',\n      alignItems: 'center',\n      backgroundColor: theme.background,\n      width: '100%',\n      height: '100%',\n      borderTopRightRadius: 20,\n      borderTopLeftRadius: 20,\n    },\n    topBanner: {\n      //for the top container holding top 'settings' and save button\n      flexDirection: 'row',\n      backgroundColor: theme.background,\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      marginBottom: 30,\n      width: '100%',\n      paddingVertical: 10,\n      borderBottomWidth: 0.5,\n      borderColor: theme.popOutBorder,\n      borderTopRightRadius: 20,\n      borderTopLeftRadius: 20,\n      paddingHorizontal: 20,\n    },\n    headerContainer: {\n      flexDirection: 'row',\n      width: '90%',\n      justifyContent: 'space-between',\n      marginBottom: 15,\n    },\n    headerText: {\n      //text for different setting headers\n      fontSize: 20,\n      fontWeight: '700',\n      color: theme.grey2,\n    },\n    modalText: {\n      //text for diff modal texts\n      fontSize: 18,\n      fontWeight: '500',\n    },\n    textInput: {\n      backgroundColor: '#fff',\n      paddingVertical: 10,\n      paddingHorizontal: 15,\n      width: '90%',\n      fontSize: 18,\n      fontWeight: '500',\n      textAlign: 'left',\n      borderRadius: 15,\n      marginBottom: 23,\n      // borderColor: theme.grey2,\n      // borderWidth: 1,\n    },\n    tentChangeListItem: {\n      //Style of an item in the member tentChange modal (for creator only)\n      flexDirection: 'row',\n      height: '33%',\n      width: '95%',\n      justifyContent: 'center',\n      alignSelf: 'center',\n      alignItems: 'center',\n      borderBottomWidth: 1,\n      borderColor: '#cfcfcf',\n    },\n    tentChangeBtn: {\n      //remove button for removing member if the user is the Creator\n      flexDirection: 'row',\n      width: '90%',\n      height: 45,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      borderRadius: 15,\n      // borderColor: theme.grey2,\n      // borderWidth: 1,\n      paddingHorizontal: 15,\n    },\n    BottomModalView: {\n      margin: 0,\n      justifyContent: 'flex-end',\n    },\n    leaveButton: {\n      backgroundColor: '#fff',\n      borderRadius: 15,\n      padding: 15,\n      position: 'absolute',\n      bottom: '5%',\n      width: '90%',\n      alignItems: 'center',\n      borderWidth: 0.5,\n      borderColor: theme.popOutBorder,\n    },\n  });\n","import React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nimport AboutScreen from '../screens/About';\nimport AccountSettingsScreen from '../screens/AccountSettings';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function StackNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name='AccountSettingsScreen' component={AccountSettingsScreen} options={{ headerShown: false }} />\n      <Stack.Screen name='AboutScreen' component={AboutScreen} options={{ headerShown: false }} />\n    </Stack.Navigator>\n  );\n}\n","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nlet GRACE;\nconst MAXBLOCK = 8; //max half hours minus one (not including current time block) person can be scheduled for\n\n//Colors of each member, first is for 'empty'\n// prettier-ignore\nconst colors = ['#ececec', '#dd7e6b', '#ea9999', '#f9cb9c', '#ffe599', '#b6d7a8', '#a2c4c9',\n  '#a4c2f4' , '#fed9c9', '#b4a7d6', '#d5a6bd', '#e69138', '#6aa84f'];\n\nexport async function createGroupSchedule(groupCode, tentType) {\n  let numDay;\n  let numNight;\n\n  //based on the current tentType, adjust # of people needed in tent for day and night hours\n  //correspondingly\n  switch (tentType) {\n    case 'Black':\n      numDay = 2;\n      numNight = 10;\n      break;\n    case 'Blue':\n      numDay = 1;\n      numNight = 6;\n      break;\n    default:\n      numDay = 1;\n      numNight = 2;\n  }\n\n  //Initialize array of objects (memberArr), group schedule array, and previous members\n  //(members who had the last iteration of shifts)\n  let memberArr = new Array();\n  let groupScheduleArr = new Array(336);\n  let prevMember1 = null;\n  let prevMember2 = null;\n\n  //initialize member IDs array for updating hrs and colors\n  let memberIDs = [{ id: '12345', name: 'empty', color: '#ececec', changedHrs: 0 }];\n\n  //****input grace periods in groupScheduleArr, \"GRACE\" at each index****\n\n  //adds each member as an object to the memberArr\n  await firebase\n    .firestore()\n    .collection('groups') //UPDATE THIS TO 'groups' in real cases ******!!!\n    //.collection('groupsTest')\n    .doc(groupCode)\n    .collection('members')\n    .get()\n    .then((collSnap) => {\n      collSnap.forEach((doc) => {\n        //array of boolean values indicating availability\n        let availability = doc.data().availability;\n        let name = doc.data().name;\n        let hours = 0;\n        let consecutive = 0;\n        let id = doc.id;\n        let shifts = new Array(336);\n        shifts.fill(false);\n\n        //member name and id object (used to update hrs in schedule page)\n        let member = {\n          id,\n          name,\n          color: '',\n          changedHrs: 0,\n        };\n\n        memberIDs.push(member);\n\n        //member object\n        let current = {\n          name,\n          hours, //normalized by the half hour\n          availability, //array of 336 booleans\n          consecutive,\n          id,\n          shifts, //# of 30min shifts done consecutively\n        };\n        ////console.log(\"Current member object\", current);\n        memberArr.push(current); //add member to array\n      });\n    });\n  \n  if (memberArr.length == 1) {\n    throw 'Not enough members';\n  }\n\n  //promise to make sure all members are added before trying to read them\n\n  //console.log(\"tent type\", tentType, numDay, numNight);\n\n  //** FOR LOOP TO CREATE GROUP SCHEDULE\n  //total of 336 half hours in a week (48*7)\n  for (let time = 0; time < 336; time++) {\n    //iterate each half hour index of group schedule\n\n    //**FOR NIGHT TIME SHIFTS ONLY\n    //night time (starts at 1am-7am), so index 2 to 13\n    if (time % 48 == 2) {\n      //if night time, add the entire section as a block\n\n      sortMembers(time, memberArr); //sorts so lowest hours and available members go first\n      console.log('memberArr', memberArr);\n\n      //checks if the previous shift is still available\n      //If they are, shift their positions in the array to the beginning\n      if (prevMember1.availability[time]) {\n        let idxOfUsr = memberArr.findIndex((element) => element == prevMember1);\n\n        memberArr.splice(idxOfUsr, 1);\n        memberArr.unshift(prevMember1);\n        //console.log('member array at night', memberArr);\n      }\n      if (numDay == 2) {\n        if (prevMember2.availability[time]) {\n          let idxOfUsr = memberArr.findIndex((element) => element == prevMember2);\n\n          memberArr.splice(idxOfUsr, 1);\n          memberArr.unshift(prevMember2);\n          //console.log('member array at night', memberArr);\n        }\n      }\n\n      //indexes for all 12 half hours of night shift (from index 2 to index 13)\n      for (let nightHour = 0; nightHour < 12; nightHour++) {\n        //depending on how many are needed for each night (10 for 'black', 6 for 'blue', etc), index through each\n        for (let memberIdx = 0; memberIdx < numNight; memberIdx++) {\n          //if first member in sorted array and is available, set index of group array to that member\n          if (memberIdx == 0 && memberArr[0].availability[time]) {\n            groupScheduleArr[nightHour + time] = memberArr[0].name;\n            memberArr[0].shifts[nightHour + time] = true;\n            memberArr[0].hours++;\n          } else if (memberIdx < memberArr.length && memberArr[memberIdx].availability[time]) {\n            //for each next member, if available add to group schedule array\n            groupScheduleArr[nightHour + time] += ' ' + memberArr[memberIdx].name;\n            memberArr[memberIdx].shifts[nightHour + time] = true;\n            memberArr[memberIdx].hours++;\n          } else {\n            //otherwise, input empty to that empty spot\n            groupScheduleArr[nightHour + time] += ' empty';\n          }\n        }\n      }\n      time += 11; //adjust index to move forward to 7am (index 14)\n      continue;\n    }\n\n    //***ALL REMAINING CODE DEALS WITH DAYTIME SHIFTS ONLY***\n\n    //deals with blocking so members have consecutive shifts of 30 min\n    if (prevMember1 && prevMember2) {\n      //if previous shifts were not 'empty' continue\n      //switches prev1 and prev2 if first person is not available and second person is for the new time so that only have to consider one case\n\n      //console.log(time + ': ' + prevMember1.name + ' consecutive hours '  + prevMember1.consecutive + ' with ' + prevMember1.hours + ' scheduled');\n      //console.log(time + ': ' + prevMember2.name + ' consecutive hours '  + prevMember2.consecutive + ' with ' + prevMember2.hours + ' scheduled');\n      if (prevMember1.availability[time] && prevMember1.consecutive < MAXBLOCK) {\n        //If prev1 is available, add them in. Otherwise, resort and add next available person\n        groupScheduleArr[time] = prevMember1.name;\n        prevMember1.shifts[time] = true;\n        prevMember1.hours++;\n        prevMember1.consecutive++;\n      } else {\n        prevMember1.consecutive = 0;\n        sortMembers(time, memberArr); //sort array by total hours and availability\n\n        if (numDay == 2 && memberArr[0] == prevMember2) {\n          if (memberArr[1].availability[time]) {\n            //if index 1 is available add that instead\n            groupScheduleArr[time] = memberArr[1].name;\n            memberArr[1].shifts[time] = true;\n            memberArr[1].hours++;\n            //memberArr[1].consecutive++;\n            prevMember1 = memberArr[1];\n          } else {\n            //otherwise no one is available and add empty\n            groupScheduleArr[time] = 'empty';\n          }\n        } else {\n          //If the first index does not equal the previous1 member\n          if (memberArr[0].availability[time]) {\n            //then add the first index instead\n            groupScheduleArr[time] = memberArr[0].name;\n            memberArr[0].shifts[time] = true;\n            memberArr[0].hours++;\n            //memberArr[0].consecutive++;\n            prevMember1 = memberArr[0];\n          } else {\n            //if not available, no one is available so add empty\n            groupScheduleArr[time] = 'empty';\n          }\n        }\n      }\n\n      //if(numDay==1) continue;\n\n      if (numDay == 2) {\n        if (prevMember2.availability[time] && prevMember2.consecutive < MAXBLOCK) {\n          //If prev2 is available, add them in. Otherwise, resort and add next available person\n          groupScheduleArr[time] += ' ' + prevMember2.name;\n          prevMember2.shifts[time] = true;\n          prevMember2.hours++;\n          prevMember2.consecutive++;\n        } else {\n          prevMember2.consecutive = 0;\n          sortMembers(time, memberArr); //sort array by total hours and availability\n          ////console.log(\"members array\", memberArr);\n          if (memberArr[0] == prevMember1) {\n            if (memberArr[1].availability[time]) {\n              //if index 1 is available add that instead\n              groupScheduleArr[time] += ' ' + memberArr[1].name;\n              memberArr[1].shifts[time] = true;\n              memberArr[1].hours++;\n              prevMember2 = memberArr[1];\n            } else {\n              //otherwise no one is available and add empty\n              groupScheduleArr[time] += ' empty';\n            }\n          } else {\n            //If the first index does not equal the previous1 member\n            if (memberArr[0].availability[time]) {\n              //then add the first index instead\n              groupScheduleArr[time] += ' ' + memberArr[0].name;\n              memberArr[0].shifts[time] = true;\n              memberArr[0].hours++;\n              prevMember2 = memberArr[0];\n            } else {\n              //if not available, no one is available so add empty\n              groupScheduleArr[time] += ' empty';\n            }\n          }\n        }\n      }\n\n      continue;\n      //might need to set prevMember2.consecutive, if tenttype is black\n    }\n\n    sortMembers(time, memberArr); //sort array by total hours and availability\n    ////console.log(\"members array\", memberArr);\n    if (memberArr[0].availability[time]) {\n      //if first index is available, add to current block in group schedule\n      groupScheduleArr[time] = memberArr[0].name;\n      memberArr[0].shifts[time] = true;\n      memberArr[0].hours++;\n    } else {\n      //otherwise, add empty\n      groupScheduleArr[time] = 'empty';\n    }\n    if (numDay == 2) {\n      if (memberArr[1].availability[time]) {\n        //if black tent, add next available person\n        groupScheduleArr[time] += ' ' + memberArr[1].name;\n        memberArr[1].shifts[time] = true;\n        memberArr[1].hours++;\n      } else if (!memberArr[1].availability[time]) {\n        groupScheduleArr[time] += ' ' + 'empty';\n      }\n    }\n    prevMember1 = memberArr[0]; //set previous variables to current block holders before iterating again\n    prevMember2 = memberArr[1];\n  } //end of large for loop\n\n  let equalHours;\n  for (let i = 0; i < memberArr.length; i++) {\n    //print hours to check for equal hours\n    if (i == 0) equalHours = memberArr[0].name + ' ' + memberArr[0].hours + ' | ';\n    else equalHours += memberArr[i].name + ' ' + memberArr[i].hours + ' | ';\n    ////console.log(memberArr[i].name, memberArr[i].hours);\n  }\n  //console.log(equalHours);\n  //});\n\n  //to update the number of scheduled hours and shifts for each member\n  for (let i = 0; i < memberArr.length; i++) {\n    firebase\n      .firestore()\n      .collection('groups') //UPDATE THIS TO 'groups' in real cases ******!!!\n      //.collection('groupsTest')\n      .doc(groupCode)\n      .collection('members')\n      .doc(memberArr[i].id)\n      .update({\n        scheduledHrs: memberArr[i].hours / 2,\n        shifts: memberArr[i].shifts,\n      });\n  }\n\n  //To update memberArr in group with their unique id and name that corresponds with the schedule\n  for (let index = 1; index < memberIDs.length; index++) {\n    memberIDs[index].color = colors[index];\n  }\n  //console.log(memberIDs);\n  firebase.firestore().collection('groups').doc(groupCode).update({\n    memberArr: memberIDs,\n  });\n  // firebase\n  //   .firestore()\n  //   .collection('groups') //UPDATE THIS TO 'groups' in real cases ******!!!\n  //   //.collection('groupsTest')\n  //   .doc(groupCode)\n  //   .collection('members')\n  //   .get()\n  //   .then((collSnap) => {\n  //     collSnap.forEach((doc) => {\n  //       let currId = doc.id;\n  //       let indexOfUser;\n  //       if (memberArr.some((e) => e.id === currId)) {\n  //         //if Name is in member array\n  //         indexOfUser = memberArr.findIndex((member) => member.id === currId);\n  //       }\n\n  //       //console.log( 'hours of ',currId,' is ', memberArr[indexOfUser].hours);\n\n  //       doc.ref.update({\n  //         scheduledHrs: memberArr[indexOfUser].hours / 2,\n  //       });\n  //     });\n  //     return collSnap;\n  //   });\n\n  // .then((collSnap) => {\n  //\n\n  // });\n\n  return groupScheduleArr; //return group schedule array\n\n  //FINAL ARRAY TAKES THE FORMAT OF:\n\n  //   ['member1 member2', 'member1 member2',  'member1 member2 member3 member4 member5 member6 member7 ...'] for black tent\n  //   ['member1 ', 'member1 ',  'member1 member2 member3 member4 member5 member6 '] for blue tent, etc\n  // index of array indicates the half hour block of the week\n  /* (ex.) Index 0 is sunday 12:00 - 12:30am\n              Index 165 is Wednesday 10:30-11:am\n                  Must do 165%48 = 3, so 4th day and 165%48 = 21 so 21st half hour (10:30am) */\n\n  //Helper Methods\n\n  //sorts member array by total hours in ascending order\n  //then sorts by availibility, people who are availible go first\n  function sortMembers(idx, array) {\n    array.sort((a, b) => a.hours - b.hours);\n    array.sort((a, b) => Number(b.availability[idx]) - Number(a.availability[idx]));\n  }\n}\n","import * as React from 'react';\nimport { ActivityIndicator, View } from 'react-native';\n\nimport { useTheme } from '../context/ThemeProvider';\n\nexport function LoadingIndicator() {\n  const { theme } = useTheme();\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: theme.background,\n      }}\n    >\n      <ActivityIndicator size='large' />\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, Text, TouchableOpacity } from 'react-native';\nimport { useTheme } from '../context/ThemeProvider';\n\n\nexport function ErrorPage({navigation}) {\n\n  const { theme } = useTheme();\n\n  return (\n    <View style={styles(theme).fill}>\n        <View>\n            <Text style={styles(theme).infoText}>Sorry, Looks like an error occured.</Text>\n            <Text style={styles(theme).infoText}>Please return to the home page</Text>  \n        </View>\n        <Text>Insert meme</Text>\n        <TouchableOpacity\n            style ={styles(theme).returnBtn}\n            onPress = {()=> navigation.navigate('Home')}\n        >\n            <Text style={{color:'white', fontSize: 25, fontWeight: '700'}}>Return Home</Text>\n        </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = (theme) =>\nStyleSheet.create({\n  fill: {\n    flex: 1,\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n  },\n  infoText:{\n    fontSize: 20,\n    fontWeight: '600',\n    marginVertical: 6,\n  },\n  returnBtn: {\n    backgroundColor: theme.primary,\n    width: '90%',\n    height: '7%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 15,\n  },\n});","import React, { Component } from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity, SafeAreaView } from 'react-native';\nimport Modal from 'react-native-modal';\nimport { useTheme } from '../context/ThemeProvider';\n\n/**\n * Parent Function for ActionSheet Modal component\n *\n * @param {function} toggleModal -- if cancelButton is true, set parameter to toggleModal function\n * @param {number} height -- vertical size of modal\n * @param {color} backgroundColor -- background color of modal\n * @param {boolean} swipeDown -- if you want the modal to be swipeable\n *      * would recommend false if modal has scrollable components such as a picker\n *      * if true, must add onSwipeComplete prop to the modal\n * @param {string} userStyle -- options: ('dark' | 'light') background color of modal and text color\n * @param {boolean} cancelButton  -- if a cancel button should be added to the modal\n * @param {Component} children -- components inside modal component;\n *\n *\n * @param {props} props --\n *   **NOTE: must include normal modal props in the props of the Modal such as:\n *       isVisible={isModalVisible}\n *       onBackdropPress={() => setModalVisible(false)}\n *       onSwipeComplete = {toggleModal}\n *       ...\n * @returns Modal Component\n */\n\nconst ActionSheetModal = ({\n  toggleModal,\n  backgroundColor,\n  swipeDown = true,\n  height = 130,\n  userStyle,\n  cancelButton = false,\n  children,\n  ...props\n}) => {\n  {\n    const { theme } = useTheme();\n\n    //set up default styles for light and dark themes\n    let background;\n    userStyle == 'light' ? ((background = '#fff')) : ((background = '#565656'));\n\n    //overwrite dark|light theme background colors if defined\n    if (backgroundColor !== undefined) background = backgroundColor;\n\n    //Height of entire modal based on if cancel button is added or not\n    const adjustedHeight = cancelButton ? height + 110 : height + 30; //accounts for vertical margin and cancel button\n\n    return (\n      <Modal\n        style={styles(theme).BottomModalView}\n        swipeDirection={swipeDown ? ['down'] : null}\n        backdropTransitionOutTiming={0}\n        keyboardDismissMode={'on-drag'}\n        {...props}\n      >\n        <SafeAreaView style={{ width: '95%', alignSelf: 'center', height: adjustedHeight }}>\n          <View\n            style={[styles(theme).TopSectionView, { backgroundColor: background, height: height }]}\n          >\n            {children}\n          </View>\n          {cancelButton ? (\n            <TouchableOpacity\n              onPress={() => toggleModal()}\n              style={[styles(theme).CancelBtn, { backgroundColor: background}]}\n            >\n              <Text style={[styles(theme).CancelBtnText, { color: '#1988f8' }]}>Cancel</Text>\n            </TouchableOpacity>\n          ) : null}\n        </SafeAreaView>\n      </Modal>\n    );\n  }\n};\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    BottomModalView: {\n      margin: 0,\n      justifyContent: 'flex-end',\n    },\n    TopSectionView: {\n      //Style for top view of action sheet\n      width: '100%',\n      alignSelf: 'center',\n      alignItems: 'center',\n      justifyContent: 'space-evenly',\n      borderRadius: 20,\n      margin: 15,\n    },\n    CancelBtn: {\n      //style for Cancel Button\n      alignSelf: 'center',\n      width: '100%',\n      borderRadius: 15,\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: 65,\n      marginBottom: 15,\n    },\n    CancelBtnText: {\n      //style for text of Cancel Button\n      fontWeight: '700',\n      textAlign: 'center',\n      fontSize: 24,\n    },\n  });\n\nexport { ActionSheetModal };\n","import {useState} from 'react';\n\nexport function useRefreshByUser(refetch) {\n  const [isRefetchingByUser, setIsRefetchingByUser] = useState(false);\n\n  async function refetchByUser() {\n    setIsRefetchingByUser(true);\n    \n    try {\n      await refetch();\n    } finally {\n      setIsRefetchingByUser(false);\n    }\n  }\n\n  return {\n    isRefetchingByUser,\n    refetchByUser,\n  };\n}\n","import React, { useState, useCallback, useRef } from 'react';\nimport { useFocusEffect } from '@react-navigation/native';\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  StyleSheet,\n  Image,\n  RefreshControl,\n  Dimensions,\n  FlatList,\n  SafeAreaView,\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Modal from 'react-native-modal';\nimport { IconButton } from 'react-native-paper';\nimport { useQuery } from 'react-query';\nimport { useDispatch } from 'react-redux';\nimport CountDown from 'react-native-countdown-component';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Svg, { Path } from 'react-native-svg';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport DukeBasketballLogo from '../assets/DukeBasketballLogo.png';\nimport { setGroupCode, setGroupName, setUserName, setTentType, setGroupRole, reset } from '../redux/reducers/userSlice';\nimport { createGroupSchedule } from '../backend/CreateGroupSchedule';\nimport { createTestCases } from '../backend/firebaseAdd';\nimport { useTheme } from '../context/ThemeProvider';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { ErrorPage } from '../components/ErrorPage';\nimport { ActionSheetModal } from '../components/ActionSheetModal';\nimport { useRefreshByUser } from '../hooks/useRefreshByUser';\n\nconst window = Dimensions.get('window');\n\nexport default function Home({ navigation }) {\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [isCountVisible, setCountVisible] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [isReady, setIsReady] = useState(false);\n  const time = useRef(Math.round((new Date(2023, 1, 5).getTime() - Date.now()) / 1000));\n\n  const { theme } = useTheme();\n  const dispatch = useDispatch();\n\n  useFocusEffect(\n    useCallback(() => {\n      let mounted = true;\n      if (mounted) {\n        setIsDisabled(false);\n      }\n      return () => {\n        mounted = false;\n      };\n    }, [])\n  );\n\n  const { isLoading, isError, error, refetch, data } = useQuery(\n    ['groups', firebase.auth().currentUser.uid],\n    fetchGroups,\n    { initialData: [], onSuccess: () => setIsReady(true) }\n  );\n\n  const { isRefetchingByUser, refetchByUser } = useRefreshByUser(refetch);\n\n  async function fetchGroups() {\n    let data;\n\n    await firebase\n      .firestore()\n      .collection('users')\n      .doc(firebase.auth().currentUser.uid)\n      .get()\n      .then((doc) => {\n        let currGroup = doc.data().groupCode;\n        //console.log(\"Current user's groups\", currGroup);\n        data = currGroup.map((group) => ({\n          code: group.groupCode,\n          groupName: group.groupName,\n        }));\n      })\n      .catch((error) => {\n        console.error(error);\n        throw error;\n      });\n    return data;\n  }\n\n  async function updateRedux(groupName, groupCode) {\n    setIsDisabled(true);\n    let groupRole;\n    await firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .get()\n      .then((doc) => {\n        //console.log('tent type', doc.data().tentType);\n        dispatch(setTentType(doc.data().tentType));\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n    await firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .collection('members')\n      .doc(firebase.auth().currentUser.uid)\n      .get()\n      .then((memDoc) => {\n        groupRole = memDoc.data().groupRole;\n        dispatch(setUserName(memDoc.data().name));\n        dispatch(setGroupRole(groupRole));\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n\n    dispatch(setGroupCode(groupCode));\n    dispatch(setGroupName(groupName));\n    try {\n      navigation.navigate('GroupInfo', {\n        //pass groupcode and group name parameters\n        groupCode: groupCode,\n        groupName: groupName,\n        groupRole: groupRole,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  function toggleModal() {\n    setModalVisible(!isModalVisible);\n  }\n\n  function toggleCount() {\n    setCountVisible(!isCountVisible);\n  }\n\n  const EmptyGroup = () => {\n    return (\n      <View\n        style={[\n          styles(theme).listItem,\n          styles(theme).shadowProp,\n          { flexDirection: 'row', justifyContent: 'left', opacity: 0.5, width: '60%', height: '10%', marginRight: 50 },\n        ]}\n      >\n        <Image source={DukeBasketballLogo} style={styles(theme).image} />\n        <View style={{ flexDirection: 'column', width: '70%', justifyContent: 'space-between' }}>\n          <View style={{ backgroundColor: theme.grey5, width: '80%', height: '50%', borderRadius: 15 }} />\n          <View style={{ backgroundColor: theme.grey3, width: '50%', height: '30%', borderRadius: 15 }} />\n        </View>\n      </View>\n    );\n  };\n\n  const Arrow = (props) => (\n    <Svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 700 700' {...props}>\n      <Path\n        fill='#3a3b3c'\n        d='M423.06 204.3v-68.762l144.13 109.09-141.49 113.06-1.984-50.91c-86.613-13.223-217.52 31.734-291.57 117.02 37.023-124.3 103.14-223.47 290.91-219.5z'\n        fillRule='evenodd'\n      />\n    </Svg>\n  );\n\n  //const for list Items of Groups List\n  const Group = ({ groupName, groupCode }) => (\n    <TouchableOpacity\n      onPress={() => updateRedux(groupName, groupCode)}\n      style={[styles(theme).listItem, styles(theme).shadowProp]}\n      disabled={isDisabled}\n    >\n      <View style={{ flexDirection: 'row', justifyContent: 'left' }}>\n        <Image source={DukeBasketballLogo} style={styles(theme).image} />\n        <View style={{ flexDirection: 'column' }}>\n          <Text style={[styles(theme).listText, { fontSize: 20, color: theme.grey1 }]}>{groupName}</Text>\n          <Text style={[styles(theme).listText, { color: theme.grey4 }]}>{groupCode}</Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n\n  //for rendering list items of Groups\n  const renderGroup = ({ item }) => {\n    return <Group groupName={item.groupName} groupCode={item.code} />;\n  };\n\n  if (isLoading || !isReady) {\n    return <LoadingIndicator />;\n  }\n  if (isError) {\n    return <ErrorPage navigation={navigation} />;\n  }\n  return (\n    <View style={styles(theme).startContainer}>\n      <View style={styles(theme).topBanner}>\n        <Text style={styles(theme).topText}>Welcome to Krzyzewskiville!</Text>\n        <IconButton\n          icon='cog-outline'\n          color={theme.grey1}\n          size={25}\n          onPress={() => navigation.navigate('StackNavigator')}\n          style={{marginRight: 0}}\n        />\n      </View>\n\n      <View\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          width: '90%',\n          alignItems: 'center',\n          marginBottom: 5,\n        }}\n      >\n        <Text style={styles(theme).groupText}>Groups</Text>\n        <TouchableOpacity onPress={toggleModal}>\n          <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n            <Icon name='plus-circle-outline' color={theme.primary} size={20} />\n            <Text\n              style={[\n                styles(theme).groupText,\n                {\n                  fontSize: 16,\n                  fontWeight: '700',\n                  color: theme.primary,\n                  marginLeft: 4,\n                },\n              ]}\n            >\n              Add Group\n            </Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n\n      <SafeAreaView style={{ width: '100%', height: '60%' }}>\n        {data.length == 0 ? (\n          <View style={{ flex: 1, justifyContent: 'start', alignItems: 'center', paddingTop: '10%' }}>\n            <View\n              style={{\n                position: 'absolute',\n                height: 80,\n                width: 80,\n                transform: [{ rotateX: '180deg' }, { rotate: '90deg' }],\n                right: '10%',\n                top: '0%',\n              }}\n            >\n              <Arrow />\n            </View>\n            <EmptyGroup />\n            <EmptyGroup />\n            <EmptyGroup />\n            <Text style={{ color: theme.grey1, fontSize: 20, fontWeight: '700', marginTop: '10%' }}>\n              Create or Join a Group\n            </Text>\n          </View>\n        ) : (\n          <FlatList\n            data={data}\n            renderItem={renderGroup}\n            keyExtractor={(item) => item.code}\n            refreshControl={<RefreshControl enabled={true} refreshing={isRefetchingByUser} onRefresh={refetchByUser} />}\n            style={{ width: '100%', flexGrow: 1, height: '100%' /* , borderWidth:1 */ }}\n            showsVerticalScrollIndicator={false}\n          />\n        )}\n      </SafeAreaView>\n\n      {/* <View\n          style={{\n            width: '100%',\n            height: '20%',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              width: '85%',\n              height: '40%',\n              backgroundColor: theme.primary,\n              justifyContent: 'center',\n              alignItems: 'center',\n              borderRadius: 20,\n            }}\n            onPress={toggleCount}\n          >\n            <Text style={{ fontSize: 26, fontWeight: '700', color: theme.text1 }}>Countdown to UNC</Text>\n          </TouchableOpacity>\n        </View> */}\n\n      <ActionSheetModal\n        isVisible={isCountVisible}\n        onBackdropPress={toggleCount}\n        swipeDown={false}\n        height={200}\n        userStyle={'light'}\n      >\n        <View style={{ justifyContent: 'center', alignItems: 'center', flex: 1, width: '100%' }}>\n          <Text style={{ position: 'absolute', top: 0 }}>Countdown to UNC</Text>\n          <CountDown\n            size={30}\n            until={time.current}\n            onFinish={() => alert('Finished')}\n            digitStyle={{\n              backgroundColor: '#FFF',\n              borderWidth: 2,\n              borderColor: theme.primary,\n            }}\n            digitTxtStyle={{ color: theme.primary }}\n            timeLabelStyle={{ color: 'black', fontWeight: 'bold' }}\n            separatorStyle={{\n              color: theme.primary,\n              alignSelf: 'center',\n              flex: 1,\n              paddingTop: 15,\n              justifyContent: 'center',\n            }}\n            showSeparator={true}\n          />\n        </View>\n      </ActionSheetModal>\n\n      <Modal\n        isVisible={isModalVisible}\n        onBackdropPress={() => setModalVisible(false)}\n        backdropTransitionOutTiming={0}\n        keyboardDismissMode={'on-drag'}\n        //customBackdrop={<View style={{ flex: 1 }} />}\n      >\n        <SafeAreaView style={styles(theme).popUp}>\n          <Text style={styles(theme).popUpHeader}>Add Group</Text>\n          <TouchableOpacity\n            onPress={() => {\n              toggleModal();\n              navigation.navigate('JoinGroup');\n            }}\n            style={{ width: '100%', alignSelf: 'center' }}\n          >\n            <View\n              style={[\n                styles(theme).popButton,\n                {\n                  borderBottomLeftRadius: 3,\n                  borderBottomRightRadius: 3,\n                  borderTopLeftRadius: 11,\n                  borderTopRightRadius: 11,\n                },\n              ]}\n            >\n              <Icon name='account-plus-outline' color={'white'} size={20} style={{ marginLeft: 10 }} />\n              <Text style={styles(theme).buttonText}>Join Group</Text>\n            </View>\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            onPress={() => {\n              toggleModal();\n              navigation.navigate('CreateGroup');\n            }}\n            style={{ width: '100%', alignSelf: 'center' }}\n          >\n            <View\n              style={[\n                styles(theme).popButton,\n                {\n                  borderBottomLeftRadius: 11,\n                  borderBottomRightRadius: 11,\n                  borderTopLeftRadius: 3,\n                  borderTopRightRadius: 3,\n                },\n              ]}\n            >\n              <Icon name='account-circle-outline' color={'white'} size={20} style={{ marginLeft: 10 }} />\n              <Text style={styles(theme).buttonText}>Create New Group</Text>\n            </View>\n          </TouchableOpacity>\n        </SafeAreaView>\n      </Modal>\n      {/* <Button\n          title='Create Group Schedule'\n          onPress={() =>\n            createGroupSchedule('sX5bkvgE', 'Black').then((groupSchedule) => {\n              firebase\n                .firestore()\n                .collection('groups')\n                .doc('sX5bkvgE')\n                .update({\n                  groupSchedule: groupSchedule,\n                })\n                .then(() => console.log('update successfull'))\n                .catch((error) => console.log(error));\n              console.log(groupSchedule);\n            })\n          }\n        /> */}\n      {/* <Button\n              title=\"Add test case\"\n              onPress={() => createTestCases()}\n            /> */}\n    </View>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    startContainer: {\n      //Overarching Container\n      flexDirection: 'column',\n      flex: 1,\n      //backgroundColor: theme.background,\n      backgroundColor: '#f5f7fa',\n      alignItems: 'center',\n      marginTop: '0%',\n    },\n    topBanner: {\n      //for the top container holding \"welcome to k-ville\"\n      alignItems: 'center',\n      marginTop: 50,\n      marginBottom: 35,\n      width: '100%',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      paddingHorizontal: '5%'\n    },\n    topText: {\n      //\"welcome to kville\" text\n      textAlign: 'left',\n      fontWeight: '800',\n      fontSize: 28,\n      color: theme.grey1,\n      width: '70%',\n    },\n    groupText: {\n      //text for 'Groups' and '+ Add Group'\n      fontSize: 24,\n      fontWeight: '700',\n      color: theme.grey1,\n    },\n    popUp: {\n      //style for popup menu of add group\n      width: '90%',\n      height: 160,\n      backgroundColor: theme.secondary,\n      alignSelf: 'center',\n      alignItems: 'center',\n      borderRadius: 20,\n      margin: 15,\n    },\n    popUpHeader: {\n      //style for text at the top of the popup\n      fontWeight: '600',\n      color: theme.text1,\n      height: 40,\n      width: '89%',\n      marginTop: 15,\n      textAlign: 'center',\n      fontSize: 24,\n    },\n    popButton: {\n      //style for the buttons in the popup\n      flexDirection: 'row',\n      width: '85%',\n      height: 40,\n      marginVertical: 2,\n      alignSelf: 'center',\n      backgroundColor: theme.tertiary,\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n    },\n    buttonText: {\n      //popup buttons' text\n      fontSize: 16,\n      color: theme.text1,\n      textAlign: 'left',\n      marginLeft: 15,\n    },\n    image: {\n      //for the duke basketball logos\n      width: 45,\n      height: 39,\n      alignSelf: 'center',\n      marginLeft: 10,\n      marginRight: 20,\n    },\n\n    listItem: {\n      //for the items for each group\n      //backgroundColor: theme.grey3,\n      backgroundColor: '#fff',\n      padding: 8,\n      marginVertical: 7,\n      borderRadius: 10,\n      alignSelf: 'center',\n      borderWidth: 0.3,\n      borderColor: '#d8d9dc',\n      //width: window.width * 0.9,\n      width: '90%',\n      justifyContent: 'flex-start',\n    },\n    listText: {\n      //for the text inside the group cards\n      fontSize: 15,\n      fontWeight: '500',\n      color: theme.text2,\n    },\n    shadowProp: {\n      //shadow for the group cards\n      shadowColor: '#171717',\n      shadowOffset: { width: -2, height: 4 },\n      shadowOpacity: 0.2,\n      shadowRadius: 5,\n      elevation: 20,\n    },\n  });\n","//UUID generator, used for group codes\n// import firebase from \"firebase/compat/app\";\n// import \"firebase/compat/auth\";\n// import \"firebase/compat/firestore\";\n\n\nexport function generateGroupCode(digits) {\n  let uuid = generateUUID(digits);\n  // firebase\n  //   .firestore()\n  //   .collection(\"groups\")\n  //   .doc(uuid)\n  //   .get()\n  //   .then((doc) => {\n  //     console.log(doc.exists);\n  //     if (!doc.exists) {\n  //       return uuid;\n  //     }\n  //   });\n  return uuid;\n}\n\nconst generateUUID = (digits) => {\n  let str = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVXZ\";\n  let uuid = [];\n  for (let i = 0; i < digits; i++) {\n    uuid.push(str[Math.floor(Math.random() * str.length)]);\n  }\n  return uuid.join(\"\");\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useFocusEffect } from '@react-navigation/native';\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  StyleSheet,\n  TextInput,\n  Dimensions,\n  Image,\n  KeyboardAvoidingView,\n  Platform,\n  SafeAreaView,\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useQueryClient } from 'react-query';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport { generateGroupCode } from '../backend/GroupCode';\nimport {\n  setCurrentUser,\n  setGroupCode,\n  setGroupName,\n  setUserName,\n  setTentType,\n  setGroupRole,\n} from '../redux/reducers/userSlice';\nimport { useTheme } from '../context/ThemeProvider';\nimport coachKLogo from '../assets/coachKLogo.png';\nimport { ActionSheetModal } from '../components/ActionSheetModal';\nimport { setSnackMessage, toggleSnackBar } from '../redux/reducers/snackbarSlice';\n\n//length of the group code\nconst GROUP_CODE_LENGTH = 8;\n\nlet availability = new Array(336);\navailability.fill(true);\n\nconst window = Dimensions.get('window');\n\nexport default function CreateGroup({ navigation }) {\n  const [group, setGroup] = useState({\n    groupName: '',\n    tentType: '',\n    groupCode: '',\n    userName: '',\n    tentType: 'Select Tent Type',\n  });\n  const [isTentChangeVisible, setTentChangeVisible] = useState(false);\n  const [dimensions, setDimensions] = useState({ window });\n  const { theme } = useTheme();\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n\n  const groupRole = 'Creator';\n\n  const userRef = firebase.firestore().collection('users').doc(firebase.auth().currentUser.uid);\n  let groupRef;\n\n  const userName = useSelector((state) => state.user.currentUser.username);\n\n  function toggleTentChange() {\n    setTentChangeVisible(!isTentChangeVisible);\n  }\n\n  useEffect(() => {\n    const subscription = Dimensions.addEventListener('change', ({ window }) => {\n      setDimensions({ window });\n    });\n    return () => subscription?.remove();\n  });\n\n  //on first render sets name to user's registered name\n  useFocusEffect(\n    useCallback(() => {\n      let mounted = true;\n      if (mounted) {\n        setGroup({\n          ...group,\n          groupCode: generateGroupCode(GROUP_CODE_LENGTH),\n          userName: userName,\n        });\n      }\n      return () => {\n        mounted = false;\n      };\n    }, [])\n  );\n\n  //Create group function\n  async function onCreateGroup() {\n    if (group.groupName == '') {\n      dispatch(toggleSnackBar());\n      dispatch(setSnackMessage('Enter group name'));\n      return;\n    }\n    if (group.tentType == 'Select Tent Type') {\n      dispatch(toggleSnackBar());\n      dispatch(setSnackMessage('Select tent type'));\n      return;\n    }\n    if (group.userName == '') {\n      dispatch(toggleSnackBar());\n      dispatch(setSnackMessage('Enter a nickname'));\n      return;\n    }\n    groupRef = firebase.firestore().collection('groups').doc(group.groupCode);\n    //creates/adds to groups collection, adds doc with generated group code and sets name and tent type\n    groupRef.set({\n      name: group.groupName,\n      tentType: group.tentType,\n      groupSchedule: [],\n      memberArr: [],\n      previousSchedule: [],\n      previousMemberArr: [],\n    }).catch((error)=>{\n      console.error(error);\n    });\n    //adds current user to collection of members in the group\n    groupRef.collection('members').doc(firebase.auth().currentUser.uid).set({\n      groupRole: groupRole,\n      name: group.userName,\n      inTent: false,\n      availability: availability,\n      scheduledHrs: 0,\n      shifts: [],\n    }).catch((error)=>{\n      console.error(error);\n    });\n    //updates current user's inGroup and groupCode states\n    userRef.update({\n      groupCode: firebase.firestore.FieldValue.arrayUnion({\n        groupCode: group.groupCode,\n        groupName: group.groupName,\n      }),\n    }).catch((error)=>{\n      console.error(error);\n    });\n    dispatch(setGroupCode(group.groupCode));\n    dispatch(setGroupName(group.groupName));\n    dispatch(setUserName(group.userName));\n    dispatch(setTentType(group.tentType));\n    dispatch(setGroupRole('Creator'));\n    await userRef.get().then((snapshot) => {\n      if (snapshot.exists) {\n        dispatch(setCurrentUser(snapshot.data()));\n      } else {\n        console.log('does not exist');\n      }\n      return snapshot;\n    });\n    \n    \n    queryClient.invalidateQueries(['groups', firebase.auth().currentUser.uid]);\n\n    navigation.navigate('GroupInfo', {\n      groupCode: group.groupCode,\n      groupName: group.groupName,\n      groupRole: 'Creator',\n    });\n  }\n\n  return (\n    <View style={{ flex: 1, backgroundColor: theme.background }}>\n      <SafeAreaView style={{ flex: 1 }}>\n        <KeyboardAvoidingView behavior='padding' style={{ flex: 1 }}>\n          <View style={styles(theme).groupContainer}>\n            <View style={styles(theme).groupHeader}>\n              <Text style={styles(theme).btnTxt} onPress={() => navigation.goBack()}>\n                Cancel\n              </Text>\n              <Text style={{ fontWeight: '500', fontSize: 20 }}>Create Group</Text>\n              <TouchableOpacity\n                onPress={() => {\n                  onCreateGroup();\n                  console.log(group.groupCode);\n                  console.log(groupRole);\n                }}\n              >\n                <Text style={styles(theme).btnTxt}>Create</Text>\n              </TouchableOpacity>\n            </View>\n\n            <View style={{ width: '90%' }}>\n              <Text style={styles(theme).headerText}>Group Name</Text>\n            </View>\n            <TextInput\n              style={styles(theme).textInput}\n              //autoFocus={true}\n              placeholder='Enter Group Name'\n              value={group.groupName}\n              maxLength={28}\n              onChangeText={(groupName) => setGroup({ ...group, groupName: groupName })}\n              autoCorrect={false}\n            />\n\n            <Text style={[styles(theme).headerText, { marginTop: 20 }]}>Group Code</Text>\n            <View\n              style={[\n                styles(theme).textInput,\n                {\n                  backgroundColor: theme.background,\n                  height: 60,\n                  width: '90%',\n                  justifyContent: 'center',\n                },\n              ]}\n            >\n              <Text selectable={true} style={{ textAlign: 'center', fontSize: 26, fontWeight: '700' }}>\n                {group.groupCode}\n              </Text>\n            </View>\n\n            <Text style={[styles(theme).headerText, { marginTop: 20 }]}>Tent Type</Text>\n            <TouchableOpacity onPress={toggleTentChange} style={styles(theme).selectTent}>\n              <Text style={{ textAlign: 'center', fontSize: 20, fontWeight: '400', color: theme.grey1 }}>\n                {group.tentType}\n              </Text>\n              <Icon name='chevron-down' color={theme.icon2} size={30} style={{ marginLeft: 10 }} />\n            </TouchableOpacity>\n\n            <Text style={[styles(theme).headerText, { marginTop: 20 }]}>Nickname</Text>\n            <TextInput\n              style={styles(theme).textInput}\n              value={group.userName}\n              placeholder='Enter Nickname'\n              maxLength={11}\n              onChangeText={(userName) =>\n                setGroup({\n                  ...group,\n                  userName: userName\n                    .normalize('NFD')\n                    .replace(/[\\u0300-\\u036f]/g, '')\n                    .replace(/\\s+/g, '')\n                    .replace(/[^a-z0-9]/gi, ''),\n                })\n              }\n              clearTextOnFocus={true}\n            />\n          </View>\n\n          <ActionSheetModal\n            isVisible={isTentChangeVisible}\n            onBackdropPress={toggleTentChange}\n            onSwipeComplete={toggleTentChange}\n            toggleModal={toggleTentChange}\n            cancelButton={true}\n            height={180}\n            userStyle={'light'}\n          >\n            <TouchableOpacity\n              onPress={() => {\n                setGroup({ ...group, tentType: 'Black' });\n                toggleTentChange();\n              }} //change to new tent type\n              style={styles(theme).tentChangeListItem}\n            >\n              <Text style={styles(theme).modalText}>Black</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={() => {\n                setGroup({ ...group, tentType: 'Blue' });\n                toggleTentChange();\n              }} //change to new tent type\n              style={styles(theme).tentChangeListItem}\n            >\n              <Text style={styles(theme).modalText}>Blue</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={() => {\n                setGroup({ ...group, tentType: 'White' });\n                toggleTentChange();\n              }} //change to new tent type\n              style={[styles(theme).tentChangeListItem, { borderBottomWidth: 0 }]}\n            >\n              <Text style={styles(theme).modalText}>White</Text>\n            </TouchableOpacity>\n          </ActionSheetModal>\n        </KeyboardAvoidingView>\n      </SafeAreaView>\n\n      <View\n        style={{\n          /* position: \"absolute\",\n          bottom: 0, */\n          marginTop: 'auto',\n          width: '100%',\n        }}\n      >\n        <View\n          style={[\n            styles(theme).triangle,\n            {\n              borderRightWidth: dimensions.window.width,\n              borderTopWidth: dimensions.window.height / 6,\n            },\n          ]}\n        ></View>\n        <Image\n          source={coachKLogo}\n          style={{\n            position: 'absolute',\n            marginVertical: 10,\n            zIndex: 1,\n            height: 129,\n            width: 113,\n            alignSelf: 'center',\n          }}\n        />\n        <View\n          style={{\n            width: '100%',\n            height: dimensions.window.height / 15,\n            backgroundColor: theme.primary,\n          }}\n        ></View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    groupContainer: {\n      flexDirection: 'column',\n      flex: 1,\n      alignItems: 'center',\n      backgroundColor: theme.background,\n    },\n    groupHeader: {\n      flexDirection: 'row',\n      width: '94%',\n      height: '10%',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      marginBottom: 20,\n    },\n    backgroundImage: {\n      flex: 1,\n      alignItems: 'center',\n      flexDirection: 'column',\n      height: '100%',\n      width: '100%',\n      resizeMode: 'cover',\n    },\n    topBanner: {\n      //for the top container holding \"create\" button\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      flexDirection: 'row',\n      marginTop: 10,\n      marginBottom: 12,\n      width: '90%',\n      //borderWidth: 2\n    },\n    headerText: {\n      //text for 'headers of each input'\n      textAlign: 'left',\n      width: '90%',\n      fontSize: 20,\n      marginBottom: 10,\n      fontWeight: '700',\n      color: theme.grey1,\n    },\n    textContainer: {\n      height: '70%',\n      width: '80%',\n      marginVertical: 50,\n    },\n    text: {\n      color: theme.text1,\n      fontSize: 22,\n      fontWeight: '700',\n    },\n    centerText: {\n      color: theme.text1,\n      fontSize: 36,\n      fontWeight: '700',\n      textAlign: 'center',\n    },\n    textInput: {\n      backgroundColor: theme.background,\n      padding: 10,\n      width: '90%',\n      fontSize: 20,\n      fontWeight: '400',\n      //textAlign: 'center',\n      borderRadius: 8,\n      borderColor: theme.grey2,\n      borderWidth: 2,\n    },\n    selectTent: {\n      width: '90%',\n      height: 45,\n      borderRadius: 8,\n      borderWidth: 2,\n      borderColor: theme.grey2,\n      backgroundColor: theme.background,\n      justifyContent: 'center',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      paddingHorizontal: 10,\n    },\n    tentChangeListItem: {\n      //Style of an item in the member tentChange modal (for creator only)\n      flexDirection: 'row',\n      height: '33%',\n      width: '95%',\n      justifyContent: 'center',\n      alignSelf: 'center',\n      alignItems: 'center',\n      borderBottomWidth: 1,\n      borderColor: '#cfcfcf',\n    },\n    modalText: {\n      //style of text within the modals (member info text and tentChange text)\n      fontSize: 18,\n      fontWeight: '500',\n      color: theme.text2,\n    },\n    picker: {\n      width: '90%',\n      height: '20%',\n      //borderWidth: 2,\n    },\n    pickerItem: {\n      height: '100%',\n    },\n    btnTxt: {\n      fontSize: 18,\n      color: theme.primary,\n      fontWeight: '600',\n    },\n    triangle: {\n      height: 0,\n      width: 0,\n      borderTopWidth: 150,\n      borderRightColor: theme.primary,\n      borderTopColor: 'transparent',\n      transform: [{ scaleX: -1 }],\n    },\n  });\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useFocusEffect } from '@react-navigation/native';\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  StyleSheet,\n  TextInput,\n  Image,\n  Dimensions,\n  KeyboardAvoidingView,\n  SafeAreaView,\n} from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useQueryClient } from 'react-query';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport {\n  setCurrentUser,\n  setGroupCode,\n  setGroupName,\n  setUserName,\n  setTentType,\n  setGroupRole,\n} from '../redux/reducers/userSlice';\nimport { useTheme } from '../context/ThemeProvider';\nimport coachKLogo from '../assets/coachKLogo.png';\nimport { setSnackMessage, toggleSnackBar } from '../redux/reducers/snackbarSlice';\n\nlet availability = new Array(336);\navailability.fill(true);\n\nconst window = Dimensions.get('window');\n\nexport default function JoinGroup({ navigation }) {\n  const [groupCode, setInputGroupCode] = useState('');\n  const [name, setName] = useState('');\n  const [dimensions, setDimensions] = useState({ window });\n  const { theme } = useTheme();\n  let groupName = '';\n\n  const queryClient = useQueryClient();\n  const dispatch = useDispatch();\n  const userName = useSelector((state) => state.user.currentUser.username);\n\n  useEffect(() => {\n    const subscription = Dimensions.addEventListener('change', ({ window }) => {\n      setDimensions({ window });\n    });\n    return () => subscription?.remove();\n  });\n\n  useFocusEffect(\n    useCallback(() => {\n      let mounted = true;\n\n      if (mounted) {\n        console.log('reset username ' + userName);\n        setName(userName);\n        setInputGroupCode('');\n      }\n      return () => {\n        mounted = false;\n      };\n    }, [])\n  );\n\n  async function onJoinGroup(navigation) {\n    console.log('group code', groupCode);\n    if (groupCode == '') {\n      dispatch(setSnackMessage('Enter group code'));\n      dispatch(toggleSnackBar());\n      return;\n    }\n    if (name == '') {\n      dispatch(setSnackMessage('Enter a nickname'));\n      dispatch(toggleSnackBar());\n      return;\n    }\n    const groupRef = firebase.firestore().collection('groups').doc(groupCode);\n    const userRef = firebase.firestore().collection('users').doc(firebase.auth().currentUser.uid);\n\n    //checks to make sure entered group code exists\n    await groupRef.get().then(async (docSnapshot) => {\n      console.log('Group exists: ', docSnapshot.exists);\n      if (docSnapshot.exists) {\n        //Max 12 people in a group\n        let result = await groupRef\n          .collection('members')\n          .get()\n          .then((collSnap) => {\n            console.log(collSnap.size);\n            if (collSnap.size == 12) {\n              console.log('Group is full');\n              dispatch(toggleSnackBar());\n              dispatch(setSnackMessage('Group already full'));\n              return 'full';\n            }\n          });\n        console.log(result);\n        if (result == 'full') {\n          return;\n        }\n        result = await groupRef\n          .collection('members')\n          .doc(firebase.auth().currentUser.uid)\n          .get()\n          .then((doc) => {\n            if (doc.exists) {\n              dispatch(setSnackMessage('Already joined this group'));\n              dispatch(toggleSnackBar());\n              return 'exists';\n            }\n          });\n        if (result == 'exists') {\n          return;\n        }\n\n        groupRef\n          .collection('members')\n          .where('name', '==', name)\n          .get()\n          .then(async (snapshot) => {\n            if (snapshot.empty) {\n              groupName = docSnapshot.data().name;\n              dispatch(setGroupCode(groupCode));\n              dispatch(setUserName(name));\n              dispatch(setGroupName(groupName));\n              dispatch(setTentType(docSnapshot.data().tentType));\n              dispatch(setGroupRole('Member'));\n              //updates current user's info\n              await userRef.update({\n                groupCode: firebase.firestore.FieldValue.arrayUnion({\n                  groupCode: groupCode,\n                  groupName: docSnapshot.data().name,\n                }),\n              });\n              //adds current user to member list\n              await groupRef.collection('members').doc(firebase.auth().currentUser.uid).set({\n                groupRole: 'Member',\n                name: name,\n                inTent: false,\n                availability: availability,\n                scheduledHrs: 0,\n                shifts: [],\n              });\n              await userRef.get().then((snapshot) => {\n                dispatch(setCurrentUser(snapshot.data()));\n              });\n\n              queryClient.invalidateQueries(['groups', firebase.auth().currentUser.uid]);\n              navigation.navigate('GroupInfo', {\n                groupCode: groupCode,\n                groupName: groupName,\n                groupRole: 'Member',\n              });\n            } else {\n              dispatch(toggleSnackBar());\n              dispatch(setSnackMessage('Name already taken'));\n            }\n          });\n        return;\n      } else {\n        console.log('No group exists');\n        dispatch(toggleSnackBar());\n        dispatch(setSnackMessage(\"Invalid group code: group doesn't exist\"));\n        return;\n      }\n    });\n  }\n\n  return (\n    <View style={{ flex: 1, backgroundColor: theme.background }}>\n      <SafeAreaView style={{ flex: 1 }}>\n        <KeyboardAvoidingView behavior='padding' style={{ flex: 1 }}>\n          <View style={styles(theme).container}>\n            <View style={styles(theme).header}>\n              <Text style={styles(theme).buttonText} onPress={() => navigation.goBack()}>\n                Cancel\n              </Text>\n              <Text style={{ fontWeight: '500', fontSize: 20 }}>Join Group</Text>\n              <TouchableOpacity\n                onPress={() => {\n                  onJoinGroup(navigation);\n                }}\n              >\n                <Text style={styles(theme).buttonText}>Join</Text>\n              </TouchableOpacity>\n            </View>\n\n            <View\n              style={{\n                flexDirection: 'row',\n                width: '90%',\n                marginBottom: 10,\n              }}\n            >\n              <Text style={styles(theme).groupText}>Group Code</Text>\n            </View>\n\n            <TextInput\n              style={styles(theme).textInput}\n              //autoFocus={true}\n              onChangeText={(code) => setInputGroupCode(code.trim())}\n              value={groupCode}\n              placeholder='Enter Group Code'\n              autoCorrect={false}\n            />\n\n            <View\n              style={{\n                flexDirection: 'row',\n                width: '90%',\n                marginBottom: 10,\n                marginTop: 55,\n              }}\n            >\n              <Text style={styles(theme).groupText}>Nickname</Text>\n            </View>\n            <TextInput\n              style={styles(theme).textInput}\n              value={name}\n              placeholder='Enter Nickname'\n              maxLength={11} //Maximize username length to 11 characters\n              onChangeText={(name) =>\n                setName(\n                  name\n                    .normalize('NFD')\n                    .replace(/[\\u0300-\\u036f]/g, '')\n                    .replace(/\\s+/g, '')\n                    .replace(/[^a-z0-9]/gi, '')\n                )\n              }\n              clearTextOnFocus={true}\n              autoCorrect={false}\n            />\n          </View>\n        </KeyboardAvoidingView>\n      </SafeAreaView>\n      <View\n        style={{\n          marginTop: 'auto',\n          width: '100%',\n          backgroundColor: theme.background,\n        }}\n      >\n        <View\n          style={[\n            styles(theme).triangle,\n            {\n              borderRightWidth: dimensions.window.width,\n              borderTopWidth: dimensions.window.height / 5,\n            },\n          ]}\n        ></View>\n        <Image\n          source={coachKLogo}\n          style={{\n            position: 'absolute',\n            marginVertical: 20,\n            zIndex: 1,\n            height: 161,\n            width: 140,\n            alignSelf: 'center',\n          }}\n        />\n        <View\n          style={{\n            width: '100%',\n            height: dimensions.window.height / 10,\n            backgroundColor: theme.primary,\n          }}\n        ></View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    container: {\n      flexDirection: 'column',\n      flex: 1,\n      backgroundColor: theme.background,\n      alignItems: 'center',\n      marginTop: '0%',\n    },\n    header: {\n      flexDirection: 'row',\n      width: '94%',\n      height: '10%',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      marginBottom: 20,\n    },\n    textInput: {\n      backgroundColor: theme.background,\n      padding: 10,\n      width: '90%',\n      fontSize: 20,\n      fontWeight: '500',\n      //textAlign: 'center',\n      borderRadius: 8,\n      borderColor: theme.grey2,\n      borderWidth: 2,\n    },\n    groupText: {\n      //text for 'Groups' and '+ Add Group'\n      //fontFamily: \"sans-serif\",\n      width: '90%',\n      fontSize: 20,\n      fontWeight: '700',\n      color: theme.grey1,\n    },\n    buttonText: {\n      fontSize: 18,\n      color: theme.primary,\n      fontWeight: '600',\n      //textAlign: 'center',\n    },\n    shadowProp: {\n      //shadow for the text input and image\n      shadowColor: '#171717',\n      shadowOffset: { width: -2, height: 4 },\n      shadowOpacity: 0.2,\n      shadowRadius: 5,\n      elevation: 20,\n    },\n    triangle: {\n      height: 0,\n      width: 0,\n      borderTopWidth: 150,\n      borderRightColor: theme.primary,\n      borderTopColor: 'transparent',\n      transform: [{ scaleX: -1 }],\n    },\n  });\n","import React, { createContext, useContext } from 'react';\nimport { StyleSheet, View, Text, SafeAreaView } from 'react-native';\nimport Modal from 'react-native-modal';\nimport { useTheme } from '../context/ThemeProvider';\n\nlet ModalContext = createContext();\n\n//Function for creating context for interior components\nfunction useModal() {\n  const context = useContext(ModalContext);\n  if (!context) {\n    throw new Error('useModal must be used in or within a Modal Component');\n  }\n  return context;\n}\n\n/** Parent function for BottomSheetModal\n *\n * @param {string (%) | number } height -- percent size of modal (or pixel size)\n * @param {color} color -- overwrite background color of modal from dark or light theme\n * @param {boolean} swipeDown -- if you want the modal to be swipeable\n *      * would recommend false if modal has scrollable components such as a picker\n *      * if true, must add onSwipeComplete prop to the modal\n * @param {string ('default' | 'small' | 'none') } barSize -- depending on the size of the modal, determine the size of toggle bar\n * @param {string} userStyle -- options: ('dark' | 'light') background color of modal and text color\n * @param {Component} children -- components inside modal component;\n *\n * @param {props} props --\n *   **NOTE: must include normal modal props in the props of the Modal such as:\n *       isVisible={isModalVisible}\n *       onBackdropPress={() => setModalVisible(false)}\n *       onSwipeComplete = {toggleModal}\n *       ...\n * @returns {Component} Modal Component\n */\n\nconst BottomSheetModal = ({\n  height = '50%',\n  color,\n  swipeDown = true,\n  barSize = 'default',\n  userStyle,\n  children,\n  ...props\n}) => {\n  {\n    const { theme } = useTheme();\n\n    //set up default styles for light and dark themes\n    let background, headerColor;\n    userStyle == 'light'\n      ? ((background = theme.background), (headerColor = 'black'))\n      : ((background = '#565656'), (headerColor = '#fff'));\n\n    //overwrite dark|light theme background colors if defined\n    if (color !== undefined) background = color;\n\n    return (\n      <ModalContext.Provider value={{ headerColor }}>\n        <Modal\n          style={styles(theme).BottomModalView}\n          swipeDirection= {swipeDown ? 'down' : null}\n          backdropTransitionOutTiming={0}\n          keyboardDismissMode={'on-drag'}\n          {...props}\n        >\n          <SafeAreaView style={[styles(theme).ModalContainer, { height: height, backgroundColor: background }]}>\n            {barSize == 'default' ? (\n              <View style={[styles(theme).modalBar, { backgroundColor: headerColor }]}></View>\n            ) : barSize == 'small' ? (\n              <View style={[styles(theme).modalSmallBar, { backgroundColor: headerColor }]}></View>\n            ) : null}\n\n            {children}\n          </SafeAreaView>\n        </Modal>\n      </ModalContext.Provider>\n    );\n  }\n};\n\n/**Component for adding a second bottom layer on modal\n *\n * @param {color} color -- background color of modal ;\n * @param {string ('default' | 'small') } size -- depending on the size of the modal, determine the size of second layer\n * @param {Component} children -- components inside bottom container component;\n *\n */\nconst ModalSecondContainer = ({ children, color, size = 'default' }) => {\n  let height, background;\n  {\n    size == 'default' ? (height = '85%') : (height = '70%');\n  }\n  const { theme } = useTheme();\n  let { headerColor } = useModal();\n  headerColor == 'black' ? (background = '#f5f5f5') : (background = '#757575');\n\n  //overwrite dark|light theme background colors if defined\n  if (color !== undefined) background = color;\n\n  return (\n    <View style={[styles(theme).ModalSecondaryView, { backgroundColor: background, height: height }]}>{children}</View>\n  );\n};\nBottomSheetModal.SecondContainer = ModalSecondContainer;\n\n/**Component for adding a top header\n *\n * @param {number} verticalMargin -- depending on the size of the modal, determine the margin of text\n * @param {number} fontSize -- depending on the size of the modal, determine the fontSize of text\n *\n * @param {string} children -- text of header;\n *\n * */\nconst ModalHeader = ({ children, verticalMargin = 10, fontSize = 20 }) => {\n  const { theme } = useTheme();\n  let { headerColor } = useModal();\n  return (\n    <Text\n      style={[styles(theme).ModalHeader, { marginVertical: verticalMargin, fontSize: fontSize, color: headerColor }]}\n    >\n      {children}\n    </Text>\n  );\n};\nBottomSheetModal.Header = ModalHeader;\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    BottomModalView: {\n      margin: 0,\n      justifyContent: 'flex-end',\n    },\n    ModalContainer: {\n      width: '100%',\n      height: '45%',\n      borderTopRightRadius: 30,\n      borderTopLeftRadius: 30,\n      alignItems: 'center',\n      justifyContent: 'space-between',\n    },\n    modalSmallBar: {\n      height: 2,\n      marginTop: 4,\n      width: '15%',\n      borderRadius: 25,\n      backgroundColor: 'white',\n    },\n    modalBar: {\n      height: 4,\n      marginTop: 8,\n      width: '22%',\n      borderRadius: 25,\n      backgroundColor: 'white', //theme.grey1,\n    },\n    ModalHeader: {\n      //style for text at the top of the popup\n      fontWeight: '700',\n      color: 'white',\n      textAlign: 'center',\n      fontSize: 20,\n    },\n    ModalSecondaryView: {\n      width: '100%',\n      height: '85%',\n      paddingHorizontal: 35,\n      paddingVertical: 20,\n      borderTopRightRadius: 40,\n      borderTopLeftRadius: 40,\n      marginBottom: 0,\n    },\n    ModalText: {\n      color: 'white',\n      marginVertical: 5,\n      textAlign: 'left',\n      fontSize: 16,\n    },\n  });\n\nexport { BottomSheetModal };\n","import React, { useState } from 'react';\nimport { Text, View, StyleSheet, TextInput, TouchableOpacity } from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { Snackbar } from 'react-native-paper';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { useMutation, useQueryClient } from 'react-query';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport { setGroupName, setUserName, setTentType } from '../redux/reducers/userSlice';\nimport { useTheme } from '../context/ThemeProvider';\nimport { ConfirmationModal } from '../components/ConfirmationModal';\nimport { ActionSheetModal } from './ActionSheetModal';\nimport { setSnackMessage, toggleSnackBar } from '../redux/reducers/snackbarSlice';\n\nexport default function SettingsModal({ params, navigation, toggleModal }) {\n  const { groupCode, groupName, userName, tentType, groupRole } = params;\n  const [isConfirmationVisible, setConfirmationVisible] = useState(false);\n  const [isTentChangeVisible, setTentChangeVisible] = useState(false);\n  const [isModalSnackVisible, setModalSnackVisible] = useState(false);\n  const [modalSnackMessage, setModalSnackMessage] = useState('');\n  const dispatch = useDispatch();\n  const { theme } = useTheme();\n  const queryClient = useQueryClient();\n\n  const userRef = firebase.firestore().collection('users').doc(firebase.auth().currentUser.uid);\n  const groupRef = firebase.firestore().collection('groups').doc(groupCode);\n\n  const postSave = useOnSave(groupCode);\n\n  function useOnSave(groupCode) {\n    //const queryClient = useQueryClient();\n    return useMutation((options) => onSave(options), {\n      onError: (error) => {\n        console.error(error);\n      },\n      onSuccess: () => {\n        queryClient.invalidateQueries(['group', groupCode]);\n      },\n    });\n  }\n\n  async function onSave(options) {\n    const { newGroupName, newUserName, newTentType } = options;\n    let groupIndex;\n    let groupCodeArr;\n    let valid = true;\n\n    if (newGroupName != groupName || newTentType != tentType) {\n      await userRef.get().then((userDoc) => {\n        groupCodeArr = userDoc.data().groupCode;\n        groupIndex = groupCodeArr.findIndex((element) => element.groupCode == groupCode);\n        console.log('group index', groupIndex);\n        groupCodeArr[groupIndex] = {\n          groupCode: groupCode,\n          groupName: newGroupName,\n        };\n      });\n\n      userRef\n        .update({\n          groupCode: groupCodeArr,\n        })\n        .then(() => {\n          console.log('successfully saved groupName');\n        })\n        .catch((error) => {\n          console.log(error);\n          setModalSnackMessage('Error saving group name');\n          toggleModalSnackBar();\n          return;\n        });\n\n      groupRef\n        .update({\n          name: newGroupName,\n          tentType: newTentType,\n        })\n        .then(() => {\n          console.log('successfully saved group settings');\n        })\n        .catch((error) => {\n          console.log(error);\n          setModalSnackMessage('Error saving group settings');\n          toggleModalSnackBar();\n          return;\n        });\n      queryClient.invalidateQueries(['groups', firebase.auth().currentUser.uid]);\n      dispatch(setTentType(newTentType));\n      dispatch(setGroupName(newGroupName));\n    }\n\n    if (newUserName != userName) {\n      groupRef\n        .collection('members')\n        .where('name', '==', newUserName)\n        .get()\n        .then((snapshot) => {\n          if (snapshot.empty) {\n            groupRef\n              .collection('members')\n              .doc(firebase.auth().currentUser.uid)\n              .update({\n                name: newUserName,\n              })\n              .then(() => {\n                console.log('successfully updated name');\n              })\n              .catch((error) => {\n                console.log(error);\n                setModalSnackMessage('Error saving user name');\n                toggleModalSnackBar();\n                return;\n              });\n            dispatch(setUserName(newUserName));\n          } else {\n            setModalSnackMessage('Nickname taken');\n            toggleModalSnackBar();\n            valid = false;\n            return;\n          }\n        })\n        .then(() => {\n          if (valid) {\n            dispatch(toggleSnackBar());\n            dispatch(setSnackMessage('Saved'));\n            toggleModal();\n          }\n        });\n    } else {\n      if (valid) {\n        dispatch(toggleSnackBar());\n        dispatch(setSnackMessage('Saved'));\n        toggleModal();\n      }\n    }\n  }\n\n  async function leaveGroup() {\n    \n    if (groupRole === 'Creator') {\n      await groupRef\n        .collection('members')\n        .get()\n        .then((querySnapshot) => {\n          querySnapshot.forEach((doc) => {\n            firebase\n              .firestore()\n              .collection('users')\n              .doc(doc.id)\n              .update({\n                groupCode: firebase.firestore.FieldValue.arrayRemove({\n                  groupCode: groupCode,\n                  groupName: groupName,\n                }),\n              })\n              .catch((error) => console.error(error));\n          });\n        });\n      groupRef\n        .delete()\n        .then(() => {\n          console.log('Group successfully deleted!');\n        })\n        .catch((error) => {\n          console.error('Error removing group: ', error);\n        });\n    } else {\n      await userRef.update({\n        groupCode: firebase.firestore.FieldValue.arrayRemove({\n          groupCode: groupCode,\n          groupName: groupName,\n        }),\n      });\n      groupRef\n        .collection('members')\n        .doc(firebase.auth().currentUser.uid)\n        .delete()\n        .then(() => {\n          console.log('Current user successfully removed from group!');\n        })\n        .catch((error) => {\n          console.error('Error removing user: ', error);\n        });\n    }\n    queryClient.invalidateQueries(['groups', firebase.auth().currentUser.uid]);\n  }\n\n  function toggleConfirmation() {\n    setConfirmationVisible(!isConfirmationVisible);\n  }\n  function toggleTentChange() {\n    setTentChangeVisible(!isTentChangeVisible);\n  }\n  function toggleModalSnackBar() {\n    setModalSnackVisible(!isModalSnackVisible);\n  }\n\n  return (\n    <View style={styles(theme).settingsContainer}>\n      <Formik\n        initialValues={{ newUserName: userName, newGroupName: groupName, newTentType: tentType }}\n        onSubmit={(values) => postSave.mutate(values)}\n        style={{ borderWidth: 1 }}\n      >\n        {({ handleChange, handleBlur, handleSubmit, setFieldValue, setFieldTouched, values }) => (\n          <>\n            <View style={styles(theme).topBanner}>\n              <TouchableOpacity onPress={toggleModal}>\n                <Text style={{ fontSize: 18, fontWeight: '700', color: theme.primary }}>Cancel</Text>\n              </TouchableOpacity>\n              <Text style={[styles(theme).headerText, { color: theme.text2, alignSelf: 'center', fontSize: 26 }]}>\n                Settings\n              </Text>\n\n              <TouchableOpacity onPress={handleSubmit}>\n                <Text style={{ fontSize: 18, fontWeight: '700', color: theme.primary }}>Save</Text>\n              </TouchableOpacity>\n            </View>\n\n            <View style={styles(theme).headerContainer}>\n              <Text style={styles(theme).headerText}>Nickname</Text>\n              <Icon name='account-edit' color={theme.grey2} size={20} style={{ marginRight: 8 }} />\n            </View>\n            <TextInput\n              name='newUserName'\n              placeholder='Nickname'\n              style={styles(theme).textInput}\n              onChangeText={handleChange('newUserName')}\n              onBlur={handleBlur('newUserName')}\n              value={values.newUserName}\n            />\n\n            {groupRole === 'Creator' || groupRole == 'Admin' ? (\n              <View style={{ width: '100%', alignItems: 'center', height: '55%' }}>\n                <View style={styles(theme).headerContainer}>\n                  <Text style={styles(theme).headerText}>Group Name</Text>\n                  <Icon name='circle-edit-outline' color={theme.grey2} size={20} style={{ marginRight: 8 }} />\n                </View>\n                <TextInput\n                  name='newGroupName'\n                  placeholder='Group Name'\n                  style={styles(theme).textInput}\n                  onChangeText={handleChange('newGroupName')}\n                  onBlur={handleBlur('newGroupName')}\n                  value={values.newGroupName}\n                />\n\n                <View style={styles(theme).headerContainer}>\n                  <Text style={styles(theme).headerText}>Tent Type</Text>\n                  <Icon name='home-edit' color={theme.grey2} size={20} style={{ marginRight: 8 }} />\n                </View>\n                <TouchableOpacity onPress={toggleTentChange} style={styles(theme).tentChangeBtn}>\n                  <Text style={styles(theme).modalText}>{values.newTentType}</Text>\n                  <Icon name='chevron-down' color={theme.grey2} size={20} />\n                </TouchableOpacity>\n              </View>\n            ) : null}\n\n            {groupRole == 'Creator' || groupRole == 'Admin' ? (\n              <ActionSheetModal\n                isVisible={isTentChangeVisible}\n                onBackdropPress={toggleTentChange}\n                onSwipeComplete={toggleTentChange}\n                toggleModal={toggleTentChange}\n                cancelButton={true}\n                height={180}\n                userStyle={'dark'}\n              >\n                <TouchableOpacity\n                  onPress={() => {\n                    setFieldValue('newTentType', 'Black');\n                    setFieldTouched('newTentType');\n                    toggleTentChange();\n                  }} //change to changing tent type\n                  style={styles(theme).tentChangeListItem}\n                >\n                  <Text style={[styles(theme).modalText, { color: theme.text1, marginRight: 15 }]}>Black</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  onPress={() => {\n                    setFieldValue('newTentType', 'Blue');\n                    setFieldTouched('newTentType');\n                    toggleTentChange();\n                  }}\n                  style={styles(theme).tentChangeListItem}\n                >\n                  <Text style={[styles(theme).modalText, { color: theme.text1, marginRight: 15 }]}>Blue</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  onPress={() => {\n                    setFieldValue('newTentType', 'White');\n                    setFieldTouched('newTentType');\n                    toggleTentChange();\n                  }}\n                  style={[styles(theme).tentChangeListItem, { borderBottomWidth: 0 }]}\n                >\n                  <Text style={[styles(theme).modalText, { color: theme.text1, marginRight: 15 }]}>White</Text>\n                </TouchableOpacity>\n              </ActionSheetModal>\n            ) : null}\n          </>\n        )}\n      </Formik>\n\n      <TouchableOpacity style={styles(theme).leaveButton} onPress={toggleConfirmation}>\n        {groupRole === 'Creator' ? (\n          <Text style={{ color: theme.error, fontSize: 20, fontWeight: '500' }}>Delete Group</Text>\n        ) : (\n          <Text style={{ color: theme.error, fontSize: 20, fontWeight: '500' }}>Leave Group</Text>\n        )}\n      </TouchableOpacity>\n\n      <ConfirmationModal\n        body={\n          groupRole === 'Creator'\n            ? 'Are you sure you want to DELETE this group? This will delete it for everyone in this group and CANNOT be undone.'\n            : 'Are you sure you want to LEAVE this group? This will delete all your information in this group and CANNOT be undone.'\n        }\n        buttonText={groupRole === 'Creator' ? 'Delete This Group' : 'Leave This Group'}\n        buttonAction={() => {\n          leaveGroup();\n          toggleModal();\n          navigation.navigate('Home');\n        }}\n        toggleModal={toggleConfirmation}\n        isVisible={isConfirmationVisible}\n        onBackdropPress={() => setConfirmationVisible(false)}\n        onSwipeComplete={toggleConfirmation}\n        userStyle='light'\n      />\n      <Snackbar\n        visible={isModalSnackVisible}\n        onDismiss={() => setModalSnackVisible(false)}\n        wrapperStyle={{ top: 0 }}\n        duration={2000}\n      >\n        <Text style={{ textAlign: 'center', color: theme.text1 }}>{modalSnackMessage}</Text>\n      </Snackbar>\n    </View>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    settingsContainer: {\n      flexDirection: 'column',\n      alignItems: 'center',\n      backgroundColor: theme.background,\n      width: '100%',\n      height: '100%',\n      borderTopRightRadius: 20,\n      borderTopLeftRadius: 20,\n    },\n    topBanner: {\n      //for the top container holding top 'settings' and save button\n      flexDirection: 'row',\n      backgroundColor: theme.background,\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      marginBottom: 30,\n      width: '100%',\n      paddingVertical: 10,\n      borderBottomWidth: 0.5,\n      borderColor: theme.popOutBorder,\n      borderTopRightRadius: 20,\n      borderTopLeftRadius: 20,\n      paddingHorizontal: 20,\n    },\n    headerContainer: {\n      flexDirection: 'row',\n      width: '90%',\n      justifyContent: 'space-between',\n      marginBottom: 15,\n    },\n    headerText: {\n      //text for different setting headers\n      fontSize: 20,\n      fontWeight: '700',\n      color: theme.grey2,\n    },\n    modalText: {\n      //text for diff modal texts\n      fontSize: 18,\n      fontWeight: '500',\n    },\n    textInput: {\n      backgroundColor: '#fff',\n      paddingVertical: 10,\n      paddingHorizontal: 15,\n      width: '90%',\n      fontSize: 18,\n      fontWeight: '500',\n      textAlign: 'left',\n      borderRadius: 15,\n      marginBottom: 23,\n      // borderColor: theme.grey2,\n      // borderWidth: 1,\n    },\n    tentChangeListItem: {\n      //Style of an item in the member tentChange modal (for creator only)\n      flexDirection: 'row',\n      height: '33%',\n      width: '95%',\n      justifyContent: 'center',\n      alignSelf: 'center',\n      alignItems: 'center',\n      borderBottomWidth: 1,\n      borderColor: '#cfcfcf',\n    },\n    tentChangeBtn: {\n      //remove button for removing member if the user is the Creator\n      flexDirection: 'row',\n      width: '90%',\n      height: 45,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      borderRadius: 15,\n      // borderColor: theme.grey2,\n      // borderWidth: 1,\n      paddingHorizontal: 15,\n    },\n    BottomModalView: {\n      margin: 0,\n      justifyContent: 'flex-end',\n    },\n    leaveButton: {\n      backgroundColor: '#fff',\n      borderRadius: 15,\n      padding: 15,\n      position: 'absolute',\n      bottom: 10,\n      width: '90%',\n      alignItems: 'center',\n      borderWidth: 0.5,\n      borderColor: theme.popOutBorder,\n    },\n  });\n","import React, { useState, useCallback, useRef } from 'react';\nimport {\n  Animated,\n  Text,\n  View,\n  StyleSheet,\n  FlatList,\n  TouchableOpacity,\n  RefreshControl,\n  TextInput,\n  SafeAreaView,\n  Keyboard,\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\n\nimport { Divider, IconButton } from 'react-native-paper';\nimport { useSelector } from 'react-redux';\nimport { useFonts, Merriweather_400Regular, Merriweather_700Bold } from '@expo-google-fonts/merriweather';\nimport { Montserrat_400Regular, Montserrat_700Bold } from '@expo-google-fonts/montserrat';\nimport { OpenSans_400Regular } from '@expo-google-fonts/open-sans';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport { useTheme } from '../context/ThemeProvider';\nimport { useRefreshByUser } from '../hooks/useRefreshByUser';\nimport { ConfirmationModal } from '../components/ConfirmationModal';\nimport { ActionSheetModal } from '../components/ActionSheetModal';\nimport { BottomSheetModal } from '../components/BottomSheetModal';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport SettingsModal from '../components/SettingsModal';\nimport { ErrorPage } from '../components/ErrorPage';\n\nexport default function GroupInfo({ navigation }) {\n  const groupCode = useSelector((state) => state.user.currGroupCode);\n  const groupName = useSelector((state) => state.user.currGroupName);\n  const groupRole = useSelector((state) => state.user.currGroupRole);\n  const userName = useSelector((state) => state.user.currUserName);\n  const tentType = useSelector((state) => state.user.currTentType);\n\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [isConfirmationVisible, setConfirmationVisible] = useState(false);\n  const [isRoleChangeVisible, setRoleChangeVisible] = useState(false);\n  //The following hooks are for the settings modal\n  const [isSettingsVisible, setSettingsVisible] = useState(false);\n  //These 2 hooks are used for identifying which member is clicked from the list\n  const currMember = useRef({});\n  const [fontsLoaded] = useFonts({\n    Merriweather_400Regular,\n    Merriweather_700Bold,\n    Montserrat_400Regular,\n    Montserrat_700Bold,\n    OpenSans_400Regular,\n  });\n\n  const { theme } = useTheme();\n\n  function toggleModal() {\n    setModalVisible(!isModalVisible);\n  }\n  function toggleConfirmation() {\n    setConfirmationVisible(!isConfirmationVisible);\n  }\n  function toggleRoleChange() {\n    setRoleChangeVisible(!isRoleChangeVisible);\n  }\n  function toggleSettings() {\n    Keyboard.dismiss();\n    setSettingsVisible(!isSettingsVisible);\n  }\n\n  const { isLoading, isError, error, data, refetch } = useQuery(\n    ['group', groupCode],\n    () => fetchGroupMembers(groupCode),\n    { initialData: [] }\n  );\n\n  const { isRefetchingByUser, refetchByUser } = useRefreshByUser(refetch);\n\n  //Function for gathering member information from database\n  async function fetchGroupMembers(groupCode) {\n    console.log('passed group code', groupCode);\n    const memberRef = firebase.firestore().collection('groups').doc(groupCode).collection('members');\n    let data = [{}];\n    await memberRef\n      .where('inTent', '==', true)\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          let currName = doc.data().name; //gets current name in list\n          let tentCondition = doc.data().inTent; //gets tent status as well\n          let scheduledHours = doc.data().scheduledHrs;\n          let groupRole = doc.data().groupRole;\n          let memID = doc.id;\n          if (doc.id == firebase.auth().currentUser.uid) {\n            data[0] = {\n              id: memID,\n              name: currName,\n              inTent: tentCondition,\n              hours: scheduledHours,\n              role: groupRole,\n            };\n          } else {\n            data.push({\n              id: memID,\n              name: currName,\n              inTent: tentCondition,\n              hours: scheduledHours,\n              role: groupRole,\n            });\n          }\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n        throw error;\n      });\n    await memberRef\n      .where('inTent', '!=', true)\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          let currName = doc.data().name; //gets current name in list\n          let tentCondition = doc.data().inTent; //gets tent status as well\n          let scheduledHours = doc.data().scheduledHrs;\n          let groupRole = doc.data().groupRole;\n          let memID = doc.id;\n          if (doc.id == firebase.auth().currentUser.uid) {\n            data[0] = {\n              id: memID,\n              name: currName,\n              inTent: tentCondition,\n              hours: scheduledHours,\n              role: groupRole,\n            };\n          } else {\n            data.push({\n              id: memID,\n              name: currName,\n              inTent: tentCondition,\n              hours: scheduledHours,\n              role: groupRole,\n            });\n          }\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n        throw error;\n      });\n    //console.log('groupInfo data', data);\n    return data;\n  }\n\n  const postRemoveMember = useRemoveMember(groupCode);\n\n  function useRemoveMember(groupCode) {\n    const queryClient = useQueryClient();\n    return useMutation(() => removeMember(groupCode), {\n      onError: (error) => {\n        console.error(error);\n      },\n      onSuccess: () => {\n        queryClient.invalidateQueries(['group', groupCode]);\n      },\n    });\n  }\n\n  //Function for removing a member from group in firebase\n  async function removeMember(groupCode) {\n    console.log('current member being deleted', currMember.current.id);\n    await firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .collection('members')\n      .doc(currMember.current.id)\n      .delete()\n      .then(() => {\n        console.log(currMember.current.id + ' removed from group');\n      })\n      .catch((error) => {\n        console.error('Error removing member: ', error);\n      });\n    firebase\n      .firestore()\n      .collection('users')\n      .doc(currMember.current.id)\n      .update({\n        groupCode: firebase.firestore.FieldValue.arrayRemove({ groupCode: groupCode, groupName: groupName }),\n      })\n      .catch((error) => console.error(error));\n    toggleModal();\n  }\n\n  const postGroupRole = useGroupRole(groupCode);\n\n  function useGroupRole(groupCode) {\n    const queryClient = useQueryClient();\n    return useMutation((options) => setGroupRole(options), {\n      onError: (error) => {\n        console.error(error);\n      },\n      onSuccess: () => {\n        queryClient.invalidateQueries(['group', groupCode]);\n      },\n    });\n  }\n\n  function setGroupRole(options) {\n    const { groupRole, groupCode } = options;\n    firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .collection('members')\n      .doc(currMember.current.id)\n      .update({\n        groupRole: groupRole,\n      })\n      .then(() => console.log(currMember.current.id + ' group Role updated to ' + groupRole))\n      .catch((error) => console.error(error));\n    toggleRoleChange();\n    toggleModal();\n  }\n\n  const UserMember = ({ item }) => {\n    const backgroundColor = item.inTent ? '#3eb489' : '#1f509a';\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          toggleModal();\n          currMember.current = { name: item.name, id: item.id, hours: item.hours, role: item.role };\n        }}\n      >\n        <View style={[styles(theme).listItem, styles(theme).shadowProp, { backgroundColor, marginVertical: 15 }]}>\n          <Text style={styles(theme).listText}>{item.name}</Text>\n          {item.inTent ? (\n            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n              <Text style={{ color: theme.text1 }}>In Tent</Text>\n              <Icon name='map-marker-check-outline' color={theme.icon1} size={28} style={{ marginLeft: 5 }} />\n            </View>\n          ) : null}\n          {/* <Text style={styles(theme).listText}>Scheduled Hrs: {item.hours} hrs</Text> */}\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  //Render Item for Each List Item of group members\n  const Member = ({ name, id, hours, role, inTent }) => {\n    const backgroundColor = inTent ? { backgroundColor: '#3eb489' } : { backgroundColor: '#1f509a' };\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          toggleModal();\n          currMember.current = { name: name, id: id, hours: hours, role: role };\n        }}\n      >\n        <View style={[styles(theme).listItem, backgroundColor, styles(theme).shadowProp]}>\n          <Text style={styles(theme).listText}>{name}</Text>\n          {inTent ? (\n            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n              <Text style={{ color: theme.text1 }}>In Tent</Text>\n              <Icon name='map-marker-check-outline' color={theme.icon1} size={28} style={{ marginLeft: 5 }} />\n            </View>\n          ) : null}\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  //variable for each name box, change color to green if status is inTent\n  const renderMember = ({ item }) => {\n    return <Member name={item.name} id={item.id} hours={item.hours} role={item.role} inTent={item.inTent} />;\n  };\n\n  if (isLoading || !fontsLoaded) {\n    return <LoadingIndicator />;\n  }\n  if (isError) {\n    return <ErrorPage navigation={navigation} />;\n  }\n  return (\n    <SafeAreaView style={styles(theme).container}>\n      <View style={styles(theme).containerHeader}>\n        <IconButton icon='menu' size={25} onPress={() => navigation.openDrawer()} />\n        <Text style={{ fontSize: 20, fontWeight: '600', color: theme.grey1 }}>Group Overview</Text>\n        <IconButton icon='cog-outline' color={theme.grey1} size={25} onPress={toggleSettings} />\n      </View>\n\n      <Text style={styles(theme).header}>Group Name</Text>\n      <View style={styles(theme).boxText}>\n        <Text style={styles(theme).contentText}>{groupName}</Text>\n      </View>\n\n      <Text style={styles(theme).header}>Group Code</Text>\n      <View style={styles(theme).boxText}>\n        <Text selectable={true} style={styles(theme).contentText}>\n          {groupCode}\n        </Text>\n      </View>\n\n      {/* List of Members in Group*/}\n      <Text style={styles(theme).header}>Members</Text>\n      <FlatList\n        data={data.slice(1)}\n        renderItem={renderMember}\n        keyExtractor={(item) => item.id}\n        ListHeaderComponent={data.length != 0 ? <UserMember item={data[0]} /> : null}\n        refreshControl={<RefreshControl enabled={true} refreshing={isRefetchingByUser} onRefresh={refetchByUser} />}\n        style={{ marginHorizontal: '4%', flexGrow: 1, height: '70%', width: '90%' }}\n        showsVerticalScrollIndicator={false}\n      />\n\n      {/*Member Information Modal Component*/}\n      <ActionSheetModal\n        isVisible={isModalVisible}\n        onBackdropPress={() => setModalVisible(false)}\n        onSwipeComplete={toggleModal}\n        height={groupRole == 'Creator' && currMember.current.id != firebase.auth().currentUser.uid ? 250 : 190}\n        userStyle={'light'}\n      >\n        <View style={styles(theme).popUpHeaderView}>\n          <View style={{ flexDirection: 'row' }}>\n            <Icon name='account' color={theme.grey2} size={28} style={{ marginRight: 12 }} />\n            <Text style={{ fontSize: 22, fontWeight: '700' }}>{currMember.current.name} Information</Text>\n          </View>\n          <TouchableOpacity onPress={toggleModal}>\n            <Icon name='close-circle' color={theme.grey2} size={26} style={{ marginRight: 0 }} />\n          </TouchableOpacity>\n        </View>\n\n        <View style={{ height: '70%', width: '94%', justifyContent: 'space-between' }}>\n          <View\n            style={\n              groupRole == 'Creator' && currMember.current.id != firebase.auth().currentUser.uid\n                ? { height: '65%' }\n                : { height: '100%' }\n            }\n          >\n            <View style={styles(theme).popUpHalfBody}>\n              <Icon name='timer-sand-empty' color={theme.grey2} size={25} style={{ marginRight: 15 }} />\n              <Text style={styles(theme).modalText}>Scheduled Hours: {currMember.current.hours} hrs</Text>\n            </View>\n            <Divider />\n\n            {groupRole == 'Creator' && currMember.current.id != firebase.auth().currentUser.uid ? (\n              <TouchableOpacity\n                style={[styles(theme).popUpHalfBody, { justifyContent: 'space-between' }]}\n                onPress={() => {\n                  toggleRoleChange();\n                }} //change later to admin change\n              >\n                <View style={{ flexDirection: 'row' }}>\n                  <Icon name='account-group' color={theme.grey2} size={25} style={{ marginRight: 15 }} />\n                  <Text style={styles(theme).modalText}>Group Role: {currMember.current.role}</Text>\n                </View>\n                <Icon name='chevron-down' color={theme.grey2} size={20} />\n              </TouchableOpacity>\n            ) : (\n              <View style={styles(theme).popUpHalfBody}>\n                <Icon name='account-group' color={theme.grey2} size={25} style={{ marginRight: 15 }} />\n                <Text style={styles(theme).modalText}>Group Role: {currMember.current.role}</Text>\n              </View>\n            )}\n          </View>\n\n          {groupRole === 'Creator' && currMember.current.id != firebase.auth().currentUser.uid ? (\n            <View style={{ width: '100%', height: '35%', justifyContent: 'center' }}>\n              <TouchableOpacity onPress={toggleConfirmation} style={styles(theme).removeBtn}>\n                <Icon name='trash-can' color={theme.error} size={30} style={{ marginRight: 15 }} />\n                <Text style={{ color: theme.error, fontSize: 22, fontWeight: '600' }}>Remove</Text>\n              </TouchableOpacity>\n            </View>\n          ) : null}\n        </View>\n        {groupRole == 'Creator' ? (\n          <ActionSheetModal\n            isVisible={isRoleChangeVisible}\n            onBackdropPress={toggleRoleChange}\n            onSwipeComplete={toggleRoleChange}\n            toggleModal={toggleRoleChange}\n            cancelButton={true}\n            height={180}\n            userStyle={'dark'}\n          >\n            {/* <TouchableOpacity\n              onPress={() => postGroupRole.mutate({ groupRole: 'Creator', groupCode })} //change to changing member role\n              style={styles(theme).roleChangeListItem}\n            >\n              <Icon name='chess-king' color={theme.text1} size={25} style={{ marginRight: 15 }} />\n              <Text style={[styles(theme).modalText, { color: theme.text1, marginRight: 15 }]}>Creator</Text>\n            </TouchableOpacity> */}\n\n            <TouchableOpacity\n              onPress={() => postGroupRole.mutate({ groupRole: 'Admin', groupCode })}\n              style={styles(theme).roleChangeListItem}\n            >\n              <Icon name='badge-account-outline' color={theme.text1} size={25} style={{ marginRight: 15 }} />\n              <Text style={[styles(theme).modalText, { color: theme.text1, marginRight: 15 }]}>Admin</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={() => postGroupRole.mutate({ groupRole: 'Member', groupCode })}\n              style={[styles(theme).roleChangeListItem, { borderBottomWidth: 0 }]}\n            >\n              <Icon name='account' color={theme.text1} size={25} style={{ marginRight: 15 }} />\n              <Text style={[styles(theme).modalText, { color: theme.text1, marginRight: 15 }]}>Member</Text>\n            </TouchableOpacity>\n          </ActionSheetModal>\n        ) : null}\n\n        {/* Remove Member Confirmation Modal */}\n        <ConfirmationModal\n          body={\n            'Are you sure you want to REMOVE ' +\n            currMember.current.name +\n            ' from the group? This action CANNOT be undone.'\n          }\n          buttonText={'Remove ' + currMember.current.name}\n          buttonAction={() => {\n            postRemoveMember.mutate();\n          }}\n          toggleModal={toggleConfirmation}\n          isVisible={isConfirmationVisible}\n          onBackdropPress={() => setConfirmationVisible(false)}\n          onSwipeComplete={toggleConfirmation}\n        />\n      </ActionSheetModal>\n\n      <BottomSheetModal\n        isVisible={isSettingsVisible}\n        onBackdropPress={toggleSettings}\n        onSwipeComplete={toggleSettings}\n        swipeDown={true}\n        barSize={'none'}\n        height={groupRole == 'Creator' || 'Admin' ? '90%' : '50%'}\n        userStyle='light'\n      >\n        <SettingsModal\n          params={{ groupCode, groupName, userName, tentType, groupRole }}\n          navigation={navigation}\n          toggleModal={toggleSettings}\n        />\n      </BottomSheetModal>\n    </SafeAreaView>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: theme.primaryContainer,\n      alignItems: 'center',\n    },\n    containerHeader: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      width: '100%',\n    },\n    header: {\n      //view of top headers above boxText\n      marginBottom: 10,\n      marginTop: 4,\n      color: theme.grey1,\n      width: '90%',\n      fontSize: 20,\n      //fontFamily: 'Merriweather_700Bold',\n      fontFamily: 'Montserrat_700Bold',\n    },\n    boxText: {\n      //View of top 2 boxes of text (groupCode and groupName)\n      marginBottom: 10,\n      width: '90%',\n      backgroundColor: theme.white1,\n      borderRadius: 8,\n      borderWidth: 0.3,\n      borderColor: theme.white1,\n    },\n    contentText: {\n      //style of text inside boxText\n      fontSize: 24,\n      textAlign: 'center',\n      marginHorizontal: 8,\n      //fontFamily: 'OpenSans_400Regular',\n      fontFamily: 'Montserrat_400Regular',\n    },\n    listItem: {\n      //style of a member list item\n      backgroundColor: theme.primary,\n      padding: 4,\n      height: 35,\n      marginVertical: 4,\n      borderRadius: 12,\n      width: '100%',\n      alignSelf: 'center',\n      alignItems: 'center',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      paddingHorizontal: 20,\n    },\n    listText: {\n      //text of a member item\n      fontSize: 15,\n      //fontFamily: 'OpenSans_400Regular',\n      fontFamily: 'Montserrat_400Regular',\n      color: theme.text1,\n    },\n    modalText: {\n      //style of text within the modals (member info text and roleChange text)\n      fontSize: 18,\n      fontWeight: '500',\n    },\n    popUpHeaderView: {\n      //view of the header of the info popup modal\n      flexDirection: 'row',\n      height: '20%',\n      width: '94%',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    },\n    popUpHalfBody: {\n      //view of the half of the info in the info popup modal\n      flexDirection: 'row',\n      alignSelf: 'center',\n      height: '50%',\n      width: '90%',\n      justifyContent: 'start',\n      alignItems: 'center',\n      borderRadius: 16,\n    },\n    removeBtn: {\n      //remove button for removing member if the user is the Creator\n      flexDirection: 'row',\n      width: '100%',\n      height: '85%',\n      backgroundColor: '#ececec',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 15,\n    },\n    roleChangeListItem: {\n      //Style of an item in the member roleChange modal (for creator only)\n      flexDirection: 'row',\n      height: '33%',\n      width: '95%',\n      justifyContent: 'center',\n      alignSelf: 'center',\n      alignItems: 'center',\n      borderBottomWidth: 1,\n      borderColor: '#cfcfcf',\n    },\n    shadowProp: {\n      shadowColor: '#171717',\n      shadowOffset: { width: -2, height: 3 },\n      shadowOpacity: 0.2,\n      shadowRadius: 3,\n    },\n    highlightShadow: {\n      shadowColor: '#ff0',\n      shadowRadius: 10,\n      shadowOpacity: 0.8,\n    },\n  });\n","import React, { useState, useCallback , memo} from 'react';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { View, StyleSheet, Text, TouchableOpacity, SafeAreaView } from 'react-native';\nimport { Title, Drawer, Switch } from 'react-native-paper';\nimport { DrawerContentScrollView, DrawerItem } from '@react-navigation/drawer';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\n\nimport { ConfirmationModal } from '../components/ConfirmationModal';\nimport { reset } from '../redux/reducers/userSlice';\n\nconst PERSISTENCE_KEY = 'NAVIGATION_STATE_V1';\n\nexport default memo(function DrawerContent(props) {\n  const [status, setStatus] = useState(false);\n  const [isConfirmationVisible, setConfirmationVisible] = useState(false);\n  \n  const dispatch = useDispatch();\n  const groupCode = useSelector((state) => state.user.currGroupCode);\n\n  const useUpdateTentStatus = (groupCode) => {\n    const queryClient = useQueryClient();\n    return useMutation((status) => updateTentStatus(groupCode, status), {\n      onError: (error) => {\n        console.error(error);\n      },\n      onSuccess: () => {\n        queryClient.invalidateQueries(['group', groupCode]);\n      },\n    });\n  };\n  function updateTentStatus(groupCode, status) {\n    return firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .collection('members')\n      .doc(firebase.auth().currentUser.uid)\n      .update({\n        inTent: status,\n      });\n    // .then(() => {\n    //   console.log('successfully updated tent status: ', status);\n    // })\n    // .catch((error) => {\n    //   console.error(error);\n    // });\n  }\n\n  const postTentStatus = useUpdateTentStatus(groupCode);\n\n  useFocusEffect(\n    useCallback(() => {\n      let mounted = true;\n      console.log('useFocusEffect triggered');\n      if (mounted && groupCode != '' && groupCode != null) {\n        firebase\n          .firestore()\n          .collection('groups')\n          .doc(groupCode)\n          .collection('members')\n          .doc(firebase.auth().currentUser.uid)\n          .get()\n          .then((doc) => {\n            if (mounted && doc.exists) {\n              console.log(doc.data().inTent);\n              setStatus(doc.data().inTent);\n              console.log('status: ', status);\n            } else {\n              console.log(\"doc doesn't exist\");\n            }\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n      return () => (mounted = false);\n    }, [groupCode])\n  );\n\n  const onToggleSwitch = async () => {\n    setStatus(!status);\n    postTentStatus.mutate(!status);\n  };\n\n  function toggleConfirmation() {\n    setConfirmationVisible(!isConfirmationVisible);\n  }\n\n  async function onLogout() {\n    await AsyncStorage.multiRemove(['USER_EMAIL', 'USER_PASSWORD', PERSISTENCE_KEY]);\n    await firebase.auth().signOut();\n    dispatch(reset());\n  }\n\n  return (\n    <View style={{ flex: 1 }}>\n      <DrawerContentScrollView {...props}>\n        <View style={styles.drawerContent}>\n          <View style={styles.userInfoSection}>\n            <View style={{ flexDirection: 'row', marginTop: 15 }}>\n              <Title style={styles.title}>Krzyzewskiville</Title>\n            </View>\n          </View>\n\n          <Drawer.Section style={styles.drawerSection}>\n            <DrawerItem\n              icon={({ color, size }) => <Icon name='home-outline' color={color} size={size} />}\n              label='Home'\n              onPress={() => {\n                props.navigation.navigate('Home');\n              }}\n            />\n            <DrawerItem\n              icon={({ color, size }) => <Icon name='account-group-outline' color={color} size={size} />}\n              label='Group Overview'\n              onPress={() => {\n                props.navigation.navigate('GroupInfo');\n              }}\n            />\n            <DrawerItem\n              icon={({ color, size }) => <Icon name='calendar-text-outline' color={color} size={size} />}\n              label='Your Availability'\n              onPress={() => {\n                props.navigation.navigate('AvailabilityScreen');\n              }}\n            />\n            <DrawerItem\n              icon={({ color, size }) => <Icon name='calendar-check-outline' color={color} size={size} />}\n              label='Shifts This Week'\n              onPress={() => {\n                props.navigation.navigate('ShiftsScreen');\n              }}\n            />\n            <DrawerItem\n              icon={({ color, size }) => <Icon name='calendar-outline' color={color} size={size} />}\n              label='Schedule'\n              onPress={() => {\n                props.navigation.navigate('ScheduleScreen');\n              }}\n            />\n            {/* <DrawerItem\n              icon={({ color, size }) => <Icon name='alert-outline' color={color} size={size} />}\n              label='Line Monitoring'\n              onPress={() => {\n                props.navigation.navigate('MonitorScreen');\n              }}\n            /> */}\n            <DrawerItem\n              icon={({ color, size }) => <Icon name='information-outline' color={color} size={size} />}\n              label='Information'\n              onPress={() => {\n                props.navigation.navigate('InfoScreen');\n              }}\n            />\n          </Drawer.Section>\n          <Drawer.Section title='Status'>\n            <View style={styles.status}>\n              <Text style={{ color: '#555555' }}>In Tent</Text>\n              <Switch value={status} onValueChange={onToggleSwitch} color='#3eb489' />\n            </View>\n          </Drawer.Section>\n        </View>\n      </DrawerContentScrollView>\n      <Drawer.Section style={styles.bottomDrawerSection}>\n        <DrawerItem\n          icon={({ color, size }) => <Icon name='logout' color={color} size={size} />}\n          label='Log Out'\n          onPress={toggleConfirmation}\n        />\n      </Drawer.Section>\n\n      <ConfirmationModal\n        body={'Are you sure you want to log out?'}\n        buttonText={'Log out'}\n        buttonAction={() => {\n          onLogout();\n        }}\n        toggleModal={toggleConfirmation}\n        isVisible={isConfirmationVisible}\n        onBackdropPress={toggleConfirmation}\n        onSwipeComplete={toggleConfirmation}\n        userStyle='light'\n      />\n    </View>\n  );\n})\n\nconst styles = StyleSheet.create({\n  drawerContent: {\n    flex: 1,\n  },\n  userInfoSection: {\n    paddingLeft: 20,\n  },\n  title: {\n    fontSize: 16,\n    marginTop: 3,\n    fontWeight: 'bold',\n  },\n  caption: {\n    fontSize: 14,\n    lineHeight: 14,\n  },\n  row: {\n    marginTop: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  section: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 15,\n  },\n  paragraph: {\n    fontWeight: 'bold',\n    marginRight: 3,\n  },\n  drawerSection: {\n    marginTop: 15,\n  },\n  bottomDrawerSection: {\n    marginBottom: 15,\n    borderTopColor: '#f4f4f4',\n    borderTopWidth: 1,\n  },\n  status: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n  },\n});\n","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Text,\n  View,\n  StyleSheet,\n  ScrollView,\n  Dimensions,\n  TouchableOpacity,\n  Platform,\n  RefreshControl,\n} from 'react-native';\nimport { Table, TableWrapper, Row, Col, Cell } from 'react-native-table-component';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { Picker } from '@react-native-picker/picker';\n\nimport { Snackbar } from 'react-native-paper';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { useSelector } from 'react-redux';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport { useTheme } from '../context/ThemeProvider';\nimport { useRefreshByUser } from '../hooks/useRefreshByUser';\nimport { BottomSheetModal } from '../components/BottomSheetModal';\nimport { ActionSheetModal } from '../components/ActionSheetModal';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { ErrorPage } from '../components/ErrorPage';\n\n\nconst window = Dimensions.get('window');\n\n// prettier-ignore\nconst agenda = {\n  tableHead: ['', 'Sun', 'Mon', 'Tu', 'Wed', 'Th', 'Fri', 'Sat'],\n  tableTime: [ ' 1 am', ' 2 am', ' 3 am', ' 4 am', ' 5 am', ' 6 am', ' 7 am',' 8 am', ' 9 am', '10 am', '11 am', \n  '12 pm',' 1 pm', ' 2 pm', ' 3 pm', ' 4 pm', ' 5 pm', ' 6 pm', ' 7 pm', ' 8 pm', ' 9 pm', '10 pm', '11 pm',],\n};\n\nconst tableData = [];\nfor (let i = 0; i < 48; i += 1) {\n  const rowData = [];\n  for (let j = 0; j < 7; j += 1) {\n    rowData.push('');\n  }\n  tableData.push(rowData);\n}\n\nconst cellHeight = 35;\nlet currIndex;\nlet availability;\n\nexport default function Availability({navigation}) {\n  const groupCode = useSelector((state) => state.user.currGroupCode);\n\n  const [dimensions, setDimensions] = useState({ window });\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [isDeleteModalVisible, setDeleteModalVisible] = useState(false);\n  const [isSnackVisible, setSnackVisible] = useState(false);\n  const [snackMessage, setSnackMessage] = useState('');\n  const [selectedDay, setSelectedDay] = useState(0);\n  const [startTime, setStartTime] = useState({\n    hour: 0,\n    minute: 0,\n    day: 0,\n  });\n  const [endTime, setEndTime] = useState({\n    hour: 0,\n    minute: 0,\n    day: 0,\n  });\n  const { theme } = useTheme();\n\n  const { isLoading, isError, error, data, refetch } = useQuery(\n    ['availability', firebase.auth().currentUser.uid, groupCode],\n    () => fetchAvailability(groupCode)\n  );\n  const { isRefetchingByUser, refetchByUser } = useRefreshByUser(refetch);\n\n  async function fetchAvailability(groupCode) {\n\n\n    let availabilityUI = new Array(336);\n    availabilityUI.fill([true, 0]);\n    await firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .collection('members')\n      .doc(firebase.auth().currentUser.uid)\n      .get()\n      .then((doc) => {\n        availability = doc.data().availability;\n        //console.log('availability fetched from firebase', availability);\n      });\n    for (let i = 0; i < availability.length; i++) {\n      if (!availability[i]) {\n        let j = i;\n        while (j < availability.length && !availability[j]) {\n          availabilityUI[j] = [true, 0];\n          j++;\n        }\n        availabilityUI[j - 1] = [false, j - i];\n        i = j;\n      } else {\n        availabilityUI[i] = [true, 0];\n      }\n    }\n    return availabilityUI;\n  }\n\n  const useUpdateAvailability = (groupCode) => {\n    const queryClient = useQueryClient();\n    return useMutation(() => updateAvailability(groupCode), {\n      onError: (error) => {\n        console.error(error);\n      },\n      onSuccess: () => {\n        queryClient.invalidateQueries(['availability', firebase.auth().currentUser.uid, groupCode]);\n      },\n    });\n  };\n\n  const postAvailability = useUpdateAvailability(groupCode);\n\n  const updateAvailability = (groupCode) => {\n    const memberRef = firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .collection('members')\n      .doc(firebase.auth().currentUser.uid);\n    if (selectedDay == 7) {\n      toggleSnackBar();\n      setSnackMessage('Please select a day');\n      return;\n    }\n    let startIdx =\n      parseInt(selectedDay) * 48 + parseInt(startTime.day) + parseInt(startTime.minute) + parseInt(startTime.hour) * 2;\n    let endIdx =\n      parseInt(selectedDay) * 48 + parseInt(endTime.day) + parseInt(endTime.minute) + parseInt(endTime.hour) * 2;\n    if (endIdx == parseInt(selectedDay) * 48) {\n      endIdx += 48;\n    }\n    if (startIdx >= endIdx) {\n      toggleSnackBar();\n      setSnackMessage('Invalid time slot');\n      return;\n    }\n    for (let i = startIdx; i < endIdx; i++) {\n      availability[i] = false;\n    }\n    //availabilityUI[endIdx - 1] = [false, endIdx - startIdx];\n    console.log('availability', availability);\n    memberRef.update({\n      availability: availability,\n    });\n    toggleModal();\n  };\n\n  //const queryClient = useQueryClient();\n  const useDeleteAvailability = (groupCode) => {\n    const queryClient = useQueryClient();\n    return useMutation(() => deleteCell(groupCode), {\n      onError: (error) => {\n        console.error(error);\n      },\n      onSuccess: () => {\n        queryClient.invalidateQueries(['availability', firebase.auth().currentUser.uid, groupCode]);\n      },\n    });\n  };\n\n  const deleteAvailability = useDeleteAvailability(groupCode);\n\n  const deleteCell = (groupCode) => {\n    const memberRef = firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .collection('members')\n      .doc(firebase.auth().currentUser.uid);\n    console.log('currIndex', currIndex);\n    let startIdx = currIndex - data[currIndex][1];\n    console.log('startIdx', startIdx);\n    for (let i = startIdx; i <= currIndex; i++) {\n      availability[i] = true;\n    }\n    memberRef.update({\n      availability: availability,\n    });\n    toggleDeleteModal();\n  };\n\n  function toggleModal() {\n    setModalVisible(!isModalVisible);\n  }\n  function toggleDeleteModal() {\n    setDeleteModalVisible(!isDeleteModalVisible);\n  }\n  function toggleSnackBar() {\n    setSnackVisible(!isSnackVisible);\n  }\n\n  const element = (cellData, index, availability) => (\n    <TouchableOpacity\n      style={[styles(theme).btn, { height: cellHeight * parseInt(availability[index][1]) }]}\n      onPress={() => {\n        console.log(index);\n        toggleDeleteModal();\n        currIndex = index;\n      }}\n    ></TouchableOpacity>\n  );\n\n  useEffect(() => {\n    const subscription = Dimensions.addEventListener('change', ({ window }) => {\n      setDimensions({ window });\n    });\n    return () => subscription?.remove();\n  });\n\n  if (isLoading) {\n    return <LoadingIndicator />;\n  }\n\n  if (isError) {\n    return <ErrorPage navigation={navigation}/>;\n  }\n\n  return (\n    <View style={styles(theme).container}>\n      <Table borderStyle={{ borderColor: 'transparent' }}>\n        <Row\n          data={agenda.tableHead}\n          style={StyleSheet.flatten(styles(theme).head)}\n          widthArr={[\n            dimensions.window.width / 12,\n            dimensions.window.width * (11 / 84),\n            dimensions.window.width * (11 / 84),\n            dimensions.window.width * (11 / 84),\n            dimensions.window.width * (11 / 84),\n            dimensions.window.width * (11 / 84),\n            dimensions.window.width * (11 / 84),\n            dimensions.window.width * (11 / 84),\n          ]}\n          textStyle={{ textAlign: 'center', fontWeight: '700' }}\n        />\n      </Table>\n\n      <ScrollView\n        showsVerticalScrollIndicator={false}\n        //onScroll = {onScroll}\n        //scrollEventThrottle = {16}\n        refreshControl={<RefreshControl enabled={true} refreshing={isRefetchingByUser} onRefresh={refetchByUser} />}\n      >\n        <Table borderStyle={{ borderWidth: 0, borderColor: 'transparent' }} style={{ flexDirection: 'row' }}>\n          <TableWrapper\n            style={StyleSheet.flatten([\n              { width: dimensions.window.width / 12, marginTop: 34, alignItems: 'center' /* , borderWidth:1 */ },\n            ])}\n          >\n            <Col\n              data={agenda.tableTime}\n              heightArr={new Array(23).fill(cellHeight * 2)}\n              textStyle={{\n                textAlign: 'center',\n                fontWeight: '700',\n                fontSize: 10,\n                width: '70%',\n                color: '#717573',\n                marginLeft: 2\n              }}\n            />\n          </TableWrapper>\n\n          <TableWrapper style={{ flex: 1 }}>\n            {tableData.map((rowData, index) => (\n              <TableWrapper\n                key={index}\n                style={StyleSheet.flatten(styles(theme).row)}\n              >\n                {rowData.map((cellData, cellIndex) => (\n                  <Cell\n                    key={cellIndex}\n                    data={data[48 * cellIndex + index][0] ? cellData : element(cellData, 48 * cellIndex + index, data)}\n                    //{data[48 * cellIndex + index].toString()}\n\n                    style={StyleSheet.flatten([styles(theme).cell, { width: dimensions.window.width * (11 / 84) }])}\n                  />\n                ))}\n              </TableWrapper>\n            ))}\n          </TableWrapper>\n        </Table>\n      </ScrollView>\n\n      <View style={styles(theme).addContainer}>\n        <TouchableOpacity onPress={toggleModal}>\n          <View style={styles(theme).FAB}>\n            <Icon name={'plus'} color={theme.text2} size={30} />\n          </View>\n        </TouchableOpacity>\n      </View>\n\n      <ActionSheetModal\n        isVisible={isDeleteModalVisible}\n        onBackdropPress={toggleDeleteModal}\n        height={55}\n        userStyle='light'\n      >\n        <TouchableOpacity\n          onPress={() => deleteAvailability.mutate()}\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '100%',\n            height: '100%',\n            borderRadius: 20,\n          }}\n        >\n          <Icon name={'trash-can-outline'} color={theme.error} size={26} />\n          <Text style={{ textAlign: 'center', color: theme.error, fontSize: 26, fontWeight: '600', marginLeft: 10 }}>\n            Delete\n          </Text>\n        </TouchableOpacity>\n      </ActionSheetModal>\n\n      <BottomSheetModal\n        isVisible={isModalVisible}\n        onBackdropPress={toggleModal}\n        //onSwipeComplete={toggleModal}\n        swipeDown={false}\n        barSize={'none'}\n        height='90%'\n        userStyle='light'\n      >\n        <Snackbar\n          visible={isSnackVisible}\n          onDismiss={() => setSnackVisible(false)}\n          wrapperStyle={{ top: 0 }}\n          duration={2000}\n        >\n          <Text style={{ textAlign: 'center', color: theme.text1 }}>{snackMessage}</Text>\n        </Snackbar>\n\n        <View\n          style={{\n            height: '10%',\n            width: '100%',\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n            borderBottomWidth: 1,\n          }}\n        >\n          <BottomSheetModal.Header fontSize={24} verticalMargin={0}>\n            Add New Busy Time\n          </BottomSheetModal.Header>\n          <TouchableOpacity onPress={toggleModal} style={{ justifyContent: 'center', position: 'absolute', right: 15 }}>\n            <Icon name='close-circle' color={theme.grey2} size={26} />\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles(theme).modalBody}>\n          <View style={styles(theme).selectDay}>\n            <Text style={styles(theme).modalText}>Select Day: </Text>\n\n            <View style={{ width: '100%', height: '75%', alignItems: 'center' }}>\n              <Picker\n                selectedValue={selectedDay}\n                onValueChange={(itemValue, itemIndex) => {\n                  setSelectedDay(itemValue);\n                }}\n                style={\n                  Platform.OS === 'ios' ? { height: '100%', width: '80%' } : { height: 30, width: '70%', marginTop: 20 }\n                }\n                itemStyle={Platform.OS === 'ios' ? styles(theme).pickerItem : {}}\n              >\n                <Picker.Item label='Sunday' value={0} />\n                <Picker.Item label='Monday' value={1} />\n                <Picker.Item label='Tuesday' value={2} />\n                <Picker.Item label='Wednesday' value={3} />\n                <Picker.Item label='Thursday' value={4} />\n                <Picker.Item label='Friday' value={5} />\n                <Picker.Item label='Saturday' value={6} />\n              </Picker>\n            </View>\n          </View>\n\n          <View style={styles(theme).selectTime}>\n            <Text style={styles(theme).modalText}>Start Time: </Text>\n\n            <View style={styles(theme).timePickerBody}>\n              <Picker\n                selectedValue={startTime.hour}\n                onValueChange={(itemValue, itemIndex) => {\n                  setStartTime({ ...startTime, hour: itemValue });\n                }}\n                style={Platform.OS === 'ios' ? styles(theme).picker : { height: 30, width: '30%', marginTop: 20 }}\n                itemStyle={Platform.OS === 'ios' ? styles(theme).pickerItem : {}}\n              >\n                <Picker.Item label='12' value={0} />\n                <Picker.Item label='1' value={1} />\n                <Picker.Item label='2' value={2} />\n                <Picker.Item label='3' value={3} />\n                <Picker.Item label='4' value={4} />\n                <Picker.Item label='5' value={5} />\n                <Picker.Item label='6' value={6} />\n                <Picker.Item label='7' value={7} />\n                <Picker.Item label='8' value={8} />\n                <Picker.Item label='9' value={9} />\n                <Picker.Item label='10' value={10} />\n                <Picker.Item label='11' value={11} />\n              </Picker>\n              <Picker\n                selectedValue={startTime.minute}\n                onValueChange={(itemValue, itemIndex) => {\n                  setStartTime({ ...startTime, minute: itemValue });\n                }}\n                style={Platform.OS === 'ios' ? styles(theme).picker : { height: 30, width: '30%', marginTop: 20 }}\n                itemStyle={Platform.OS === 'ios' ? styles(theme).pickerItem : {}}\n              >\n                <Picker.Item label='00' value={0} />\n                <Picker.Item label='30' value={1} />\n              </Picker>\n              <Picker\n                selectedValue={startTime.day}\n                onValueChange={(itemValue, itemIndex) => {\n                  setStartTime({ ...startTime, day: itemValue });\n                }}\n                style={Platform.OS === 'ios' ? styles(theme).picker : { height: 30, width: '30%', marginTop: 20 }}\n                itemStyle={Platform.OS === 'ios' ? styles(theme).pickerItem : {}}\n              >\n                <Picker.Item label='AM' value={0} />\n                <Picker.Item label='PM' value={24} />\n              </Picker>\n            </View>\n          </View>\n\n          <View style={styles(theme).selectTime}>\n            <Text style={styles(theme).modalText}>End Time: </Text>\n\n            <View style={styles(theme).timePickerBody}>\n              <Picker\n                selectedValue={endTime.hour}\n                onValueChange={(itemValue, itemIndex) => {\n                  setEndTime({ ...endTime, hour: itemValue });\n                }}\n                style={Platform.OS === 'ios' ? styles(theme).picker : { height: 30, width: '30%', marginTop: 20 }}\n                itemStyle={Platform.OS === 'ios' ? styles(theme).pickerItem : {}}\n              >\n                <Picker.Item label='12' value={0} />\n                <Picker.Item label='1' value={1} />\n                <Picker.Item label='2' value={2} />\n                <Picker.Item label='3' value={3} />\n                <Picker.Item label='4' value={4} />\n                <Picker.Item label='5' value={5} />\n                <Picker.Item label='6' value={6} />\n                <Picker.Item label='7' value={7} />\n                <Picker.Item label='8' value={8} />\n                <Picker.Item label='9' value={9} />\n                <Picker.Item label='10' value={10} />\n                <Picker.Item label='11' value={11} />\n              </Picker>\n              <Picker\n                selectedValue={endTime.minute}\n                onValueChange={(itemValue, itemIndex) => {\n                  setEndTime({ ...endTime, minute: itemValue });\n                }}\n                style={Platform.OS === 'ios' ? styles(theme).picker : { height: 30, width: '30%', marginTop: 20 }}\n                itemStyle={Platform.OS === 'ios' ? styles(theme).pickerItem : {}}\n              >\n                <Picker.Item label='00' value={0} />\n                <Picker.Item label='30' value={1} />\n              </Picker>\n              <Picker\n                selectedValue={endTime.day}\n                onValueChange={(itemValue, itemIndex) => {\n                  setEndTime({ ...endTime, day: itemValue });\n                }}\n                style={Platform.OS === 'ios' ? styles(theme).picker : { height: 30, width: '30%', marginTop: 20 }}\n                itemStyle={Platform.OS === 'ios' ? styles(theme).pickerItem : {}}\n              >\n                <Picker.Item label='AM' value={0} />\n                <Picker.Item label='PM' value={24} />\n              </Picker>\n            </View>\n          </View>\n        </View>\n\n        <View style={styles(theme).modalFooter}>\n          <TouchableOpacity style={styles(theme).addBtn} onPress={toggleModal}>\n            <Text style={styles(theme).btnText}>Cancel</Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            style={[\n              styles(theme).addBtn,\n              { backgroundColor: theme.primary},\n            ]}\n            onPress={() => postAvailability.mutate()}\n          >\n            <Text style={[styles(theme).btnText, { color: theme.text1 }]}>Add</Text>\n          </TouchableOpacity>\n        </View>\n      </BottomSheetModal>\n    </View>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    container: {\n      flex: 1,\n      padding: 0,\n      backgroundColor: theme.background,\n    },\n    text: {\n      textAlign: 'center',\n    },\n    modalText: {\n      fontSize: 18,\n      color: theme.text2,\n      textAlign: 'center',\n      padding: 0,\n    },\n    modalBody: {\n      alignItems: 'center',\n      width: '100%',\n      height: '80%',\n      marginTop: 10,\n      //justifyContent: 'space-evenly',\n      //borderWidth:1,\n    },\n    picker: {\n      height: '100%',\n      width: '35%',\n    },\n    pickerItem: {\n      height: '100%',\n    },\n    selectDay: {\n      alignItems: 'center',\n      width: '70%',\n      height: '23%',\n      //borderWidth:1,\n    },\n    selectTime: {\n      alignItems: 'center',\n      height: '35%',\n      width: '90%',\n    },\n    timePickerBody: {\n      flexDirection: 'row',\n      width: '100%',\n      height: '90%',\n      justifyContent: 'center',\n      //borderWidth:1,\n    },\n    modalFooter: {\n      flexDirection: 'row',\n      width: '100%',\n      height: '10%',\n      alignItems: 'center',\n      justifyContent: 'space-evenly',\n    },\n    addBtn: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '50%',\n      width: '40%',\n      height: '60%',\n      borderRadius: 15,\n    },\n    btnText: {\n      color: theme.text2,\n      fontSize: 24,\n      fontWeight: '600',\n    },\n    head: {\n      backgroundColor: theme.background,\n      height: 35,\n      borderBottomLeftRadius: 20,\n      borderBottomRightRadius: 20,\n      shadowColor: '#171717',\n      shadowOffset: { width: 0, height: -5 },\n      shadowOpacity: 0.9,\n      shadowRadius: 10,\n      elevation: 3,\n      overflow: 'visible',\n    },\n    row: {\n      height: cellHeight,\n      flexDirection: 'row',\n      borderBottomWidth: 1,\n      borderColor: '#cfcfcf',\n      //borderColor: '#a7aebe',\n    },\n    cell: {\n      height: cellHeight,\n      flexDirection: 'column',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      borderRightWidth: 1,\n      borderColor: '#cfcfcf',\n      //borderColor: '#a7aebe',\n      margin: 0,\n    },\n    btn: {\n      width: '92%',\n      height: 42,\n      backgroundColor: theme.primary,\n      borderRadius: 7,\n      borderWidth: 1,\n      alignSelf: 'center',\n    },\n    addContainer: {\n      position: 'absolute',\n      backgroundColor: '#00000000',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      right: 25,\n      bottom: 20,\n    },\n    FAB: {\n      height: 50,\n      width: 50,\n      backgroundColor: '#D2D5DC',\n      borderRadius: 12,\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  });\n","import React, { useState, useCallback, useRef, memo } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n  FlatList,\n  Dimensions,\n  Platform,\n  useWindowDimensions,\n  RefreshControl,\n  LayoutAnimation,\n  UIManager,\n  SafeAreaView,\n  Image,\n} from 'react-native';\nimport { Table, TableWrapper, Col, Cell } from 'react-native-table-component';\nimport { Divider, Badge } from 'react-native-paper';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Animated, { withSpring, useAnimatedStyle, useSharedValue } from 'react-native-reanimated';\nimport { FAB, Portal, Provider } from 'react-native-paper';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { createGroupSchedule } from '../backend/CreateGroupSchedule';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport { useTheme } from '../context/ThemeProvider';\nimport { useRefreshByUser } from '../hooks/useRefreshByUser';\nimport { ConfirmationModal } from '../components/ConfirmationModal';\nimport { BottomSheetModal } from '../components/BottomSheetModal';\nimport { ActionSheetModal } from '../components/ActionSheetModal';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { ErrorPage } from '../components/ErrorPage';\nimport { toggleSnackBar, setSnackMessage } from '../redux/reducers/snackbarSlice';\nimport tentemoji from '../assets/tentemoji.png';\n\nif (Platform.OS === 'android' && UIManager.setLayoutAnimationEnabledExperimental) {\n  UIManager.setLayoutAnimationEnabledExperimental(true);\n}\n\n//prettier-ignore\nconst times = [ //Times for right column of the list of times of the day\n  '12am', '1am', '2am', '3am', '4am', '5am', '6am', '7am', '8am', '9am', '10am', \n  '11am', '12am', '1pm', '2pm', '3pm', '4pm', '5pm', '6pm', '7pm', '8pm', '9pm',\n  '10pm', '11pm',\n];\n\n//Colors of each member, first is for 'empty'\n//prettier-ignore\nconst colors = ['#D0342C','#dd7e6b','#ea9999','#f9cb9c','#ffe599','#b6d7a8','#a2c4c9','#a4c2f4','#fed9c9','#b4a7d6','#d5a6bd','#e69138','#6aa84f',];\n\nlet prevColorCodes;\nlet prevSchedule = new Array();\n\nconst win = Dimensions.get('window'); //Global Var for screen size\n\nexport default function Schedule({ navigation }) {\n  const groupCode = useSelector((state) => state.user.currGroupCode);\n  const groupRole = useSelector((state) => state.user.currGroupRole);\n  const tentType = useSelector((state) => state.user.currTentType);\n\n  const [isReady, setIsReady] = useState(false);\n  const [isRefetching, setIsRefetching] = useState(false);\n  const [isModalVisible, setModalVisible] = useState(false); //for the popup for editing a time cell\n  const [isMemberModalVisible, setMemberModalVisible] = useState(false); //for the popup for choosing a member from list\n  const [isConfirmationVisible, setConfirmationVisible] = useState(false); //for confirmation Popup\n  const [fabState, setFabState] = useState({ open: false });\n  const [weekDisplay, setWeekDisplay] = useState('Current Week');\n  const [renderDay, setRenderDay] = useState('Sunday'); //stores the current day that is being rendered\n  const [newMember, setNewMember] = useState('Select a Member'); //to set the new member to replace old one\n\n  const oldMember = useRef('');\n  const editIndex = useRef(0);\n  const newSchedule = useRef([]);\n  const editSuccessful = useRef(false); //tentative for when editing schedule and member already exists, then it shouldn't change, otherwise it will\n  const scrollRef = useRef([]);\n  const colorCodes = useRef([{ id: 1, name: 'empty', color: '#ececec', changedHrs: 0 }]);\n\n  const { theme } = useTheme();\n  const dayHighlightOffset = useSharedValue(0);\n  const isCurrentWeek = useSharedValue(1);\n  const { open } = fabState;\n  const dispatch = useDispatch();\n\n  const { isLoading, isError, error, refetch, data } = useQuery(\n    ['groupSchedule', firebase.auth().currentUser.uid, groupCode, weekDisplay],\n    () => fetchGroupSchedule(groupCode, weekDisplay),\n    {\n      initialData: [],\n      onSuccess: () => {\n        setIsReady(true);\n        setIsRefetching(false);\n      },\n    }\n  );\n\n  const { isRefetchingByUser, refetchByUser } = useRefreshByUser(refetch);\n\n  async function fetchGroupSchedule(groupCode, weekDisplay) {\n    console.log('query initiated');\n\n    let currSchedule;\n    await firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .get()\n      .then((doc) => {\n        currSchedule = doc.data().groupSchedule;\n        prevSchedule = doc.data().previousSchedule;\n        colorCodes.current = doc.data().memberArr;\n        prevColorCodes = doc.data().previousMemberArr;\n      })\n      .catch((error) => {\n        console.error(error);\n        throw error;\n      });\n    if (weekDisplay == 'Current Week') {\n      //console.log('current week returned', currSchedule);\n      return currSchedule;\n    }\n    //console.log('previous week returned', prevSchedule);\n    return prevSchedule;\n  }\n\n  const postEditCell = useEditCell(groupCode, weekDisplay);\n\n  function useEditCell(groupCode, weekDisplay) {\n    const queryClient = useQueryClient();\n    return useMutation((options) => editCell(options), {\n      onError: (error) => {\n        console.error(error);\n      },\n      onSuccess: () => {\n        if (editSuccessful.current) {\n          queryClient.setQueryData(\n            ['groupSchedule', firebase.auth().currentUser.uid, groupCode, weekDisplay],\n            newSchedule.current\n          );\n        } else return;\n      },\n    });\n  }\n\n  //function for editing the schedule based on old member and new member to replace\n  async function editCell(options) {\n    const { index, oldMember, newMember, groupCode } = options;\n    const groupRef = firebase.firestore().collection('groups').doc(groupCode);\n\n    let currSchedule = data;\n    //Must check if the member already exists in the array\n    if (newMember !== 'empty' && data[index].trim().split(' ').includes(newMember)) {\n      dispatch(toggleSnackBar());\n      dispatch(setSnackMessage('Member already in chosen timeslot'));\n      editSuccessful.current = false;\n    } else {\n      currSchedule[index] = currSchedule[index].replace(oldMember, newMember);\n      const indexofOld = colorCodes.current.findIndex((object) => object.name === oldMember);\n      const indexofNew = colorCodes.current.findIndex((object) => object.name === newMember);\n\n      let oldHours;\n      let newHours;\n      let oldShifts;\n      let newShifts;\n      await groupRef\n        .collection('members')\n        .doc(colorCodes.current[indexofOld].id)\n        .get()\n        .then((doc) => {\n          oldHours = doc.data().scheduledHrs - 0.5;\n          oldShifts = doc.data().shifts;\n          oldShifts[index] = false;\n        });\n      await groupRef\n        .collection('members')\n        .doc(colorCodes.current[indexofNew].id)\n        .get()\n        .then((doc) => {\n          newHours = doc.data().scheduledHrs + 0.5;\n          newShifts = doc.data().shifts;\n          newShifts[index] = true;\n        });\n      groupRef.collection('members').doc(colorCodes.current[indexofOld].id).update({\n        scheduledHrs: oldHours,\n        shifts: oldShifts,\n      });\n      groupRef.collection('members').doc(colorCodes.current[indexofNew].id).update({\n        scheduledHrs: newHours,\n        shifts: newShifts,\n      });\n\n      //colorCodes.current[indexofOld].changedHrs -= 0.5;\n      //colorCodes.current[indexofNew].changedHrs += 0.5;\n\n      groupRef.update({\n        groupSchedule: currSchedule,\n      });\n\n      newSchedule.current = currSchedule;\n      editSuccessful.current = true;\n    }\n  }\n\n  const postSchedule = useUpdateSchedule(groupCode, tentType, weekDisplay);\n\n  function useUpdateSchedule(groupCode, tentType, weekDisplay) {\n    const queryClient = useQueryClient();\n    return useMutation(() => createNewGroupSchedule(groupCode, tentType), {\n      onError: (error) => {\n        console.error(error);\n      },\n      onSuccess: () => {\n        //console.log('newSchedule', newSchedule);\n        queryClient.setQueryData(\n          ['groupSchedule', firebase.auth().currentUser.uid, groupCode, weekDisplay],\n          newSchedule.current\n        );\n        queryClient.invalidateQueries(['shifts', firebase.auth().currentUser.uid, groupCode]);\n      },\n    });\n  }\n\n  async function createNewGroupSchedule(groupCode, tentType) {\n    //let newSchedule;\n    await createGroupSchedule(groupCode, tentType)\n      .then((groupSchedule) => {\n        console.log('Group Schedule', groupSchedule);\n        newSchedule.current = groupSchedule;\n\n        //If current schedule is blank, no need to update\n        if (data[0] !== undefined) prevSchedule = data;\n\n        //Update previous colorCodes to current and update current schedule to the groupSchedule\n        prevColorCodes = colorCodes.current;\n        firebase\n          .firestore()\n          .collection('groups')\n          .doc(groupCode)\n          .update({\n            groupSchedule: newSchedule.current,\n            previousSchedule: prevSchedule,\n            previousMemberArr: colorCodes.current,\n          })\n          .catch((error) => console.error(error));\n        dispatch(setSnackMessage('New Schedule created'));\n        dispatch(toggleSnackBar());\n      })\n      .catch((error) => {\n        console.error(error);\n        dispatch(setSnackMessage('Not enough members'));\n        dispatch(toggleSnackBar());\n      });\n    console.log('create new schedule', newSchedule);\n  }\n\n  function toggleModal() {\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\n    //to toggle the edit cell popup\n    setModalVisible(!isModalVisible);\n  }\n\n  function toggleMemberModal() {\n    //to toggle the popup for the member list\n    setMemberModalVisible(!isMemberModalVisible);\n  }\n\n  function toggleConfirmation() {\n    //to toggle the popup for the edit confirmation\n    setConfirmationVisible(!isConfirmationVisible);\n  }\n\n  function onFabStateChange({ open }) {\n    setFabState({ open });\n  }\n\n  function toggleWeek() {\n    if (weekDisplay == 'Current Week') {\n      console.log('showing previous week', weekDisplay);\n      setWeekDisplay('Previous Week');\n      isCurrentWeek.value = 0;\n    } else {\n      console.log('showing current week');\n      setWeekDisplay('Current Week');\n      isCurrentWeek.value = 1;\n    }\n    setIsRefetching(true);\n    refetch();\n  }\n\n  const TimeColumn = memo(function () {\n    //component for side table of 12am-12am time segments\n    return (\n      <Table style={{ width: '7%', marginTop: -31 }}>\n        <Col\n          data={times}\n          heightArr={[62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62]}\n          textStyle={StyleSheet.flatten(styles(theme).timesText)}\n          //style={{  borderWidth: 1 }}\n        />\n      </Table>\n    );\n  });\n\n  //to render flatList in member list popup\n  const renderMember = ({ item }) => {\n    let height = win.height * 0.45 * (1 / colorCodes.current.length) + 8;\n    return (\n      <View style={{ width: '100%' }}>\n        <TouchableOpacity\n          onPress={() => {\n            setNewMember(item.name);\n            toggleMemberModal();\n            console.log('height', height);\n          }}\n          style={{ width: '100%' /* borderBottomWidth:1 */ }}\n        >\n          <View style={{ height: height, justifyContent: 'center' }}>\n            <Text style={{ textAlign: 'center', color: 'black', fontSize: 18 }}>{item.name}</Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  // Component for each single cell timeslot\n  //    Parameters:\n  //      index: index of cell within the entire schedule array\n  //      person: string holding the person currently scheduled for the time cell\n  const OneCell = memo(({ index, person }) => {\n    //changes background based on who the member is\n    const indexofUser =\n      weekDisplay == 'Current Week'\n        ? colorCodes.current.findIndex((object) => object.name == person)\n        : prevColorCodes.findIndex((object) => object.name == person);\n    //console.log(colorCodes.current);\n    //console.log('indexOfUser', indexofUser);\n    const backgroundColor =\n      indexofUser != -1\n        ? weekDisplay == 'Current Week'\n          ? colorCodes.current[indexofUser].color\n          : prevColorCodes[indexofUser].color\n        : '#fff'; //gets background color from the colorCodes Array\n    if (weekDisplay == 'Current Week' && (groupRole == 'Creator' || groupRole == 'Admin')) {\n      return (\n        <View\n          /* style={[   //trying to make border radius of table round\n            { flex: 1 }, \n            index==0 ? {borderTopLeftRadius:10, borderTopRightRadius:10}: \n              index==47 ? \n              {borderBottomLeftRadius:10, borderBottomRightRadius:10}: null]} */\n          style={{ flex: 1 }}\n        >\n          <TouchableOpacity\n            onPress={() => {\n              editIndex.current = index;\n              oldMember.current = person;\n              console.log('index: ', index);\n              toggleModal();\n            }}\n          >\n            <View style={[styles(theme).timeSlotBtn, { backgroundColor: backgroundColor }]}>\n              <Text\n                style={\n                  person == 'empty'\n                    ? [styles(theme).btnText, { color: theme.error, fontWeight: '700' }]\n                    : styles(theme).btnText\n                }\n                adjustsFontSizeToFit\n                minimumFontScale={0.5}\n                numberOfLines={1}\n              >\n                {person}\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      );\n    } else {\n      return (\n        <View style={{ flex: 1 }}>\n          <View style={[styles(theme).timeSlotBtn, { backgroundColor: backgroundColor }]}>\n            <Text style={styles(theme).btnText} adjustsFontSizeToFit={true} minimumFontScale={0.5}>\n              {person}\n            </Text>\n          </View>\n        </View>\n      );\n    }\n  });\n\n  /*Component for each row to list the people in that time shift\n    # of people on the row is dependent on the tentType and time of day\n      Parameters: \n        index: index of cell within the day (range from 0-47) \n        arrayIndex: index of cell in the entire schedule array (range from 0-337)\n        members: string of one time shift (ex. \"member1 member2 member3 member4 \") */\n\n  const RenderCell = (index, arrayIndex, members) => {\n    const people = members.trim().split(' '); //stores the string as an array of single members\n    //console.log('people: ', people);\n\n    return (\n      <View style={styles(theme).row}>\n        <OneCell index={arrayIndex} person={people[0]} />\n        {people.length > 1 ? <OneCell index={arrayIndex} person={people[1]} /> : null}\n        {people.length > 2 ? <OneCell index={arrayIndex} person={people[2]} /> : null}\n        {people.length > 2 ? <OneCell index={arrayIndex} person={people[3]} /> : null}\n        {people.length > 2 ? <OneCell index={arrayIndex} person={people[4]} /> : null}\n        {people.length > 2 ? <OneCell index={arrayIndex} person={people[5]} /> : null}\n        {people.length > 6 ? <OneCell index={arrayIndex} person={people[6]} /> : null}\n        {people.length > 6 ? <OneCell index={arrayIndex} person={people[7]} /> : null}\n        {people.length > 6 ? <OneCell index={arrayIndex} person={people[8]} /> : null}\n        {people.length > 6 ? <OneCell index={arrayIndex} person={people[9]} /> : null}\n      </View>\n    );\n  };\n\n  //Component for the table for one day's schedule\n  const DailyTable = memo(function ({ day }) {\n    //if (schedule == undefined) return null;\n    let indexAdder = 0;\n    //depending on day parameter, change index in GLOBAL schedule array\n    switch (day) {\n      case 'Monday':\n        indexAdder = 48;\n        break;\n      case 'Tuesday':\n        indexAdder = 96;\n        break;\n      case 'Wednesday':\n        indexAdder = 144;\n        break;\n      case 'Thursday':\n        indexAdder = 192;\n        break;\n      case 'Friday':\n        indexAdder = 240;\n        break;\n      case 'Saturday':\n        indexAdder = 288;\n        break;\n      default:\n        indexAdder = 0;\n    }\n    let dayArr = data.slice(indexAdder, indexAdder + 48);\n    //console.log(day,\"||\", dayArr);\n    return (\n      <View style={{ marginTop: 0, width: '90%' }}>\n        <Table borderStyle={{ borderColor: 'transparent' }}>\n          {dayArr.map((rowData, index) => (\n            <TableWrapper key={index} style={StyleSheet.flatten(styles(theme).row)}>\n              <Cell\n                data={RenderCell(index, index + indexAdder, dayArr[index])}\n                textStyle={StyleSheet.flatten(styles(theme).text)}\n              />\n            </TableWrapper>\n          ))}\n        </Table>\n      </View>\n    );\n  });\n\n  const customSpringStyles = useAnimatedStyle(() => {\n    return {\n      transform: [\n        {\n          translateX: withSpring(dayHighlightOffset.value * (win.width / 7), {\n            damping: 50,\n            stiffness: 90,\n          }),\n        },\n      ],\n    };\n  });\n  const toggleWeekSpring = useAnimatedStyle(() => {\n    return {\n      transform: [\n        {\n          translateX: withSpring(isCurrentWeek.value * (win.width * 0.3), {\n            damping: 50,\n            stiffness: 90,\n          }),\n        },\n      ],\n    };\n  });\n\n  //Component for the top day buttons\n  const DayButton = ({ day, abbrev, value }) => {\n    return (\n      <TouchableOpacity\n        style={[styles(theme).button, { backgroundColor: 'transparent', zIndex: 2 }]}\n        onPress={() => {\n          setRenderDay(day);\n          dayHighlightOffset.value = value;\n          if (data.length != 0) {\n            scrollRef.current.scrollTo({ x: 0, y: 0, animated: true });\n          }\n        }}\n      >\n        <Text\n          style={\n            renderDay == day\n              ? [styles(theme).buttonText, { color: 'white' }]\n              : [styles(theme).buttonText, { color: 'black' }]\n          }\n        >\n          {abbrev}\n        </Text>\n        {renderDay == day ? (\n          <Badge size={8} style={{ alignSelf: 'center', backgroundColor: theme.text1 }}></Badge>\n        ) : null}\n      </TouchableOpacity>\n    );\n  };\n\n  if (isLoading || !isReady) {\n    return <LoadingIndicator />;\n  }\n\n  if (isError) {\n    return <ErrorPage navigation={navigation} />;\n  }\n\n  if (data.length == 0 && !isRefetching) {\n    return (\n      <View style={styles(theme).emptyStateContainer}>\n        <Text>Group Schedule has not been created</Text>\n        <Image style={{ opacity: 0.5 }} source={tentemoji} />\n        {groupRole != 'Member' ? (\n          <TouchableOpacity\n            style={{\n              width: '50%',\n              height: 50,\n              backgroundColor: theme.primary,\n              borderRadius: 30,\n              flexDirection: 'row',\n              justifyContent: 'center',\n              alignItems: 'center',\n              marginTop: 50\n            }}\n            onPress={() => postSchedule.mutate()}\n          >\n            <Icon name='plus' color={theme.icon1} size={20} style={{ marginRight: 10 }} />\n            <Text style={{ color: theme.text1, fontSize: 15, fontWeight: '500' }}>Create Schedule</Text>\n          </TouchableOpacity>\n        ) : (\n          <Text>Ask the creator or an admin to create a new schedule</Text>\n        )}\n      </View>\n    );\n  }\n\n  return (\n    <Provider>\n      <View style={styles(theme).bigContainer}>\n        <ActionSheetModal\n          isVisible={isModalVisible}\n          onBackdropPress={toggleModal}\n          onSwipeComplete={toggleModal}\n          toggleModal={toggleModal}\n          userStyle={'light'}\n          cancelButton={true}\n          height={win.height * 0.15}\n        >\n          <TouchableOpacity onPress={toggleMemberModal} style={{ height: '50%', width: '100%' }}>\n            <View\n              style={{\n                flex: 1,\n                justifyContent: 'center',\n                alignItems: 'center',\n                borderBottomWidth: 1,\n                borderColor: '#cfcfcf',\n                flexDirection: 'row',\n              }}\n            >\n              <Text style={{ textAlign: 'center', fontSize: 24, color: 'black' }}>{newMember}</Text>\n              <Icon name='chevron-down' color={theme.icon2} size={30} style={{ marginLeft: 10 }} />\n            </View>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => {\n              if (newMember == 'Select a Member') {\n                toggleModal();\n              } else {\n                toggleModal();\n                postEditCell.mutate({\n                  index: editIndex.current,\n                  oldMember: oldMember.current,\n                  newMember: newMember,\n                  groupCode: groupCode,\n                });\n              }\n            }}\n            style={{ height: '50%', width: '100%' }}\n          >\n            <View style={{ height: '100%', justifyContent: 'center' }}>\n              <Text\n                style={{\n                  textAlign: 'center',\n                  color: 'black',\n                  fontSize: 20,\n                  fontWeight: '500',\n                }}\n              >\n                Edit\n              </Text>\n            </View>\n          </TouchableOpacity>\n          <BottomSheetModal\n            isVisible={isMemberModalVisible}\n            onBackdropPress={() => setMemberModalVisible(false)}\n            onSwipeComplete={toggleMemberModal}\n            userStyle={'light'}\n          >\n            <View\n              style={{\n                marginTop: 10,\n                width: '90%',\n                //borderWidth: 1,\n                alignItems: 'center',\n                height: '92%',\n              }}\n            >\n              <View style={{ height: '100%', width: '100%' }}>\n                <FlatList\n                  data={colorCodes.current}\n                  renderItem={renderMember}\n                  ItemSeparatorComponent={() => <Divider />}\n                  keyExtractor={(item) => item.id}\n                />\n              </View>\n            </View>\n          </BottomSheetModal>\n        </ActionSheetModal>\n\n        <ConfirmationModal\n          toggleModal={toggleConfirmation}\n          body='Are you sure you want to create a new schedule? This will change the current schedule for all members and cannot be undone.'\n          buttonText='Create New Schedule'\n          buttonAction={() => {\n            //toggleConfirmation();\n            postSchedule.mutate();\n          }}\n          isVisible={isConfirmationVisible}\n          userStyle={'light'}\n          onBackdropPress={() => setConfirmationVisible(false)}\n          onSwipeComplete={toggleConfirmation}\n        />\n\n        <View style={{ zIndex: 1 }}>\n          <View style={[styles(theme).buttonContainer, styles(theme).shadowProp]}>\n            <Animated.View style={[styles(theme).dayHighlight, customSpringStyles]} />\n            <DayButton day='Sunday' abbrev='Sun' value={0} />\n            <DayButton day='Monday' abbrev='Mon' value={1} />\n            <DayButton day='Tuesday' abbrev='Tue' value={2} />\n            <DayButton day='Wednesday' abbrev='Wed' value={3} />\n            <DayButton day='Thursday' abbrev='Thur' value={4} />\n            <DayButton day='Friday' abbrev='Fri' value={5} />\n            <DayButton day='Saturday' abbrev='Sat' value={6} />\n          </View>\n        </View>\n        <View style={{ width: '100%', justifyContent: 'center', alignItems: 'center' }}>\n          <View style={styles(theme).toggleWeekContainer}>\n            <Animated.View style={[styles(theme).toggleWeekHighlight, toggleWeekSpring]} />\n            <TouchableOpacity style={styles(theme).toggleWeekButton} onPress={toggleWeek}>\n              <Text>Previous</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles(theme).toggleWeekButton} onPress={toggleWeek}>\n              <Text>Current</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n\n        <View style={{ backgroundColor: '#D2D5DC', marginTop: 0, flex: 1, zIndex: 0 }}>\n          <ScrollView\n            showsVerticalScrollIndicator={false}\n            refreshControl={<RefreshControl enabled={true} refreshing={isRefetchingByUser} onRefresh={refetchByUser} />}\n            ref={scrollRef}\n            contentContainerStyle={{ paddingBottom: 30 }}\n            style={{ width: '100%' }}\n            removeClippedSubviews={true}\n          >\n            <View style={{ flexDirection: 'row', marginTop: 20, padding: 0, width: '100%' }}>\n              <TimeColumn />\n              <DailyTable day={renderDay} />\n            </View>\n          </ScrollView>\n        </View>\n\n        {groupRole != 'Member' ? (\n          <Portal>\n            <FAB.Group\n              open={open}\n              icon={'plus'}\n              style={{ position: 'absolute' }}\n              fabStyle={{ backgroundColor: '#9FA6B7' }}\n              actions={[\n                {\n                  icon: 'calendar',\n                  label: 'Create New Schedule',\n                  onPress: () => toggleConfirmation(),\n                },\n              ]}\n              onStateChange={onFabStateChange}\n              onPress={() => {\n                if (open) {\n                  // do something if the speed dial is open\n                }\n              }}\n            />\n          </Portal>\n        ) : null}\n      </View>\n    </Provider>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    bigContainer: {\n      flex: 1,\n      backgroundColor: '#D2D5DC',\n      flexGrow: 1,\n      overflow: 'hidden',\n    }, //for the entire page's container\n    emptyStateContainer: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      paddingBottom: '30%',\n      backgroundColor: theme.background,\n    },\n    text: { margin: 3 }, //text within cells\n    timesText: {\n      //text style for the side text of the list of times\n      fontWeight: '800',\n      fontSize: 9,\n      width: '100%',\n      textAlign: 'center',\n    },\n    dayHighlight: {\n      position: 'absolute',\n      backgroundColor: '#1F509Ad0',\n      width: win.width / 7,\n      height: 38,\n      borderRadius: 100,\n    },\n    toggleWeekContainer: {\n      borderRadius: 10,\n      width: '60%',\n      height: 30,\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n      borderWidth: 1,\n      marginTop: 20,\n      backgroundColor: '#FAFAFA',\n      padding: 1,\n      borderColor: '#fff',\n    },\n    toggleWeekHighlight: {\n      position: 'absolute',\n      width: '50%',\n      height: '100%',\n      left: 0,\n      borderRadius: 10,\n      backgroundColor: '#FCFCFC',\n      shadowColor: '#171717',\n      shadowOffset: { width: 0, height: 0 },\n      shadowOpacity: 0.2,\n      shadowRadius: 2,\n    },\n    toggleWeekButton: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100%',\n    },\n    buttonContainer: {\n      //container for the top buttons\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      borderBottomRightRadius: 20,\n      borderBottomLeftRadius: 20,\n      backgroundColor: theme.primaryContainer,\n    },\n    button: {\n      //for the day buttons at top of screen\n      backgroundColor: theme.grey3,\n      width: win.width / 7,\n      height: 38,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    buttonText: {\n      //text for day buttons\n      fontSize: 'auto',\n      fontWeight: '500',\n      textAlign: 'center',\n      color: 'black',\n    },\n    topEditBtn: {\n      //for top edit buttons below daybuttons\n      width: '100%',\n      backgroundColor: 'white',\n      justifyContent: 'center',\n      height: 32,\n    },\n    topEditBtnText: {\n      //text for the edit buttons\n      textAlign: 'center',\n      fontSize: 16,\n      fontWeight: '500',\n    },\n    dayHeader: {\n      //text for the header for the day\n      marginTop: 20,\n      fontSize: 28,\n      fontWeight: '700',\n      textAlign: 'center',\n    },\n    row: {\n      //style for one row of the table\n      flexDirection: 'row',\n      backgroundColor: 'lavender',\n      width: '100%',\n      height: 31,\n      alignItems: 'center',\n      borderBottomColor: 'black',\n      borderBottomWidth: 1,\n    },\n    timeSlotBtn: {\n      //Button for oneCell of the Table\n      height: 30,\n      backgroundColor: '#78B7BB',\n      paddingHorizontal: 1,\n      justifyContent: 'center',\n    },\n    btnText: {\n      //Text within one cell button\n      textAlign: 'center',\n      color: theme.text2,\n      fontWeight: '400',\n      fontSize: 11,\n    },\n    shadowProp: {\n      //shadows to apply\n      shadowColor: '#171717',\n      shadowOffset: { width: -3, height: 5 },\n      shadowOpacity: 0.4,\n      shadowRadius: 3,\n    },\n    fabStyle: {\n      bottom: 16,\n      right: win.width * 0.02,\n      position: 'absolute',\n    },\n  });\n","import React from 'react'\nimport {\n  Text,\n  View,\n  StyleSheet,\n} from \"react-native\";\n\nexport default function Monitor() {\n  return (\n    <View style={{justifyContent: 'center', alignItems: 'center'}}>\n      <Text style = {{fontSize: 30, fontWeight: '700'}}> COMING SOON ... </Text>\n    </View>\n  )\n}\n","import React, {useRef} from 'react';\nimport {\n  Text,\n  View,\n  Image,\n  StyleSheet,\n  SafeAreaView,\n  ScrollView,\n  TouchableOpacity,\n  Dimensions,\n} from 'react-native';\nimport {\n  Table,\n  TableWrapper,\n  Row,\n  Rows,\n  Col,\n} from 'react-native-table-component';\nimport { useTheme } from '../context/ThemeProvider';\n\nimport kvilleBoundary from '../assets/kvilleBoundary.jpg';\nimport kvillesign from '../assets/kvillesign.jpg';\n\n//DATA for The TABLES\nconst NIGHTHOURS = {\n  tableHead: ['', 'Sunday-Thursday', 'Friday and Saturday'],\n  tableTitle: ['Night'],\n  tableData: [['1 am - 7 am', '2:30 am - 7 am']],\n};\n\nconst BLACKTENT = {\n  tableData: [\n    ['Starting Dates', 'Jan *, 2023 - Feb *, 2023'],\n    [\n      'Occupancy Requirements',\n      ' \\u25CF TWO members of the tent must be on duty during the day.\\n\\u25CF TEN members during night hours',\n    ],\n  ],\n};\nconst BLUETENT = {\n  tableData: [\n    ['Starting Dates', 'Jan *, 2023 - Feb *, 2023'],\n    [\n      'Occupancy Requirements',\n      ' \\u25CF ONE member of the tent must be on duty during the day.\\n\\u25CF SIX members during night hours',\n    ],\n  ],\n};\nconst WHITETENT = {\n  tableData: [\n    ['Starting Dates', 'Feb *, 2023 - Feb *, 2023'],\n    [\n      'Occupancy Requirements',\n      ' \\u25CF ONE member of the tent must be on duty during the day.\\n\\u25CF TWO members during night hours',\n    ],\n  ],\n};\n\nconst window = Dimensions.get('window'); \n\nexport default function Info() {\n  const { theme } = useTheme();\n  const ratioSignImg = window.width / 1000;\n  //const ratioBoundaryImg = window.width / 1450;\n  //variables for geting y-position of headers\n  let hourPos, tentCheckPos, missPos, gracePos, tentPos, pCheckPos;\n  const ref = useRef(); //creates reference for scrollView\n\n  //render item for bullet points\n  const BulletPoint = ({ data }) => (\n    <View style={{ flexDirection: 'row' }}>\n      <Text style={{ fontSize: 30, paddingLeft: 30 }}>{'\\u25CF'}</Text>\n      <Text style={[styles(theme).contentText, { flex: 1 }]}>{data}</Text>\n    </View>\n  );\n\n  function autoScroll(yPos) {\n    //for auto-scolling to certain y-position\n    ref.current.scrollTo({ x: 0, y: yPos, animated: true });\n  }\n\n  return (\n    <SafeAreaView style={styles(theme).container}>\n      <View style={styles(theme).buttonContainer}>\n        <TouchableOpacity\n          style={styles(theme).button}\n          onPress={() => autoScroll(hourPos)}\n        >\n          <Text style={styles(theme).buttonText}>Hours</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={styles(theme).button}\n          onPress={() => autoScroll(tentCheckPos)}\n        >\n          <Text style={styles(theme).buttonText}>Tent Checks</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={styles(theme).button}\n          onPress={() => autoScroll(missPos)}\n        >\n          <Text style={styles(theme).buttonText}>Missed Checks</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={styles(theme).button}\n          onPress={() => autoScroll(gracePos)}\n        >\n          <Text style={styles(theme).buttonText}>Grace</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={styles(theme).button}\n          onPress={() => autoScroll(tentPos)}\n        >\n          <Text style={styles(theme).buttonText}>Tent Types</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={styles(theme).button}\n          onPress={() => autoScroll(pCheckPos)}\n        >\n          <Text style={styles(theme).buttonText}>P-Checks</Text>\n        </TouchableOpacity>\n      </View>\n\n      <ScrollView\n        style={{ marginHorizontal: 20, marginTop: 50 }}\n        ref={ref}\n        showsVerticalScrollIndicator={false}\n      >\n        <Text style={styles(theme).header}>Tenting Overview:</Text>\n\n        <View\n          style={{\n            width: '100%',\n            marginBottom: 10,\n          }}\n        >\n          <Image\n            style={{\n              width: window.width,\n              height: 568 * ratioSignImg,\n              resizeMode: 'contain',\n              alignSelf: 'center',\n            }}\n            source={kvillesign}\n          />\n        </View>\n\n        <Text style={styles(theme).contentText}>\n          A tent is comprised of a maximum of 12 people. Occupancy requirements\n          for each tenting period remain the same regardless of the number of\n          people in the tent.\n        </Text>\n\n        <Text\n          style={styles(theme).header}\n          onLayout={(event) => {\n            const layout = event.nativeEvent.layout;\n            hourPos = layout.y;\n          }}\n        >\n          Daytime Hours and Curfew\n        </Text>\n        <Text style={styles(theme).contentText}>\n          Tenters on duty must be within the K-Ville city limits at all times.\n          The number of tenters required at a given time varies based on the\n          current tenting period and the time of day.\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          Each day is divided into day and night hours. A different number of\n          tenters on duty is necessary from day to night.\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          Night Hours are defined as:\n        </Text>\n\n        <View style={{ marginHorizontal: 20 }}>\n          <Table borderStyle={{ borderWidth: 1.3 }}>\n            <Row\n              data={NIGHTHOURS.tableHead}\n              flexArr={[1.00001, 2, 2]}\n              style={StyleSheet.flatten(styles(theme).tableHead)}\n              textStyle={StyleSheet.flatten(styles(theme).tableText)}\n            />\n            <TableWrapper style={styles(theme).tableWrapper}>\n              <Col\n                data={NIGHTHOURS.tableTitle}\n                style={StyleSheet.flatten(styles(theme).tableTitle)}\n                heightArr={[28, 28]}\n                textStyle={StyleSheet.flatten(styles(theme).tableText)}\n              />\n              <Rows\n                data={NIGHTHOURS.tableData}\n                flexArr={[1.987, 1.987]}\n                style={StyleSheet.flatten(styles(theme).tableRow)}\n                textStyle={StyleSheet.flatten(styles(theme).tableText)}\n              />\n            </TableWrapper>\n          </Table>\n        </View>\n\n        <Text style={styles(theme).contentText}>\n          *All other times will count as Day Hours\n        </Text>\n        <View style={{ marginVertical: 15 }}></View>\n\n        <Text\n          style={styles(theme).header}\n          onLayout={(event) => {\n            const layout = event.nativeEvent.layout;\n            tentCheckPos = layout.y;\n          }}\n        >\n          Tent Checks\n        </Text>\n        <Text style={styles(theme).contentText}>\n          The Line Monitors may announce a tent check at their discretion. A\n          check will be signaled by the sounding of a bullhorn siren.\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          To check in, gather all members of your tent in the area between the\n          Card parking lot and the Schwartz-Butters plaza. Wait until the\n          required number of tenters are present to check in — we cannot check\n          in your tent until all required members are present.\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          Tents who have yet to be checked but appear to be missing will — at a\n          minimum — be given three warning calls over the bullhorn before being\n          marked as absent. After the final warning call, an additional 2\n          minutes will be given to allow for tenters to check in. After this\n          time elapses, the check is officially over.\n        </Text>\n\n        <Text style={[styles(theme).contentText, { fontWeight: '700' }]}>\n          Tenters must stay within K-Ville boundaries to be counted.\n        </Text>\n\n        <View\n          style={{\n            //flex: 1,\n            width: '100%',\n            marginBottom: 10,\n          }}\n        >\n          <Image\n            style={{\n              width: window.width,\n              height: 568 * ratioSignImg,\n              resizeMode: 'contain',\n              alignSelf: 'center',\n            }}\n            source={kvilleBoundary}\n          />\n        </View>\n\n        <Text style={styles(theme).contentText}>\n          Line Monitors cannot be held responsible for checks missed due to\n          tenters using the bathroom, failing to hear the siren, being asleep in\n          the tent, or similar related circumstances.\n        </Text>\n        <View style={{ marginVertical: 12 }}></View>\n\n        <Text\n          style={styles(theme).header}\n          onLayout={(event) => {\n            const layout = event.nativeEvent.layout;\n            missPos = layout.y;\n          }}\n        >\n          Missed Checks\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          Checking in entails each present group member presenting their Duke\n          Card to a Line Monitor. If the tent fails to complete this, the check\n          will be counted as a missed check for that tent.\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          Each tent is allowed one missed check per tenting period. Missing a\n          second check will result in the tent being bumped to the end of the\n          line, behind all registered tents.\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          An email from headlinemonitor@gmail.com to your tent captain within 24\n          hours will inform you of your miss. If you feel a miss has been\n          assigned in error, please contact the Head Line Monitors at\n          headlinemonitor@gmail.com to discuss your circumstances.\n        </Text>\n        <Text style={styles(theme).contentText}>\n          If K-Ville is at a maximum capacity, the tent will be dropped to the\n          end of the resultant wait list.\n        </Text>\n        <View style={{ marginVertical: 12 }}></View>\n\n        <Text\n          style={styles(theme).header}\n          onLayout={(event) => {\n            const layout = event.nativeEvent.layout;\n            gracePos = layout.y;\n          }}\n        >\n          Grace\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          A grace period may be announced in which no tent checks will be\n          called. During grace, tenters need not be on duty in K-Ville.\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          Grace shall be given on the following occasions:\n        </Text>\n\n        <BulletPoint data='For one hour after a tent check is completed.' />\n        <BulletPoint data='Two hours before and after a men’s or women’s home basketball game.' />\n        <BulletPoint data='One hour before and after a men’s or women’s away basketball game.' />\n        <BulletPoint data='For some heavy weather-related incidents.' />\n        <View style={{ marginVertical: 18 }}></View>\n\n        <Text\n          style={[\n            styles(theme).header,\n            styles(theme).tentHeaderBox,\n            { backgroundColor: theme.text2, color: theme.text1},\n          ]}\n          onLayout={(event) => {\n            const layout = event.nativeEvent.layout;\n            tentPos = layout.y;\n          }}\n        >\n          Black Tent\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          Black Tenting is the first period of the Tenting season. Following the\n          conclusion of Black Tenting, missed checks will clear and all Black\n          Tents will begin following Blue Tenting rules.\n        </Text>\n\n        <View style={{ marginHorizontal: 20 }}>\n          <Table borderStyle={{ borderWidth: 1.3 }}>\n            <TableWrapper style={styles(theme).tableWrapper}>\n              <Rows\n                data={BLACKTENT.tableData}\n                flexArr={[1, 1.987]}\n                style={StyleSheet.flatten(styles(theme).tentTableRow)}\n                textStyle={StyleSheet.flatten(styles(theme).tableText)}\n              />\n            </TableWrapper>\n          </Table>\n        </View>\n        <View style={{ marginVertical: 18 }}></View>\n\n        <Text\n          style={[\n            styles(theme).header,\n            styles(theme).tentHeaderBox,\n            { backgroundColor: 'blue', color: theme.text1 },\n          ]}\n        >\n          Blue Tent\n        </Text>\n        <Text style={styles(theme).contentText}>\n          Blue Tenting is the second period of the Tenting season. Following the\n          conclusion of Blue Tenting, missed checks will clear and all Black and\n          Blue Tents will begin following White Tenting rules.\n        </Text>\n\n        <View style={{ marginHorizontal: 20 }}>\n          <Table borderStyle={{ borderWidth: 1.3 }}>\n            <TableWrapper style={styles(theme).tableWrapper}>\n              <Rows\n                data={BLUETENT.tableData}\n                flexArr={[1, 1.987]}\n                style={StyleSheet.flatten(styles(theme).tentTableRow)}\n                textStyle={StyleSheet.flatten(styles(theme).tableText)}\n              />\n            </TableWrapper>\n          </Table>\n        </View>\n        <View style={{ marginVertical: 18 }}></View>\n\n        <Text\n          style={[\n            styles(theme).header,\n            styles(theme).tentHeaderBox,\n            { backgroundColor: theme.text1 },\n          ]}\n        >\n          White Tent\n        </Text>\n        <Text style={styles(theme).contentText}>\n          White Tenting is the third period of the Tenting season.\n        </Text>\n        <Text style={styles(theme).contentText}>\n          Given the high demand for White tents, the order of White tents will\n          be determined by a scavenger hunt.\n        </Text>\n\n        <View style={{ marginHorizontal: 20 }}>\n          <Table borderStyle={{ borderWidth: 1.3 }}>\n            <TableWrapper style={styles(theme).tableWrapper}>\n              <Rows\n                data={WHITETENT.tableData}\n                flexArr={[1, 1.987]}\n                style={StyleSheet.flatten(styles(theme).tentTableRow)}\n                textStyle={StyleSheet.flatten(styles(theme).tableText)}\n              />\n            </TableWrapper>\n          </Table>\n        </View>\n        <View style={{ marginVertical: 18 }}></View>\n\n        <Text\n          style={[\n            styles(theme).header,\n            styles(theme).tentHeaderBox,\n            { backgroundColor: theme.grey6 },\n          ]}\n        >\n          Flex Tent\n        </Text>\n        <Text style={styles(theme).contentText}>\n          Flex Tenting abides by the same rules and regulations as White\n          Tenting, but Flex tents are NOT GUARANTEED a spot in the Carolina\n          game.\n        </Text>\n        <Text style={styles(theme).contentText}>\n          These tenting spots will be filled through the Race to the Secret\n          Spots. The 31st to 60th groups to complete the Race to the Secret\n          Spots will receive Flex Tenting spots.\n        </Text>\n        <Text style={styles(theme).contentText}>\n          All groups after the 60th group to complete the Race to the Secret\n          Spots will be added to the Flex Tenting wait list.\n        </Text>\n\n        <Text\n          style={styles(theme).header}\n          onLayout={(event) => {\n            const layout = event.nativeEvent.layout;\n            pCheckPos = layout.y;\n          }}\n        >\n          Personal Checks\n        </Text>\n        <Text style={styles(theme).contentText}>\n          P-Checks are conducted on an individual basis. Therefore, an entire\n          tent will not be penalized should a member of their tent miss too many\n          Personal Checks.\n        </Text>\n        <Text style={styles(theme).contentText}>\n          Five Personal Checks will be called at any time on **insert date**\n        </Text>\n        <Text style={[styles(theme).contentText, { fontWeight: '700' }]}>\n          To obtain a wristband for the Carolina game, a tenter must check in at\n          THREE of the FIVE checks.\n        </Text>\n        <Text style={styles(theme).contentText}>\n          Individuals who fail to report to three of the five Personal Checks\n          will be ineligible to receive a wristband for the Carolina game. Those\n          students will not, however, penalize the other members in their tent\n        </Text>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: theme.background,\n      flexDirection: 'column',\n    },\n    buttonContainer: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      //marginHorizontal: 20,\n      //marginTop: 2,\n      width: '100%'\n    },\n    button: {\n      backgroundColor: theme.primary,\n      width: window.width/6,\n      height: 50,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    buttonText: {\n      //fontSize: 'auto',\n      fontWeight: '500',\n      textAlign: 'center',\n      color: theme.text1,\n    },\n    header: {\n      marginVertical: 10,\n      marginHorizontal: 15,\n      fontSize: 28,\n      fontWeight: '700',\n    },\n    contentText: {\n      fontSize: 18,\n      fontWeight: '400',\n      marginHorizontal: 24,\n      marginVertical: 10,\n      color: theme.text2,\n    },\n\n    tentHeaderBox: {\n      width: '',\n      height: 40,\n      borderRadius: 20,\n      textAlign: 'center',\n    },\n    tableHead: { height: 40, backgroundColor: 'lavender' },\n    tableWrapper: { flexDirection: 'row' },\n    tableTitle: { flex: 1, backgroundColor: 'lavender' },\n    tableRow: { height: 28 },\n    tableText: {\n      fontSize: 12,\n      fontWeight: '500',\n      textAlign: 'center',\n    },\n    tentTableRow: { height: 95 },\n  });\n","import React, { useState, useRef } from 'react';\nimport { Text, View, StyleSheet, SectionList, RefreshControl, Image } from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { useSelector } from 'react-redux';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport { useTheme } from '../context/ThemeProvider';\nimport { useRefreshByUser } from '../hooks/useRefreshByUser';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { ErrorPage } from '../components/ErrorPage';\nimport tentemoji from '../assets/tentemoji.png';\n\nconst dayMapping = {\n  0: 'Sunday',\n  1: 'Monday',\n  2: 'Tuesday',\n  3: 'Wednesday',\n  4: 'Thursday',\n  5: 'Friday',\n  6: 'Saturday',\n};\nconst timeOfDayMapping = {\n  0: 'AM',\n  1: 'PM',\n};\nconst minMapping = {\n  0: '00',\n  1: '30',\n};\nconst colorMapping = {\n  'Morning Shift': '#FDF1DB',\n  'Afternoon Shift': '#FCEBE5',\n  'Night Shift': '#E5DBFF',\n};\n\nexport default function Shifts({ navigation }) {\n  const groupCode = useSelector((state) => state.user.currGroupCode);\n\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [isDeleteModalVisible, setDeleteModalVisible] = useState(false);\n  const [isReady, setIsReady] = useState(false);\n\n  const { theme } = useTheme();\n  const shifts = useRef();\n\n  const { isLoading, isError, error, data, refetch } = useQuery(\n    ['shifts', firebase.auth().currentUser.uid, groupCode],\n    () => fetchCurrentUserShifts(groupCode),\n    { initialData: [], onSuccess: () => setIsReady(true) }\n  );\n  const { isRefetchingByUser, refetchByUser } = useRefreshByUser(refetch);\n\n  async function fetchCurrentUserShifts(groupCode) {\n    //let shifts;\n    await firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .collection('members')\n      .doc(firebase.auth().currentUser.uid)\n      .get()\n      .then((doc) => {\n        shifts.current = doc.data().shifts;\n        //console.log('shifts fetched from firebase', shifts);\n      });\n    let parsedShifts = [\n      {\n        title: 'Sunday',\n        data: [],\n      },\n      {\n        title: 'Monday',\n        data: [],\n      },\n      {\n        title: 'Tuesday',\n        data: [],\n      },\n      {\n        title: 'Wednesday',\n        data: [],\n      },\n      {\n        title: 'Thursday',\n        data: [],\n      },\n      {\n        title: 'Friday',\n        data: [],\n      },\n      {\n        title: 'Saturday',\n        data: [],\n      },\n    ];\n    for (let i = 0; i < shifts.current.length; i++) {\n      if (shifts.current[i]) {\n        const start = i;\n        const startDay = Math.floor(start / 48);\n\n        while (i < shifts.current.length && shifts.current[i]) {\n          i++;\n        }\n        const end = i - 1;\n        parsedShifts[startDay].data.push({ start: start, end: end });\n      }\n    }\n    return parsedShifts;\n  }\n\n  function isEmpty(shifts) {\n    for (let i = 0; i < shifts.length; i++) {\n      if (shifts[i].data.length != 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  const postShiftUpdate = useShiftUpdate(groupCode);\n\n  function useShiftUpdate(groupCode) {\n    const queryClient = useQueryClient();\n    return useMutation((options) => markComplete(options), {\n      onError: (error) => {\n        console.error(error);\n      },\n      onSuccess: (data) => {\n        //console.log('new shift', newParsedShifts.current);\n        queryClient.setQueryData(['shifts', firebase.auth().currentUser.uid, groupCode], data);\n      },\n    });\n  }\n\n  function markComplete(options) {\n    const { item, groupCode } = options;\n\n    let newShifts = shifts.current;\n    for (let i = item.start; i <= item.end; i++) {\n      newShifts[i] = false;\n    }\n    firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .collection('members')\n      .doc(firebase.auth().currentUser.uid)\n      .update({\n        shifts: newShifts,\n      });\n\n    let parsedShifts = data;\n    parsedShifts.splice(item.id, 1);\n\n    return parsedShifts;\n  }\n\n  function toggleModal() {\n    setModalVisible(!isModalVisible);\n  }\n  function toggleDeleteModal() {\n    setDeleteModalVisible(!isDeleteModalVisible);\n  }\n\n  const RenderShift = ({ item }) => {\n    const startDay = Math.floor(item.start / 48);\n    const startTime = item.start - 48 * startDay;\n    const startTimeOfDay = Math.floor(startTime / 24);\n    const startHour =\n      Math.floor((startTime - 24 * startTimeOfDay) / 2) == 0 ? 12 : Math.floor((startTime - 24 * startTimeOfDay) / 2);\n    const startMin = startTime % 2;\n    // console.log('item start time', item.start);\n    // console.log('startDay: ' + startDay + '; startTime: ' +  startTime);\n\n    const endDay = Math.floor(item.end / 48);\n    const endTime = item.end - 48 * endDay;\n    const endTimeOfDay = Math.floor(endTime / 24);\n    const endHour =\n      Math.floor((endTime - 24 * endTimeOfDay) / 2) == 0 ? 12 : Math.floor((endTime - 24 * endTimeOfDay) / 2);\n    const endMin = endTime % 2;\n\n    const shiftTime =\n      startHour > 6 && startTimeOfDay == 0\n        ? 'Morning Shift'\n        : startHour > 0 && startHour <= 5 && startTimeOfDay == 1\n        ? 'Afternoon Shift'\n        : 'Night Shift';\n    //const sameDay = dayMapping[startDay] != dayMapping[endDay];\n\n    return (\n      <View style={[styles(theme).listItem, styles(theme).shadowProp, { backgroundColor: colorMapping[shiftTime] }]}>\n        <View style={{ flexDirection: 'row', width: '100%', alignItems: 'center', height: '60%' }}>\n          <Icon name='clock-outline' color={theme.grey1} size={20} />\n          <Text style={styles(theme).timeText}>\n            {startHour} : {minMapping[startMin]} {timeOfDayMapping[startTimeOfDay]} - {endHour} : {minMapping[endMin]}{' '}\n            {timeOfDayMapping[endTimeOfDay]}\n          </Text>\n        </View>\n        <View style={{ borderTopWidth: 1, width: '100%', height: '40%', justifyContent: 'center' }}>\n          <Text style={styles(theme).listText}>{shiftTime}</Text>\n        </View>\n      </View>\n    );\n  };\n\n  if (isLoading || !isReady) {\n    return <LoadingIndicator />;\n  }\n\n  if (isError) {\n    return <ErrorPage navigation={navigation} />;\n  }\n\n  if (isEmpty(data)) {\n    return (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n          paddingBottom: '30%',\n          backgroundColor: theme.background,\n        }}\n      >\n        <Text>No Shifts have been assigned to you</Text>\n        <Image style={{ opacity: 0.5 }} source={tentemoji} />\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles(theme).screenContainer}>\n      <SectionList\n        sections={data}\n        keyExtractor={(item, index) => item + index}\n        renderItem={RenderShift}\n        renderSectionHeader={({ section: { title, data } }) =>\n          data.length != 0 ? <Text style={styles(theme).sectionHeader}>{title}</Text> : null\n        }\n        renderSectionFooter={() => <View style={{ marginBottom: 10 }}></View>}\n        refreshControl={<RefreshControl enabled={true} refreshing={isRefetchingByUser} onRefresh={refetchByUser} />}\n        showsVerticalScrollIndicator={false}\n        stickySectionHeadersEnabled={false}\n      />\n    </View>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    screenContainer: {\n      flex: 1,\n      backgroundColor: theme.background, //'#D2D5DC',\n      //paddingVertical: 15,\n    }, //for the entire page's container\n    listItem: {\n      //for the items for each group\n      flexDirection: 'column',\n      //justifyContent: 'space-between',\n      alignItems: 'start',\n      padding: 8,\n      marginVertical: 7,\n      borderRadius: 10,\n      alignSelf: 'center',\n      width: '90%',\n      height: 90,\n    },\n    listText: {\n      //for the text inside the group cards\n      fontSize: 15,\n      fontWeight: '400',\n      color: theme.grey1,\n    },\n    timeText: {\n      color: theme.grey1,\n      textAlign: 'center',\n      marginLeft: 10,\n      fontSize: 15,\n      fontWeight: '500',\n    },\n    sectionHeader: {\n      fontSize: 24,\n      marginLeft: '6%',\n      marginTop: 10,\n      color: theme.grey1,\n    },\n    shadowProp: {\n      //shadow for the group cards\n      shadowColor: '#171717',\n      shadowOffset: { width: -2, height: 4 },\n      shadowOpacity: 0.2,\n      shadowRadius: 5,\n      elevation: 20,\n    },\n  });\n","import React from 'react';\nimport { Text, View, TouchableWithoutFeedback} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Snackbar } from 'react-native-paper';\n\nimport { toggleSnackBar } from '../redux/reducers/snackbarSlice';\nimport { useTheme } from '../context/ThemeProvider';\n\nconst CustomizedSnackbar = () => {\n  const dispatch = useDispatch();\n  const snackbarOpen = useSelector((state) => state.snackbar.snackbarOpen);\n  const snackbarMessage = useSelector((state) => state.snackbar.snackbarMessage);\n  const { theme } = useTheme();\n\n  return (\n    <TouchableWithoutFeedback onPress={() => dispatch(toggleSnackBar())}>\n      <Snackbar\n        visible={snackbarOpen}\n        onDismiss={() => dispatch(toggleSnackBar())}\n        wrapperStyle={{ top: 0 }}\n        duration={2000}\n        elevation={5}\n      >\n        <Text style={{ textAlign: 'center', color: theme.text1 }}>{snackbarMessage}</Text>\n      </Snackbar>\n    </TouchableWithoutFeedback>\n  );\n};\n\nexport default CustomizedSnackbar;\n","import 'react-native-gesture-handler'; //must be at top\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View, ScrollView, TextInput } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { Linking, Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { IconButton } from 'react-native-paper';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useDispatch } from 'react-redux';\nimport { StatusBar } from 'expo-status-bar';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport StackNavigator from './StackNavigator';\nimport HomeScreen from '../screens/Home';\nimport CreateGroupScreen from '../screens/CreateGroup';\nimport JoinGroupScreen from '../screens/JoinGroup';\nimport GroupInfoScreen from '../screens/GroupInfo';\nimport DrawerContent from '../screens/DrawerContent';\nimport AvailabilityScreen from '../screens/Availability';\nimport ScheduleScreen from '../screens/Schedule';\nimport MonitorScreen from '../screens/Monitor';\nimport InfoScreen from '../screens/Info';\nimport ShiftsScreen from '../screens/Shifts';\nimport { setCurrentUser, reset } from '../redux/reducers/userSlice';\nimport { useTheme } from '../context/ThemeProvider';\nimport { ActionSheetModal } from '../components/ActionSheetModal';\nimport Snackbar from '../components/Snackbar';\n\nconst Drawer = createDrawerNavigator();\nconst PERSISTENCE_KEY = 'NAVIGATION_STATE_V1';\n\nexport default function NavigationStack() {\n  //uncomment this to reset redux states\n  //const dispatch = useDispatch();\n  //dispatch(reset());\n  const [isReady, setIsReady] = useState(false);\n  const [initialState, setInitialState] = useState();\n  const [isInfoVisible, setInfoVisible] = useState(false);\n  const [isScheduleInfoVisible, setScheduleInfoVisible] = useState(false);\n  const { theme } = useTheme();\n  const dispatch = useDispatch();\n\n  function toggleInfo() {\n    setInfoVisible(!isInfoVisible);\n  }\n\n  function toggleScheduleInfo() {\n    setScheduleInfoVisible(!isScheduleInfoVisible);\n  }\n\n  const AvailabilityText = () => (\n    <View style={{ flex: 1, paddingBottom: 20 }}>\n      <Text style={styles(theme).InfoText}>\n        This page is for your availability throughout the week. You will input what times of the week you are not\n        available for tenting.\n      </Text>\n      <Text style={styles(theme).InfoText}>\n        To do so, click the add button on the bottom right to add a new busy time and input the day, start time, and end\n        time.\n      </Text>\n      <Text style={styles(theme).InfoText}>\n        Do this for your entire weekly schedule. You can delete blocks to edit your times.\n      </Text>\n      <Text style={styles(theme).InfoText}>\n        This schedule remains saved from week to week, but you may edit every week if you have changes to your schedule.\n      </Text>\n      <Text style={styles(theme).InfoText}>\n        Make sure to fill out your availability every week before you Create a New Group Schedule or your busy times\n        will not be accounted for in the group schedule.\n      </Text>\n      <Text style={styles(theme).InfoText}>\n        NOTE: If you mark yourself as available at 1am on a day, you will be marked availabile for the whole noght shift\n        from 1am to 7am\n      </Text>\n    </View>\n  );\n\n  const ScheduleText = () => (\n    <View style={{ flex: 1, paddingBottom: 20 }}>\n      <Text style={styles(theme).InfoText}>\n        This page is for your group schedule for the week (from Sunday to Saturday midnight).\n      </Text>\n      <Text style={styles(theme).InfoText}>\n        Groups should aim to create a new weekly schedule every week after members fill out their availability for that\n        week.\n      </Text>\n      <Text style={styles(theme).InfoText}>\n        Once all members of the group have filled out their availability for the week, an admin should create a new\n        group schedule.\n      </Text>\n      <Text style={styles(theme).InfoText}>\n        After the schedule is made, admins can make edits by clicking on the time slot and changing the member for that\n        time.\n      </Text>\n    </View>\n  );\n\n  //Navigation State persistence, saves user's location in app\n  useEffect(() => {\n    let mounted = true;\n\n    firebase\n      .firestore()\n      .collection('users')\n      .doc(firebase.auth().currentUser.uid)\n      .get()\n      .then((snapshot) => {\n        if (mounted && snapshot.exists) {\n          dispatch(setCurrentUser(snapshot.data()));\n        } else {\n          console.log('does not exist');\n        }\n      })\n      .then(() => {\n        console.log('cleared data and fetched user');\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    const restoreState = async () => {\n      try {\n        const initialUrl = await Linking.getInitialURL();\n        console.log('initialUrl', initialUrl);\n\n        if (Platform.OS !== 'web' /*&& initialUrl == null*/) {\n          // Only restore state if there's no deep link and we're not on web\n          const savedStateString = await AsyncStorage.getItem(PERSISTENCE_KEY);\n          const state = savedStateString ? JSON.parse(savedStateString) : undefined;\n          //console.log('state', state);\n          if (state !== undefined) {\n            setInitialState(state);\n          }\n        }\n      } finally {\n        setIsReady(true);\n      }\n    };\n    if (!isReady) {\n      restoreState();\n    }\n    return () => (mounted = false);\n  }, [isReady]);\n\n  if (!isReady) {\n    return null;\n  }\n\n  return (\n    <View style={{ flex: 1, zIndex: 1 }}>\n      <NavigationContainer\n        initialState={initialState}\n        //onReady={onLayoutRootView}\n        onStateChange={(state) => {\n          AsyncStorage.setItem(PERSISTENCE_KEY, JSON.stringify(state));\n        }}\n      >\n        <Drawer.Navigator\n          initialRouteName='Start'\n          drawerContent={(props) => <DrawerContent {...props} />}\n          screenOptions={{ drawerType: 'front' }}\n        >\n          <Drawer.Screen\n            name='Home'\n            component={HomeScreen}\n            options={{\n              headerShown: false,\n              swipeEnabled: false,\n            }}\n          />\n          <Drawer.Screen\n            name='CreateGroup'\n            component={CreateGroupScreen}\n            options={{\n              headerShown: false,\n              swipeEnabled: false,\n            }}\n          />\n          <Drawer.Screen\n            name='StackNavigator'\n            component={StackNavigator}\n            options={{\n              headerShown: false,\n              swipeEnabled: false,\n            }}\n          />\n          <Drawer.Screen\n            name='JoinGroup'\n            component={JoinGroupScreen}\n            options={{\n              headerShown: false,\n              swipeEnabled: false,\n            }}\n          />\n          <Drawer.Screen\n            name='GroupInfo'\n            component={GroupInfoScreen}\n            options={{\n              headerShown: false,\n              swipeEnabled: true,\n            }}\n          />\n          <Drawer.Screen\n            name='AvailabilityScreen'\n            component={AvailabilityScreen}\n            options={({ navigation }) => ({\n              title: 'Availability',\n              headerStyle: {\n                backgroundColor: theme.primaryContainer,\n                borderBottomWidth: 0,\n                shadowColor: 'transparent',\n              },\n              headerLeft: () => <IconButton icon='menu' size={25} onPress={() => navigation.openDrawer()}></IconButton>,\n              headerRight: () => (\n                <View>\n                  <TouchableOpacity\n                    onPress={() => {\n                      toggleInfo();\n                    }}\n                    style={{ marginRight: 20 }}\n                  >\n                    <Icon name='help-circle-outline' color={'black'} size={25} />\n                  </TouchableOpacity>\n\n                  <ActionSheetModal\n                    isVisible={isInfoVisible}\n                    onBackdropPress={toggleInfo}\n                    swipeDown={false}\n                    height={350}\n                    userStyle={'light'}\n                  >\n                    <View style={styles(theme).popUpHeaderView}>\n                      <View style={{ flexDirection: 'row' }}>\n                        <Icon name='lightbulb' color={theme.grey2} size={40} style={{ marginRight: 15 }} />\n                        <View>\n                          <Text style={{ fontWeight: '500' }}>Helpful Tips</Text>\n                          <Text style={{ fontSize: 15, fontWeight: '700' }}>How to use the Availability Page</Text>\n                        </View>\n                      </View>\n                      <TouchableOpacity onPress={toggleInfo}>\n                        <Icon name='close-circle' color={theme.grey2} size={32} style={{ marginTop: 4 }} />\n                      </TouchableOpacity>\n                    </View>\n\n                    <ScrollView\n                      showsVerticalScrollIndicator={false}\n                      style={styles(theme).textView}\n                      scrollToOverflowEnabled={true}\n                    >\n                      <AvailabilityText />\n                    </ScrollView>\n\n                    <View style={{ height: '13%', width: '100%', justifyContent: 'center', alignItems: 'center' }}>\n                      <TouchableOpacity onPress={toggleInfo} style={styles(theme).closeBtn}>\n                        <Text style={{ color: theme.text1, fontSize: 20, fontWeight: '600' }}>Ok</Text>\n                      </TouchableOpacity>\n                    </View>\n                  </ActionSheetModal>\n                </View>\n              ),\n            })}\n          />\n          <Drawer.Screen\n            name='ShiftsScreen'\n            component={ShiftsScreen}\n            options={({ navigation }) => ({\n              title: 'Shifts This Week',\n              headerStyle: {\n                backgroundColor: theme.primaryContainer,\n                borderBottomWidth: 0,\n                shadowColor: '#171717',\n                shadowOffset: { width: -2, height: 4 },\n                shadowOpacity: 0.2,\n                shadowRadius: 5,\n                elevation: 20,\n                //borderBottomLeftRadius: 10,\n                //borderBottomRightRadius: 10,\n              },\n              headerLeft: () => <IconButton icon='menu' size={25} onPress={() => navigation.openDrawer()}></IconButton>,\n            })}\n          />\n          <Drawer.Screen\n            name='ScheduleScreen'\n            component={ScheduleScreen}\n            options={({ navigation }) => ({\n              title: 'Group Schedule',\n              headerStyle: {\n                backgroundColor: theme.primaryContainer,\n                borderBottomWidth: 0,\n                shadowColor: 'transparent',\n              },\n              headerLeft: () => <IconButton icon='menu' size={25} onPress={() => navigation.openDrawer()}></IconButton>,\n              headerRight: () => (\n                <View>\n                  <TouchableOpacity\n                    onPress={() => {\n                      toggleScheduleInfo();\n                    }}\n                    style={{ marginRight: 20 }}\n                  >\n                    <Icon name='help-circle-outline' color={'black'} size={25} />\n                  </TouchableOpacity>\n\n                  <ActionSheetModal\n                    isVisible={isScheduleInfoVisible}\n                    onBackdropPress={toggleScheduleInfo}\n                    swipeDown={false}\n                    height={350}\n                    userStyle={'light'}\n                  >\n                    <View style={styles(theme).popUpHeaderView}>\n                      <View style={{ flexDirection: 'row' }}>\n                        <Icon name='lightbulb' color={theme.grey2} size={40} style={{ marginRight: 15 }} />\n                        <View>\n                          <Text style={{ fontWeight: '500' }}>Helpful Tips</Text>\n                          <Text style={{ fontSize: 16, fontWeight: '700' }}>How to use the Schedule Page</Text>\n                        </View>\n                      </View>\n                      <TouchableOpacity onPress={toggleScheduleInfo}>\n                        <Icon name='close-circle' color={theme.grey2} size={32} style={{ marginTop: 4 }} />\n                      </TouchableOpacity>\n                    </View>\n\n                    <ScrollView\n                      showsVerticalScrollIndicator={false}\n                      style={styles(theme).textView}\n                      scrollToOverflowEnabled={true}\n                    >\n                      <ScheduleText />\n                    </ScrollView>\n\n                    <View style={{ height: '13%', width: '100%', justifyContent: 'center', alignItems: 'center' }}>\n                      <TouchableOpacity onPress={toggleScheduleInfo} style={styles(theme).closeBtn}>\n                        <Text style={{ color: theme.text1, fontSize: 20, fontWeight: '600' }}>Ok</Text>\n                      </TouchableOpacity>\n                    </View>\n                  </ActionSheetModal>\n                </View>\n              ),\n            })}\n          />\n          <Drawer.Screen\n            name='MonitorScreen'\n            component={MonitorScreen}\n            options={({ navigation }) => ({\n              title: '',\n              headerStyle: {\n                backgroundColor: theme.primaryContainer,\n                borderBottomWidth: 0,\n                shadowColor: 'transparent',\n              },\n              headerLeft: () => <IconButton icon='menu' size={25} onPress={() => navigation.openDrawer()}></IconButton>,\n            })}\n          />\n          <Drawer.Screen\n            name='InfoScreen'\n            component={InfoScreen}\n            options={({ navigation }) => ({\n              title: 'Tenting Information',\n              headerStyle: {\n                backgroundColor: theme.primaryContainer,\n                borderBottomWidth: 0,\n                shadowColor: 'transparent',\n              },\n              headerLeft: () => <IconButton icon='menu' size={25} onPress={() => navigation.openDrawer()}></IconButton>,\n            })}\n          />\n        </Drawer.Navigator>\n        <StatusBar style='dark' />\n        <Snackbar />\n      </NavigationContainer>\n    </View>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    popUpHeaderView: {\n      //view of the header of the info popup modal\n      flexDirection: 'row',\n      height: '18%',\n      width: '94%',\n      marginTop: '2%',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    },\n    textView: {\n      height: '80%',\n      width: '94%',\n      backgroundColor: '#f3f3f3',\n      borderRadius: 18,\n      paddingVertical: 10,\n      paddingHorizontal: 15,\n    },\n    InfoText: {\n      color: theme.text2,\n      marginVertical: 5,\n      textAlign: 'left',\n      fontSize: 16,\n    },\n    closeBtn: {\n      //remove button for removing member if the user is the Creator\n      flexDirection: 'row',\n      height: '70%',\n      width: '70%',\n      backgroundColor: '#3B65A2',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 15,\n    },\n    headerContainer: {\n      flexDirection: 'row',\n      width: '90%',\n      justifyContent: 'space-between',\n      marginBottom: 15,\n    },\n    headerText: {\n      //text for different setting headers\n      fontSize: 20,\n      fontWeight: '700',\n      color: theme.grey2,\n    },\n    textInput: {\n      backgroundColor: theme.white2,\n      paddingVertical: 10,\n      paddingHorizontal: 15,\n      width: '90%',\n      fontSize: 18,\n      fontWeight: '500',\n      textAlign: 'left',\n      borderRadius: 15,\n      marginBottom: 23,\n      borderColor: theme.grey2,\n    },\n  });\n","import React, { Fragment, useState } from 'react';\nimport {\n  View,\n  TouchableOpacity,\n  Text,\n  StyleSheet,\n  TextInput,\n  SafeAreaView,\n} from 'react-native';\n// import { Formik } from 'formik';\n// import * as Yup from 'yup';\n// import FormInput from '../components/FormInput';\n// import FormButton from '../components/FormButton';\n// import ErrorMessage from '../ErrorMessage';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\n\nimport {useTheme} from '../../context/ThemeProvider'\n\nexport default function ForgotPassword({ navigation }) {\n  const [email, setEmail] = useState('');\n  const {theme} = useTheme();\n\n  const passwordReset = async () => {\n    await firebase\n      .auth()\n      .sendPasswordResetEmail(email)\n      .then(() => {\n        console.log('Password reset email sent');\n        navigation.navigate('Login');\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  return (\n    <SafeAreaView style={styles(theme).container}>\n      <View style={styles(theme).formCenter}>\n        <Text>Forgot Password?</Text>\n        <View style={styles(theme).section}>\n          <View style={styles(theme).icon}>\n            <Icon name='email-outline' color={theme.icon2} size={25} />\n          </View>\n          <TextInput\n            style={styles(theme).textInput}\n            placeholder='Enter email'\n            value={email}\n            onChangeText={(email) => setEmail(email)}\n            keyboardType='email-address'\n          />\n        </View>\n\n        <TouchableOpacity style={styles(theme).button} onPress={passwordReset}>\n          <Text style={{ color: theme.text1 }}>Send Email</Text>\n        </TouchableOpacity>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = (theme) => StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.white2,\n  },\n  formCenter: {\n    justifyContent: 'center',\n    flex: 1,\n    margin: 25,\n  },\n  section: {\n    flexDirection: 'row',\n    //justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.white2,\n    height: 40,\n    borderRadius: 20,\n    margin: 10,\n    shadowColor: theme.primary,\n    elevation: 20,\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 7,\n  },\n  icon: {\n    position: 'absolute',\n    left: -10,\n    height: 50,\n    width: 50,\n    borderRadius: 100,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: theme.white2,\n    shadowColor: theme.primary,\n    elevation: 20,\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 7,\n  },\n  textInput: {\n    marginLeft: 50,\n    flexDirection: 'row',\n    flex: 1,\n    backgroundColor: theme.white2,\n    padding: 10,\n    borderRadius: 20,\n    height: '100%',\n    //outlineWidth: 0,\n    //justifyContent: \"center\",\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    width: '100%',\n    backgroundColor: theme.primary,\n    height: 30,\n    marginTop: 40,\n    borderRadius: 50,\n  },\n});\n","import { configureStore } from '@reduxjs/toolkit';\n//import storage from \"redux-persist/lib/storage\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { combineReducers } from 'redux';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport thunk from 'redux-thunk';\n\nimport userReducer from '../reducers/userSlice';\nimport snackbarReducer from '../reducers/snackbarSlice';\n\nconst reducers = combineReducers({\n  user: userReducer,\n  snackbar: snackbarReducer\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage: AsyncStorage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  //devTools: process.env.NODE_ENV !== \"production\",\n  middleware: [thunk],\n});\n\nexport const persistor = persistStore(store);\n","import 'react-native-gesture-handler'; //must be at top\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { Provider } from 'react-redux';\nimport { Platform } from 'react-native';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { StatusBar } from 'expo-status-bar';\nimport * as Location from 'expo-location';\nimport * as TaskManager from 'expo-task-manager';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\n//Hide this with environmental variables before publishing\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDEFvAO5nl5XlW7WcGcDCrFGo4QEZFuWq0',\n  authDomain: 'duke-tenting-app-cc15b.firebaseapp.com',\n  databaseURL: 'https://duke-tenting-app-cc15b-default-rtdb.firebaseio.com',\n  projectId: 'duke-tenting-app-cc15b',\n  storageBucket: 'duke-tenting-app-cc15b.appspot.com',\n  messagingSenderId: '391061238630',\n  appId: '1:391061238630:web:85fbc00e4babf43cdc8ea7',\n  measurementId: 'G-6QNGDGFLHZ',\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nimport RegisterScreen from './src/screens/auth/Register';\nimport LoginScreen from './src/screens/auth/Login';\nimport NavigationStack from './src/navigation/DrawerNavigator';\nimport ForgotPasswordScreen from './src/screens/auth/ForgotPassword';\nimport { persistor, store } from './src/redux/store/index';\nimport ThemeProvider from './src/context/ThemeProvider';\nimport Snackbar from './src/components/Snackbar';\n\nconst Stack = createNativeStackNavigator();\n\nconst queryClient = new QueryClient();\n\nexport default function App() {\n  const [state, setState] = useState({\n    isReady: false,\n  });\n\n  TaskManager.defineTask('KVILLE', ({ data: { eventType, region }, error }) => {\n    if (error) {\n      console.error(error);\n      return;\n    }\n    if (eventType === Location.GeofencingEventType.Enter) {\n      console.log(\"You've entered region:\", region);\n      if (state.loggedIn) {\n        updateTentStatus(true);\n      }\n    } else if (eventType === Location.GeofencingEventType.Exit) {\n      console.log(\"You've left region:\", region);\n      if (state.loggedIn) {\n        updateTentStatus(false);\n      }\n    }\n  });\n\n  async function updateTentStatus(status) {\n    const currentUser = firebase.auth().currentUser.uid;\n    if (currentUser != null) {\n      let groupCodes;\n      await firebase\n        .firestore()\n        .collection('users')\n        .doc(currentUser)\n        .get()\n        .then((doc) => {\n          groupCodes = doc.data().groupCode;\n        })\n        .catch((error) => console.error(error));\n      for (let i = 0; i < groupCodes.length; i++) {\n        firebase\n          .firestore()\n          .collection('groups')\n          .doc(groupCodes[i].groupCode)\n          .collection('members')\n          .doc(currentUser)\n          .update({\n            inTent: status,\n          })\n          .catch((error) => console.error(error));\n      }\n    }\n  }\n\n  useEffect(() => {\n    let mounted = true;\n    async function prepare() {\n      try {\n        await SplashScreen.preventAutoHideAsync();\n\n        firebase.auth().onAuthStateChanged((user) => {\n          if (!user) {\n            setState({\n              isReady: true,\n              loggedIn: false,\n            });\n          } else {\n            setState({\n              isReady: true,\n              loggedIn: true,\n            });\n          }\n        });\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n    async function location() {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        console.log('Permission to access location was denied');\n        return;\n      } else {\n        let { status } = await Location.requestBackgroundPermissionsAsync();\n        console.log(status);\n        if (status !== 'granted') {\n          console.log('Background permissions were denied');\n          return;\n        } else {\n          console.log('geofencing started');\n          Location.startGeofencingAsync('KVILLE', [{ latitude: 35.997435, longitude: -78.940823, radius: 150 }]);\n        }\n      }\n    }\n    if (Platform.OS !== 'web') {\n      location();\n    }\n    if (mounted) {\n      prepare();\n    }\n\n    return () => (mounted = false);\n  }, []);\n\n  const onLayoutRootView = useCallback(async () => {\n    if (state.isReady) {\n      await SplashScreen.hideAsync();\n    }\n  }, [state.isReady]);\n\n  if (!state.isReady) {\n    return null;\n  }\n\n  if (!state.loggedIn) {\n    return (\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <ThemeProvider>\n            <NavigationContainer onReady={onLayoutRootView}>\n              <Stack.Navigator initialRouteName='Login'>\n                <Stack.Screen name='Register' component={RegisterScreen} options={{ headerShown: false }} />\n                <Stack.Screen name='Login' component={LoginScreen} options={{ headerShown: false }} />\n                <Stack.Screen\n                  name='ForgotPassword'\n                  component={ForgotPasswordScreen}\n                  options={({ navigation }) => ({\n                    title: '',\n                    headerStyle: {\n                      backgroundColor: '#f6f6f6',\n                      borderBottomWidth: 0,\n                      shadowColor: 'transparent',\n                    },\n                    headerTitleStyle: {\n                      fontSize: 28,\n                    },\n                  })}\n                />\n              </Stack.Navigator>\n              <StatusBar style='light' />\n              <Snackbar />\n            </NavigationContainer>\n          </ThemeProvider>\n        </PersistGate>\n      </Provider>\n    );\n  }\n\n  //Main screen, after landing\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <ThemeProvider>\n            <NavigationStack />\n          </ThemeProvider>\n        </PersistGate>\n      </Provider>\n    </QueryClientProvider>\n  );\n}\n"],"sourceRoot":""}