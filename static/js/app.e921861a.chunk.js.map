{"version":3,"sources":["src/assets/coachKLogo.png","src/assets/DukeBasketballLogoSpace.png","src/assets/tentemoji.png","src/assets/DukeBasketballLogo.png","src/assets/coachkangrymeme.jpg","src/assets/kvilleBoundary.jpg","src/assets/kvillesign.jpg","src/theme/theme.js","src/context/ThemeProvider.js","src/redux/reducers/snackbarSlice.js","src/screens/auth/Register.js","src/screens/auth/Login.js","src/screens/settings/About.js","src/screens/settings/ChangeEmail.js","src/screens/settings/ChangePassword.js","src/components/ConfirmationModal.js","src/redux/reducers/userSlice.js","src/screens/settings/AccountSettings.js","src/screens/settings/DeleteAccount.js","src/navigation/StackNavigator.js","src/backend/CreateGroupSchedule.js","src/components/LoadingIndicator.js","src/components/ErrorPage.js","src/components/ActionSheetModal.js","src/hooks/useRefreshByUser.js","src/screens/Home.js","src/backend/GroupCode.js","src/screens/CreateGroup.js","src/screens/JoinGroup.js","src/components/BottomSheetModal.js","src/components/SettingsModal.js","src/screens/GroupInfo.js","src/screens/DrawerContent.js","src/screens/Availability.js","src/screens/Schedule.js","src/screens/Monitor.js","src/screens/Info.js","src/screens/Shifts.js","src/components/Snackbar.js","src/navigation/DrawerNavigator.js","src/screens/auth/ForgotPassword.js","src/redux/store/index.js","App.js"],"names":["module","exports","lightTheme","background","primary","primaryContainer","secondary","tertiary","quaternary","white1","white2","grey1","grey2","grey3","grey4","grey5","grey6","popOutBorder","greyModal","text1","text2","icon1","icon2","error","generalTheme","roundness","ThemeContext","createContext","useTheme","useContext","ThemeProvider","children","useState","theme","Provider","value","snackbarSlice","createSlice","name","initialState","snackbarOpen","snackbarMessage","reducers","toggleSnackBar","state","setSnackMessage","action","payload","actions","window","Dimensions","get","Register","props","email","setEmail","password","setPassword","username","setUsername","groupCode","secureTextEntry","setSecureTextEntry","dimensions","setDimensions","dispatch","useDispatch","useEffect","subscription","addEventListener","remove","View","style","styles","container","KeyboardAvoidingView","behavior","banner","Text","color","fontSize","marginTop","imageContainer","boldImage","Image","logo","source","DukeBasketballLogo","slant","borderRightWidth","width","borderTopWidth","height","formCenter","section","icon","size","TextInput","textInput","placeholder","onChangeText","normalize","replace","keyboardType","TouchableOpacity","marginRight","onPress","button","length","firebase","firestore","collection","where","then","snapshot","empty","auth","createUserWithEmailAndPassword","doc","currentUser","uid","set","catch","bottomButton","textAlign","navigation","navigate","StyleSheet","create","flex","backgroundColor","alignItems","position","bottom","left","zIndex","margin","borderRadius","justifyContent","resizeMode","marginLeft","borderStyle","borderRightColor","borderBottomColor","borderTopColor","alignContent","flexDirection","shadowColor","elevation","shadowOffset","shadowOpacity","shadowRadius","padding","marginBottom","Login","isReady","setIsReady","mounted","a","async","AsyncStorage","getItem","oldEmail","oldPassword","signInWithEmailAndPassword","prepare","barStyle","setItem","message","includes","demoText","title","About","SafeAreaView","topBanner","goBack","titleText","headerText","normalText","marginVertical","WebBrowser","Linking","openURL","paddingVertical","borderBottomWidth","borderColor","paddingHorizontal","fontWeight","ChangeEmail","useSelector","user","credentials","EmailAuthProvider","credential","reauthenticateWithCredential","update","updateEmail","coachKLogo","kIcon","inputView","alignSelf","outlineWidth","ChangePassword","currPassword","setCurrPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","secureCurrEntry","setSecureCurrEntry","secureNewEntry","setSecureNewEntry","secureConfirmEntry","setSecureConfirmEntry","updatePassword","ConfirmationModal","opacity","bodyText","toggleModal","buttonAction","body","buttonText","userStyle","BottomModalView","swipeDirection","backdropTransitionOutTiming","keyboardDismissMode","confirmationPop","confirmationText","confirmationHeader","confirmationBottomBtn","userSlice","currGroupCode","currGroupName","currUserName","currTentType","currGroupRole","setCurrentUser","reset","resetCurrGroup","setGroupCode","setGroupName","setUserName","setTentType","setGroupRole","AccountSettings","isConfirmationVisible","setConfirmationVisible","toggleConfirmation","settingsContainer","settingBtn","rightOfBtn","listText","leaveButton","multiRemove","signOut","isVisible","onBackdropPress","onSwipeComplete","borderTopRightRadius","borderTopLeftRadius","borderWidth","DeleteAccount","groups","delete","deleteUser","Stack","createNativeStackNavigator","StackNavigator","Navigator","Screen","component","AccountSettingsScreen","options","headerShown","AboutScreen","colors","createGroupSchedule","tentType","sortMembers","idx","array","sort","b","hours","Number","availability","numDay","numNight","memberArr","Array","groupScheduleArr","prevMember1","prevMember2","memberIDs","id","changedHrs","collSnap","forEach","data","shifts","fill","member","push","current","consecutive","time","idxOfUsr","findIndex","element","splice","unshift","nightHour","memberIdx","i","scheduledHrs","index","LoadingIndicator","ActivityIndicator","ErrorPage","ratioImg","infoText","coachkangrymeme","returnBtn","ActionSheetModal","swipeDown","cancelButton","undefined","adjustedHeight","TopSectionView","CancelBtn","CancelBtnText","useRefreshByUser","refetch","isRefetchingByUser","setIsRefetchingByUser","refetchByUser","Home","isModalVisible","setModalVisible","isCountVisible","setCountVisible","isDisabled","setIsDisabled","useRef","Math","round","Date","getTime","now","useFocusEffect","useCallback","useQuery","currGroup","map","group","code","groupName","initialData","onSuccess","isLoading","isError","EmptyGroup","listItem","shadowProp","image","Group","e","memDoc","groupRole","updateRedux","disabled","startContainer","topText","IconButton","groupText","paddingTop","transform","rotateX","rotate","right","top","xmlns","viewBox","d","fillRule","FlatList","renderItem","item","keyExtractor","refreshControl","RefreshControl","enabled","refreshing","onRefresh","flexGrow","showsVerticalScrollIndicator","until","onFinish","alert","digitStyle","digitTxtStyle","timeLabelStyle","separatorStyle","showSeparator","popUp","popUpHeader","popButton","borderBottomLeftRadius","borderBottomRightRadius","generateUUID","digits","str","uuid","floor","random","join","CreateGroup","groupRef","userName","setGroup","isTentChangeVisible","setTentChangeVisible","queryClient","useQueryClient","userRef","toggleTentChange","groupContainer","groupHeader","btnTxt","groupSchedule","previousSchedule","previousMemberArr","inTent","FieldValue","arrayUnion","exists","invalidateQueries","maxLength","autoCorrect","selectable","selectTent","clearTextOnFocus","tentChangeListItem","modalText","triangle","backgroundImage","textContainer","text","centerText","picker","pickerItem","scaleX","JoinGroup","setInputGroupCode","setName","header","docSnapshot","onJoinGroup","trim","ModalContext","useModal","context","Error","BottomSheetModal","headerColor","barSize","ModalContainer","modalBar","modalSmallBar","SecondContainer","ModalSecondaryView","Header","verticalMargin","ModalHeader","ModalText","SettingsModal","params","isDeleteGroupVisible","setDeleteGroupVisible","isModalSnackVisible","setModalSnackVisible","modalSnackMessage","setModalSnackMessage","isCancelDisabled","setIsCancelDisabled","deleteGroupName","setDeleteGroupName","postSave","useMutation","onSave","onError","useOnSave","newGroupName","newUserName","newTentType","valid","userDoc","groupCodeArr","groupIndex","toggleModalSnackBar","toggleDeleteGroup","initialValues","onSubmit","values","mutate","handleChange","handleBlur","handleSubmit","setFieldValue","setFieldTouched","headerContainer","onBlur","tentChangeBtn","deleteText","autoCapitalize","querySnapshot","arrayRemove","ref","Snackbar","visible","onDismiss","wrapperStyle","duration","GroupInfo","isRoleChangeVisible","setRoleChangeVisible","isSettingsVisible","setSettingsVisible","currMember","useFonts","Merriweather_400Regular","Merriweather_700Bold","Montserrat_400Regular","Montserrat_700Bold","OpenSans_400Regular","fontsLoaded","toggleRoleChange","toggleSettings","Keyboard","dismiss","memberRef","currName","tentCondition","scheduledHours","memID","role","fetchGroupMembers","postRemoveMember","removeMember","useRemoveMember","postGroupRole","useGroupRole","Member","containerHeader","openDrawer","boxText","contentText","slice","ListHeaderComponent","marginHorizontal","popUpHeaderView","popUpHalfBody","Divider","removeBtn","roleChangeListItem","fontFamily","highlightShadow","memo","status","setStatus","postTentStatus","updateTentStatus","useUpdateTentStatus","DrawerContentScrollView","drawerContent","userInfoSection","Title","Section","drawerSection","DrawerItem","label","Switch","onValueChange","bottomDrawerSection","paddingLeft","caption","lineHeight","row","paragraph","agenda","tableHead","tableTime","tableData","rowData","j","currIndex","Availability","isDeleteModalVisible","setDeleteModalVisible","isSnackVisible","setSnackVisible","snackMessage","selectedDay","setSelectedDay","hour","minute","day","startTime","setStartTime","endTime","setEndTime","availabilityUI","fetchAvailability","postAvailability","updateAvailability","useUpdateAvailability","startIdx","parseInt","endIdx","deleteAvailability","deleteCell","useDeleteAvailability","toggleDeleteModal","cellData","btn","flatten","head","widthArr","textStyle","ScrollView","heightArr","cellHeight","cellIndex","cell","addContainer","FAB","modalBody","selectDay","selectedValue","itemValue","itemIndex","Platform","OS","itemStyle","Item","selectTime","timePickerBody","modalFooter","addBtn","btnText","overflow","UIManager","setLayoutAnimationEnabledExperimental","prevColorCodes","times","prevSchedule","win","Schedule","isRefetching","setIsRefetching","isMemberModalVisible","setMemberModalVisible","open","fabState","setFabState","weekDisplay","setWeekDisplay","renderDay","setRenderDay","newMember","setNewMember","oldMember","editIndex","newSchedule","editSuccessful","scrollRef","colorCodes","dayHighlightOffset","useSharedValue","isCurrentWeek","currSchedule","fetchGroupSchedule","postEditCell","split","indexofOld","object","indexofNew","oldHours","oldShifts","newHours","newShifts","editCell","setQueryData","useEditCell","postSchedule","createNewGroupSchedule","useUpdateSchedule","LayoutAnimation","configureNext","Presets","spring","toggleMemberModal","toggleWeek","TimeColumn","timesText","OneCell","person","indexofUser","timeSlotBtn","adjustsFontSizeToFit","minimumFontScale","numberOfLines","RenderCell","arrayIndex","members","people","DailyTable","indexAdder","dayArr","customSpringStyles","useAnimatedStyle","translateX","withSpring","damping","stiffness","toggleWeekSpring","DayButton","abbrev","scrollTo","x","y","animated","Badge","bigContainer","ItemSeparatorComponent","buttonContainer","Animated","dayHighlight","toggleWeekContainer","toggleWeekHighlight","toggleWeekButton","contentContainerStyle","paddingBottom","removeClippedSubviews","Portal","fabStyle","onStateChange","emptyStateContainer","tentemoji","topEditBtn","topEditBtnText","dayHeader","Monitor","NIGHTHOURS","tableTitle","BLACKTENT","BLUETENT","WHITETENT","Info","hourPos","tentCheckPos","missPos","gracePos","tentPos","pCheckPos","ratioSignImg","BulletPoint","autoScroll","yPos","kvillesign","onLayout","event","layout","nativeEvent","flexArr","tableText","tableWrapper","tableRow","kvilleBoundary","tentHeaderBox","tentTableRow","timeOfDayMapping","0","1","minMapping","colorMapping","Shifts","parsedShifts","start","startDay","end","fetchCurrentUserShifts","markComplete","useShiftUpdate","isEmpty","screenContainer","SectionList","sections","startTimeOfDay","startHour","startMin","endDay","endTimeOfDay","endHour","endMin","shiftTime","timeText","renderSectionHeader","sectionHeader","renderSectionFooter","stickySectionHeadersEnabled","CustomizedSnackbar","snackbar","TouchableWithoutFeedback","Drawer","createDrawerNavigator","NavigationStack","setInitialState","isInfoVisible","setInfoVisible","isScheduleInfoVisible","setScheduleInfoVisible","toggleInfo","toggleScheduleInfo","AvailabilityText","InfoText","ScheduleText","getInitialURL","savedStateString","JSON","parse","restoreState","NavigationContainer","stringify","initialRouteName","screenOptions","drawerType","HomeScreen","swipeEnabled","CreateGroupScreen","JoinGroupScreen","GroupInfoScreen","AvailabilityScreen","headerStyle","headerLeft","headerRight","textView","scrollToOverflowEnabled","closeBtn","ShiftsScreen","ScheduleScreen","MonitorScreen","InfoScreen","StatusBar","ForgotPassword","sendPasswordResetEmail","combineReducers","userReducer","snackbarReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","thunk","persistor","persistStore","apps","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","QueryClient","App","setState","groupCodes","TaskManager","eventType","region","Location","Enter","loggedIn","Exit","latitude","longitude","radius","location","SplashScreen","onAuthStateChanged","onLayoutRootView","client","loading","onReady","RegisterScreen","LoginScreen","ForgotPasswordScreen","headerTitleStyle"],"mappings":"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","file":"static/js/app.e921861a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coachKLogo.05a5d5ff.png\";","module.exports = __webpack_public_path__ + \"static/media/DukeBasketballLogoSpace.2ce598c8.png\";","module.exports = __webpack_public_path__ + \"static/media/tentemoji.b41cdda7.png\";","module.exports = __webpack_public_path__ + \"static/media/DukeBasketballLogo.52f6c490.png\";","module.exports = __webpack_public_path__ + \"static/media/coachkangrymeme.0ad342aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kvilleBoundary.43414a24.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kvillesign.fc81b6fa.jpg\";","export const lightTheme = {\n  background: '#F2F2F7', //#C2C6D0',\n  primary: '#00539B',\n  primaryContainer: '#F2F2F7', //'#C2C6D0',\n  secondary: '#1E3F66',\n  tertiary: '#2E5984',\n  quaternary: '#0FA4DC',\n  white1: '#FFFAFACC',\n  white2: '#f6f6f6',\n  grey1: '#3a3b3c',\n  grey2: '#656565',\n  grey3: '#e5e5e5',\n  grey4: '#555555',\n  grey5: '#8E8E93',\n  grey6: '#a9a9a9',\n  popOutBorder: '#d8d9dc',\n  greyModal: '#565656',\n  text1: '#fff',\n  text2: '#000',\n  icon1: '#fff',\n  icon2: '#000',\n  error: '#E01805',\n};\n\nexport const generalTheme = {\n  roundness: 5,\n};\n\nexport const darkTheme = {\n  \n}","import { createContext, useContext, useState } from 'react';\nimport { lightTheme, darkTheme, generalTheme } from '../theme/theme'\n\nexport const ThemeContext = createContext();\n\nconst ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState(lightTheme);\n  //setTheme(darkTheme)\n  return (\n    <ThemeContext.Provider value={{theme:theme, generalTheme: generalTheme}}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport default ThemeProvider;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const snackbarSlice = createSlice({\n  name: 'snackbar',\n  initialState: {\n    snackbarOpen: false,\n    snackbarMessage: '',\n  },\n  reducers: {\n    toggleSnackBar: (state) => {\n      state.snackbarOpen = !state.snackbarOpen;\n    },\n    setSnackMessage: (state, action) => {\n      state.snackbarMessage = action.payload;\n    },\n  },\n});\n\nexport const { toggleSnackBar, setSnackMessage } = snackbarSlice.actions;\n\nexport default snackbarSlice.reducer;\n","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  TextInput,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Dimensions,\n  Image,\n  KeyboardAvoidingView,\n} from 'react-native';\nimport { useDispatch } from 'react-redux';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport { useTheme } from '../../context/ThemeProvider';\nimport { toggleSnackBar, setSnackMessage } from '../../redux/reducers/snackbarSlice';\nimport DukeBasketballLogo from '../../assets/DukeBasketballLogoSpace.png';\n\nconst window = Dimensions.get('window');\n\nexport default function Register(props) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [groupCode, setGroupCode] = useState([]);\n  const [secureTextEntry, setSecureTextEntry] = useState(true);\n  const [dimensions, setDimensions] = useState({ window });\n  const { theme } = useTheme();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const subscription = Dimensions.addEventListener('change', ({ window }) => {\n      setDimensions({ window });\n    });\n    return () => subscription?.remove();\n  });\n\n  function onRegister() {\n    if (username.length == 0 || email.length == 0 || password.length == 0) {\n      dispatch(setSnackMessage('Please fill out everything'));\n      dispatch(toggleSnackBar());\n      return;\n    }\n    if (password.length < 6) {\n      dispatch(setSnackMessage('Passwords must be at least 6 characters'));\n      dispatch(toggleSnackBar());\n      return;\n    }\n    firebase\n      .firestore()\n      .collection('users')\n      .where('username', '==', username)\n      .get()\n      .then((snapshot) => {\n        if (snapshot.empty) {\n          firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then(() => {\n              firebase\n                .firestore()\n                .collection('users')\n                .doc(firebase.auth().currentUser.uid)\n                .set({\n                  email,\n                  username,\n                  groupCode,\n                })\n                .catch((error) => console.error(error));\n            })\n            .catch((error) => {\n              console.error(error);\n              dispatch(setSnackMessage('The email address is already in use by another account'));\n              dispatch(toggleSnackBar());\n            });\n        } else {\n          dispatch(setSnackMessage('Username Taken'));\n          dispatch(toggleSnackBar());\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        dispatch(setSnackMessage('Something went wrong'));\n        dispatch(toggleSnackBar());\n      });\n  }\n\n  return (\n    <View style={styles(theme).container}>\n      <KeyboardAvoidingView behavior='padding' style={styles(theme).container}>\n        <View style={styles(theme).banner}>\n          <Text style={{ color: theme.white2, fontSize: 35, marginTop: 50 }}>REGISTER</Text>\n          <View style={styles(theme).imageContainer}>\n            {/* <Image\n              style={[\n                styles(theme).logo,\n                {\n                  flex: 1,\n                  tintColor: '#D9D9D9',\n                  opacity: 0.2,\n                  aspectRatio: 0.84,\n                  width: 50,\n                  top: -30,\n                  resizeMode: 'repeat',\n                },\n              ]}\n              source={DukeBasketballLogo}\n            /> */}\n            <View style={styles(theme).boldImage}>\n              <Image style={styles(theme).logo} source={DukeBasketballLogo} />\n            </View>\n          </View>\n          <View\n            style={[\n              styles(theme).slant,\n              {\n                borderRightWidth: dimensions.window.width,\n                borderTopWidth: dimensions.window.height / 5,\n              },\n            ]}\n          ></View>\n        </View>\n\n        <View style={styles(theme).formCenter}>\n          <View style={styles(theme).section}>\n            <View style={styles(theme).icon}>\n              <Icon name='account-circle-outline' color={theme.icon2} size={25} />\n            </View>\n            <TextInput\n              style={styles(theme).textInput}\n              placeholder='Username'\n              value={username}\n              //keyboardType='twitter'\n              onChangeText={(username) =>\n                setUsername(\n                  username\n                    .normalize('NFD')\n                    .replace(/[\\u0300-\\u036f]/g, '')\n                    .replace(/\\s+/g, '')\n                    .replace(/[^a-z0-9]/gi, '')\n                )\n              }\n            />\n          </View>\n\n          <View style={styles(theme).section}>\n            <View style={styles(theme).icon}>\n              <Icon name='email-outline' color={theme.icon2} size={25} />\n            </View>\n            <TextInput\n              style={styles(theme).textInput}\n              placeholder='Email'\n              value={email}\n              keyboardType={'email-address'}\n              onChangeText={(email) => setEmail(email)}\n            />\n          </View>\n\n          <View style={styles(theme).section}>\n            <View style={styles(theme).icon}>\n              <Icon name='lock-outline' color={theme.icon2} size={25} />\n            </View>\n            <TextInput\n              style={styles(theme).textInput}\n              placeholder='Password'\n              value={password}\n              secureTextEntry={secureTextEntry}\n              onChangeText={(password) => setPassword(password)}\n            />\n            <TouchableOpacity\n              style={{ marginRight: 10 }}\n              onPress={() => {\n                setSecureTextEntry(!secureTextEntry);\n                return false;\n              }}\n            >\n              <Icon name={secureTextEntry ? 'eye-off-outline' : 'eye-outline'} color={theme.icon2} size={20} />\n            </TouchableOpacity>\n          </View>\n\n          <TouchableOpacity style={styles(theme).button} onPress={onRegister}>\n            <Text style={{ color: theme.text1 }}>Register</Text>\n          </TouchableOpacity>\n        </View>\n      </KeyboardAvoidingView>\n      <View style={styles(theme).bottomButton}>\n        <Text>Already have an account? </Text>\n        <Text\n          style={{ textAlign: 'center', color: theme.quaternary }}\n          onPress={() => props.navigation.navigate('Login')}\n        >\n          Sign In\n        </Text>\n      </View>\n    </View>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: theme.white2,\n    },\n    banner: {\n      //position: 'absolute',\n      backgroundColor: theme.primary,\n      width: '100%',\n      height: '50%',\n      //justifyContent: 'center',\n      alignItems: 'center',\n    },\n    imageContainer: {\n      position: 'absolute',\n      bottom: 0,\n      left: 30,\n      backgroundColor: 'transparent',\n      width: 90,\n      height: '100%',\n      //justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 2,\n      margin: 0,\n    },\n    // dimImage: {\n    //   borderWidth: 1,\n    //   height: '100%',\n    //   width: 90,\n    //   alignItems: 'center',\n    // },\n    boldImage: {\n      position: 'absolute',\n      bottom: 0,\n      backgroundColor: theme.white2,\n      borderRadius: 15,\n      width: 90,\n      height: 70,\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 2,\n    },\n    logo: {\n      height: 60,\n      width: 60,\n      resizeMode: 'contain',\n    },\n    slant: {\n      position: 'absolute',\n      bottom: 0,\n      zIndex: 1,\n      marginLeft: 0,\n      //backgroundColor: '#fff',\n      height: 0,\n      width: 0,\n      borderStyle: 'solid',\n      borderTopWidth: 150,\n      borderRightColor: theme.white2,\n      borderBottomColor: theme.white2,\n      borderTopColor: 'transparent',\n      //borderLeftColor: 'transparent',\n    },\n    formCenter: {\n      justifyContent: 'start',\n      alignContent: 'center',\n      flex: 1,\n      margin: 25,\n    },\n    section: {\n      flexDirection: 'row',\n      //justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: theme.white2,\n      height: 40,\n      borderRadius: 20,\n      margin: 10,\n      //marginTop: 10,\n      shadowColor: theme.primary,\n      elevation: 20,\n      shadowOffset: { width: 0, height: 4 },\n      shadowOpacity: 0.3,\n      shadowRadius: 7,\n    },\n    icon: {\n      position: 'absolute',\n      left: -10,\n      height: 50,\n      width: 50,\n      borderRadius: 100,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: theme.white2,\n      shadowColor: theme.primary,\n      elevation: 20,\n      shadowOffset: { width: 0, height: 4 },\n      shadowOpacity: 0.3,\n      shadowRadius: 7,\n    },\n    textInput: {\n      marginLeft: 50,\n      flexDirection: 'row',\n      flex: 1,\n      backgroundColor: theme.white2,\n      padding: 10,\n      borderRadius: 20,\n      height: '100%',\n      //outlineWidth: 0,\n      //justifyContent: \"center\",\n    },\n    button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'row',\n      width: '100%',\n      backgroundColor: theme.primary,\n      height: 30,\n      marginTop: 40,\n      borderRadius: 50,\n    },\n    bottomButton: {\n      flexDirection: 'row',\n      alignContent: 'center',\n      justifyContent: 'center',\n      borderTopColor: 'gray',\n      borderTopWidth: 1,\n      padding: 10,\n      textAlign: 'center',\n      marginBottom: 60,\n    },\n  });\n","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  TouchableOpacity,\n  Text,\n  StyleSheet,\n  TextInput,\n  Dimensions,\n  Image,\n  KeyboardAvoidingView,\n  SafeAreaView,\n  StatusBar,\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useDispatch } from 'react-redux';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\n\nimport DukeBasketballLogo from '../../assets/DukeBasketballLogoSpace.png';\nimport { useTheme } from '../../context/ThemeProvider';\nimport { toggleSnackBar, setSnackMessage } from '../../redux/reducers/snackbarSlice';\n\nconst window = Dimensions.get('window');\n\nexport default function Login(props) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [secureTextEntry, setSecureTextEntry] = useState(true);\n  const [isReady, setIsReady] = useState(false);\n  const { theme } = useTheme();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let mounted = true;\n    async function prepare() {\n      const oldEmail = await AsyncStorage.getItem('USER_EMAIL');\n      const oldPassword = await AsyncStorage.getItem('USER_PASSWORD');\n      if (oldEmail && oldPassword) {\n        console.log('oldEmail', oldEmail);\n        console.log('oldPassword', oldPassword);\n        firebase\n          .auth()\n          .signInWithEmailAndPassword(oldEmail, oldPassword)\n          .then(() => {\n            console.log('login successful');\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      } else {\n        setIsReady(true);\n      }\n    }\n\n    if (mounted) {\n      prepare();\n    }\n    return () => (mounted = false);\n  });\n\n  function onSignUp() {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        console.log('login successful');\n        AsyncStorage.setItem('USER_EMAIL', email);\n        AsyncStorage.setItem('USER_PASSWORD', password);\n      })\n      .catch((error) => {\n        console.log(error);\n        let message = 'Login unsuccessful';\n        if (error.message.includes('The email address is badly formatted')) {\n          message = 'Not a valid email';\n        }\n        if (error.message.includes('There is no user record')) {\n          message = 'Account does not exist';\n        }\n        if (error.message.includes('The password is invalid')) {\n          message = 'Incorrect password';\n        }\n        dispatch(setSnackMessage(message));\n        dispatch(toggleSnackBar());\n        return;\n      });\n  }\n\n  if (!isReady) {\n    return null;\n  }\n\n  return (\n    <View style={styles(theme).container}>\n      <StatusBar barStyle='light-content' backgroundColor='#6a51ae' />\n      <KeyboardAvoidingView behavior='padding' style={styles(theme).container}>\n        <View style={styles(theme).banner}>\n          <Text style={{ color: theme.white2, fontSize: 35, marginTop: 50 }}>LOGIN</Text>\n          <View style={styles(theme).imageContainer}>\n            {/* <Image\n              style={[\n                styles(theme).logo,\n                {\n                  flex: 1,\n                  tintColor: '#D9D9D9',\n                  opacity: 0.2,\n                  aspectRatio: 0.84,\n                  width: 50,\n                  top: -30,\n                  resizeMode: 'repeat',\n                },\n              ]}\n              resizeMode={'repeat'}\n              source={DukeBasketballLogo}\n            /> */}\n            <View style={styles(theme).boldImage}>\n              <Image style={styles(theme).logo} source={DukeBasketballLogo} />\n            </View>\n          </View>\n          <View\n            style={[\n              styles(theme).slant,\n              {\n                borderRightWidth: window.width,\n                borderTopWidth: window.height / 5,\n              },\n            ]}\n          ></View>\n        </View>\n        <View style={styles(theme).formCenter}>\n          <View style={styles(theme).section}>\n            <View style={styles(theme).icon}>\n              <Icon name='account-circle-outline' color={theme.icon2} size={25} />\n            </View>\n            <TextInput\n              style={styles(theme).textInput}\n              placeholder='Email'\n              value={email}\n              onChangeText={(email) => setEmail(email)}\n              keyboardType='email-address'\n            />\n          </View>\n\n          <View style={styles(theme).section}>\n            <View style={styles(theme).icon}>\n              <Icon name='lock-outline' color={theme.icon2} size={25} />\n            </View>\n            <TextInput\n              style={styles(theme).textInput}\n              placeholder='Password'\n              secureTextEntry={secureTextEntry}\n              value={password}\n              onChangeText={(password) => setPassword(password)}\n            />\n            <TouchableOpacity\n              style={{ marginRight: 10 }}\n              onPress={() => {\n                setSecureTextEntry(!secureTextEntry);\n                return false;\n              }}\n            >\n              <Icon name={secureTextEntry ? 'eye-off-outline' : 'eye-outline'} color={theme.icon2} size={20} />\n            </TouchableOpacity>\n          </View>\n\n          <TouchableOpacity style={styles(theme).button} onPress={onSignUp}>\n            <Text style={{ color: theme.text1 }}>Sign In</Text>\n          </TouchableOpacity>\n\n          <View style={{ width: '100%', justifyContent: 'center', alignContent: 'center', marginTop: 20 }}>\n            <Text style={styles(theme).demoText}>Try our Demo Account:</Text>\n            <Text style={styles(theme).demoText}>Email: kvilletenting@gmail.com</Text>\n            <Text style={styles(theme).demoText}>Password: GTHC2023</Text>\n          </View>\n        </View>\n      </KeyboardAvoidingView>\n      <View style={styles(theme).bottomButton}>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignContent: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Don't have an account? </Text>\n          <Text\n            title='Register'\n            onPress={() => props.navigation.navigate('Register')}\n            style={{ textAlign: 'center', color: theme.quaternary }}\n          >\n            Sign Up\n          </Text>\n        </View>\n        <View style={{ width: '100%', justifyContent: 'center', alignItems: 'center' }}>\n          <Text\n            style={{ margin: 10, color: theme.quaternary, textAlign: 'center' }}\n            onPress={() => {\n              props.navigation.navigate('ForgotPassword');\n            }}\n          >\n            Forgot Password?\n          </Text>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: theme.white2,\n    },\n    banner: {\n      //position: 'absolute',\n      backgroundColor: theme.primary,\n      width: '100%',\n      height: '50%',\n      //justifyContent: 'center',\n      alignItems: 'center',\n      // borderBottomColor: theme.white2,\n      // borderBottomWidth: 45\n    },\n    imageContainer: {\n      position: 'absolute',\n      bottom: 0,\n      left: 30,\n      backgroundColor: 'transparent',\n      width: 90,\n      height: '100%',\n      //justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 2,\n      margin: 0,\n    },\n    // dimImage: {\n    //   borderWidth: 1,\n    //   height: '100%',\n    //   width: 90,\n    //   alignItems: 'center',\n    // },\n    boldImage: {\n      position: 'absolute',\n      bottom: 0,\n      backgroundColor: theme.white2,\n      borderRadius: 15,\n      width: 90,\n      height: 70,\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 2,\n    },\n    logo: {\n      height: 60,\n      width: 60,\n      resizeMode: 'contain',\n    },\n    slant: {\n      position: 'absolute',\n      bottom: -0.5,\n      zIndex: 1,\n      marginLeft: 0,\n      //backgroundColor: '#fff',\n      height: 0,\n      width: 0,\n      borderStyle: 'solid',\n      borderTopWidth: 150,\n      borderRightColor: theme.white2,\n      borderBottomColor: theme.white2,\n      borderTopColor: 'transparent',\n      //borderLeftColor: 'transparent',\n    },\n    formCenter: {\n      justifyContent: 'center',\n      flex: 1,\n      margin: 25,\n    },\n    section: {\n      flexDirection: 'row',\n      //justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: theme.white2,\n      height: 40,\n      borderRadius: 20,\n      margin: 10,\n      shadowColor: theme.primary,\n      elevation: 20,\n      shadowOffset: { width: 0, height: 4 },\n      shadowOpacity: 0.3,\n      shadowRadius: 7,\n    },\n    icon: {\n      position: 'absolute',\n      left: -10,\n      height: 50,\n      width: 50,\n      borderRadius: 100,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: theme.white2,\n      shadowColor: theme.primary,\n      elevation: 20,\n      shadowOffset: { width: 0, height: 4 },\n      shadowOpacity: 0.3,\n      shadowRadius: 7,\n    },\n    textInput: {\n      marginLeft: 50,\n      flexDirection: 'row',\n      flex: 1,\n      backgroundColor: theme.white2,\n      padding: 10,\n      borderRadius: 20,\n      height: '100%',\n      //outlineWidth: 0,\n      //justifyContent: \"center\",\n    },\n    button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'row',\n      width: '100%',\n      backgroundColor: theme.primary,\n      height: 30,\n      marginTop: 40,\n      borderRadius: 50,\n    },\n    bottomButton: {\n      //flexDirection: 'row',\n      alignContent: 'center',\n      justifyContent: 'center',\n      borderTopColor: 'gray',\n      borderTopWidth: 1,\n      padding: 10,\n      marginBottom: 30,\n    },\n    demoText: {\n      color: theme.grey2,\n      textAlign: 'center',\n    },\n  });\n","import React from 'react';\nimport { Text, View, StyleSheet, SafeAreaView, TouchableOpacity, Linking } from 'react-native';\nimport * as WebBrowser from 'expo-web-browser';\n\nimport { useTheme } from '../../context/ThemeProvider';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport { ScreenStackHeaderSearchBarView } from 'react-native-screens';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nexport default function About({ navigation }) {\n  const { theme } = useTheme();\n\n  return (\n    <SafeAreaView style={{ flex: 1, alignItems: 'center', backgroundColor: theme.background }}>\n      <View style={styles(theme).topBanner}>\n        <TouchableOpacity onPress={() => navigation.goBack()} style={{ position: 'absolute', left: 10 }}>\n          <Icon name='arrow-back' color={theme.primary} size={30} style={{ marginTop: 3 }} />\n        </TouchableOpacity>\n        <Text style={styles(theme).titleText}>Meet the Creators</Text>\n      </View>\n\n      <View style={styles(theme).section}>\n        <View style={{ flexDirection: 'row', justifyContent: 'space-between', width: '90%', marginTop: 15 }}>\n          <Text style={styles(theme).headerText}>{'\\u25CF'} Kevin Fu</Text>\n          <Text style={styles(theme).headerText}>Class of '25</Text>\n        </View>\n\n        <View style={{ width: '85%' }}>\n          <Text style={[styles(theme).normalText, { marginLeft: 6 }]}>CS and Math Major</Text>\n\n          <View style={{ width: '100%', flexDirection: 'row', justifyContent: 'space-evenly', marginVertical: 15 }}>\n            <TouchableOpacity\n              onPress={() => {\n                WebBrowser.openBrowserAsync('https://github.com/kevinfu1');\n              }}\n            >\n              <Icon name='logo-github' color={theme.primary} size={22} style={{ marginTop: 3 }} />\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                WebBrowser.openBrowserAsync('https://www.linkedin.com/in/kevin-fu1/');\n              }}\n            >\n              <Icon name='logo-linkedin' color={theme.primary} size={22} style={{ marginTop: 3 }} />\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                Linking.openURL('mailto:kevin.fu366@duke.edu');\n              }}\n            >\n              <Icon name='mail-outline' color={theme.primary} size={22} style={{ marginTop: 3 }} />\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                WebBrowser.openBrowserAsync('https://www.instagram.com/kevinfu_1/');\n              }}\n            >\n              <Icon name='logo-instagram' color={theme.primary} size={22} style={{ marginTop: 3 }} />\n            </TouchableOpacity>\n          </View>\n        </View>\n\n        <View style={{ flexDirection: 'row', justifyContent: 'space-between', width: '90%', marginTop: 15 }}>\n          <Text style={styles(theme).headerText}>{'\\u25CF'} Alvin Hong</Text>\n          <Text style={styles(theme).headerText}>Class of '25</Text>\n        </View>\n\n        <View style={{ width: '85%' }}>\n          <Text style={[styles(theme).normalText, { marginLeft: 6 }]}>ECE and CS Major</Text>\n\n          <View style={{ width: '100%', flexDirection: 'row', justifyContent: 'space-evenly', marginVertical: 15 }}>\n            <TouchableOpacity\n              onPress={() => {\n                WebBrowser.openBrowserAsync('https://github.com/alvin-hong');\n              }}\n            >\n              <Icon name='logo-github' color={theme.primary} size={22} style={{ marginTop: 3 }} />\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                WebBrowser.openBrowserAsync('https://www.linkedin.com/in/alvin-hong-2a0763225/');\n              }}\n            >\n              <Icon name='logo-linkedin' color={theme.primary} size={22} style={{ marginTop: 3 }} />\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                Linking.openURL('mailto:alvin.hong@duke.edu');\n              }}\n            >\n              <Icon name='mail-outline' color={theme.primary} size={22} style={{ marginTop: 3 }} />\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                WebBrowser.openBrowserAsync('https://www.instagram.com/alvin.hong_/');\n              }}\n            >\n              <Icon name='logo-instagram' color={theme.primary} size={22} style={{ marginTop: 3 }} />\n            </TouchableOpacity>\n          </View>\n        </View>\n\n        <View style={{ width: '90%', marginTop: 18 }}>\n          <Text style={[styles(theme).normalText, { marginBottom: 10 }]}>\n            Feel free to email us at{' '}\n            <Text style={{ color: theme.quaternary }} onPress={() => Linking.openURL('mailto:kvilletenting@gmail.com')}>\n              kvilletenting@gmail.com\n            </Text>{' '}\n            if you have any questions about the project or any other inquiries.\n          </Text>\n          <Text style={[styles(theme).normalText, { marginBottom: 10 }]}>\n            We would love to hear any feedback or suggestions you have for us.\n          </Text>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    topBanner: {\n      //for the top container holding top 'settings' and save button\n      flexDirection: 'row',\n      backgroundColor: theme.background,\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginBottom: 30,\n      width: '100%',\n      height: 70,\n      paddingVertical: 10,\n      borderBottomWidth: 0.5,\n      borderColor: theme.popOutBorder,\n      paddingHorizontal: 20,\n    },\n    titleText: {\n      //text for different setting headers\n      fontSize: 20,\n      fontWeight: '600',\n      color: theme.text2,\n    },\n    section: {\n      width: '100%',\n      alignItems: 'center',\n    },\n    headerText: {\n      fontSize: 18,\n      color: theme.grey2,\n      fontWeight: '600',\n      marginBottom: 5,\n    },\n    normalText: {\n      fontSize: 15,\n      fontWeight: '400',\n      marginBottom: 5,\n    },\n  });\n","import React, { useState} from 'react'\nimport {\n  Text,\n  View,\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  TextInput,\n  KeyboardAvoidingView,  \n  SafeAreaView,\n\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\n\nimport { useTheme } from '../../context/ThemeProvider';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport coachKLogo from '../../assets/coachKLogo.png';\nimport { setSnackMessage, toggleSnackBar } from '../../redux/reducers/snackbarSlice';\n\n\n\nexport default function ChangeEmail({navigation}) {\n  const username = useSelector((state)=>state.user.currentUser.username);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [secureTextEntry, setSecureTextEntry] = useState(true);\n  const { theme } = useTheme();\n  const dispatch = useDispatch();\n\n\n  const user = firebase.auth().currentUser;\n\n  async function updateEmail() {\n    if (firebase.auth().currentUser.uid == 'LyenTwoXvUSGJvT14cpQUegAZXp1') {\n      dispatch(setSnackMessage('This is a demo account'));\n      dispatch(toggleSnackBar());\n      return;\n    }\n    const credentials = firebase.auth.EmailAuthProvider.credential(user.email, password);\n    await user.reauthenticateWithCredential(credentials)\n        .then(()=>{\n            firebase\n                .firestore()\n                .collection('users')\n                .doc(firebase.auth().currentUser.uid)\n                .update({\n                    email: email\n                })\n                .then(() => {\n                    dispatch(setSnackMessage('Saved New Email'));\n                    dispatch(toggleSnackBar());\n                    navigation.goBack();\n                })\n                .catch((error) => console.error(error));\n            firebase\n                .auth()\n                .currentUser.updateEmail(email)\n                .catch((error) => console.error(error));\n        })\n        .catch((error) => {\n            dispatch(setSnackMessage('Incorrect Password Entered'));\n            dispatch(toggleSnackBar());\n            console.error(error);\n            return;\n        });  \n  }\n  \n  return (\n    <SafeAreaView style={styles(theme).container}>\n      <View style={styles(theme).topBanner}>\n          <TouchableOpacity onPress={() => navigation.goBack()}>\n            <Icon name='arrow-back' color={theme.primary} size={30} style={{ marginTop: 3 }} />\n          </TouchableOpacity>\n          <Text style={styles(theme).titleText}>\n            Update email address\n          </Text>\n\n        <TouchableOpacity onPress={updateEmail}>\n          <Text style={{ fontSize: 18, fontWeight: '500', color: theme.primary }}>Save</Text>\n        </TouchableOpacity>\n      </View>\n\n      <KeyboardAvoidingView behavior='padding' style={[styles(theme).container, { width: '100%' }]}>\n        <View style={{ flexDirection: 'row', width: '90%', alignItems: 'flex-end', marginBottom: 60, marginTop: 30 }}>\n          <Image source={coachKLogo} style={styles(theme).kIcon} />\n          <View style={{ marginLeft: 10 }}>\n            <Text style={{ fontSize: 16, fontWeight: '500' }}>{user.email}</Text>\n            <Text style={{ fontSize: 16, fontWeight: '400' }}>Username: {username}</Text>\n          </View>\n        </View>\n\n        <View style={{ height: '50%', width: '100%', alignItems: 'center' }}>\n          <View style={styles(theme).inputView}>\n            <TextInput\n              style={styles(theme).textInput}\n              placeholder='New email address'\n              value={email}\n              onChangeText={(email) => setEmail(email)}\n              keyboardType='email-address'\n            />\n          </View>\n\n          <View style={styles(theme).inputView}>\n            <TextInput\n              style={styles(theme).textInput}\n              placeholder='Account Password'\n              secureTextEntry={secureTextEntry}\n              value={password}\n              onChangeText={(password) => setPassword(password)}\n            />\n            <TouchableOpacity\n              style={{ marginLeft: -20 }}\n              onPress={() => {\n                setSecureTextEntry(!secureTextEntry);\n                return false;\n              }}\n            >\n              <Icon name={secureTextEntry ? 'eye-off-outline' : 'eye-outline'} color={theme.icon2} size={20} />\n            </TouchableOpacity>\n          </View>\n        </View>\n\n        {/* \n            <View style={styles(theme).BottomView}>\n                <TouchableOpacity\n                    style = {[styles(theme).bottomBtn, {backgroundColor: theme.grey3}]}\n                    onPress= {()=>navigation.goBack()}\n                >\n                    <Text style={{fontSize: 16, fontWeight: '500', color: theme.grey1}}>Cancel</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                    style = {[styles(theme).bottomBtn, {backgroundColor: theme.primary}]}\n                    onPress= {updateEmail}\n                >\n                    <Text style={{fontSize: 16, fontWeight: '500', color: theme.text1}}>Save</Text>\n                </TouchableOpacity>\n            </View>  */}\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    container: { flex: 1, alignItems: 'center', backgroundColor: theme.background },\n\n    topBanner: {\n      //for the top container holding top 'settings' and save button\n      flexDirection: 'row',\n      backgroundColor: theme.background,\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      marginBottom: 30,\n      width: '100%',\n      height: 70,\n      paddingVertical: 10,\n      borderBottomWidth: 0.5,\n      borderColor: theme.popOutBorder,\n      paddingHorizontal: 10,\n    },\n\n    titleText: {\n      //text for different setting headers\n      fontSize: 18,\n      fontWeight: '600',\n      color: theme.text2,\n    },\n    kIcon: {\n      //for the duke basketball logos\n      width: 40,\n      height: 45,\n      alignSelf: 'center',\n      marginLeft: 10,\n      marginRight: 20,\n    },\n\n    textInput: {\n      width: '100%',\n      fontSize: 18,\n      paddingHorizontal: 5,\n      paddingVertical: 5,\n      outlineWidth: 0.5,\n      //justifyContent: \"center\",\n    },\n    inputView: {\n      flexDirection: 'row',\n      marginVertical: 18,\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      width: '90%',\n      borderBottomColor: theme.grey3,\n      borderBottomWidth: 1,\n    },\n\n    /*     BottomView: {\n      flexDirection: 'row',\n      justifyContent: 'space-evenly',\n      position: 'absolute',\n      bottom: '2%',\n      width: '100%',\n      alignItems: 'center',\n      //borderWidth: 0.5,\n      borderColor: theme.popOutBorder,\n    },\n    bottomBtn:{\n      width: '45%',\n      height: 40,\n      borderRadius: 20,\n      alignItems: 'center',\n      justifyContent: 'center',\n    } */\n  });","import React, { useState } from 'react';\nimport {\n  Text,\n  View,\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  TextInput,\n  KeyboardAvoidingView,\n  SafeAreaView,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\n\nimport { useTheme } from '../../context/ThemeProvider';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport coachKLogo from '../../assets/coachKLogo.png';\nimport { setSnackMessage, toggleSnackBar } from '../../redux/reducers/snackbarSlice';\n\nexport default function ChangePassword({ navigation }) {\n  const username = useSelector((state) => state.user.currentUser.username);\n  const [currPassword, setCurrPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [secureCurrEntry, setSecureCurrEntry] = useState(true);\n  const [secureNewEntry, setSecureNewEntry] = useState(true);\n  const [secureConfirmEntry, setSecureConfirmEntry] = useState(true);\n\n  const { theme } = useTheme();\n  const dispatch = useDispatch();\n\n  const user = firebase.auth().currentUser;\n\n  async function updatePassword() {\n     if (firebase.auth().currentUser.uid == 'LyenTwoXvUSGJvT14cpQUegAZXp1') {\n       dispatch(setSnackMessage('This is a demo account'));\n       dispatch(toggleSnackBar());\n       return;\n     }\n    if (newPassword == confirmPassword) {\n      const credentials = firebase.auth.EmailAuthProvider.credential(user.email, currPassword);\n      await user\n        .reauthenticateWithCredential(credentials)\n        .then(() => {\n          firebase\n            .auth()\n            .currentUser.updatePassword(newPassword)\n            .then(() => {\n              dispatch(setSnackMessage('Saved New Password'));\n              dispatch(toggleSnackBar());\n              navigation.goBack();\n            })\n            .catch((error) => console.error(error));\n        })\n        .catch((error) => {\n          dispatch(setSnackMessage('Incorrect Current Password Entered'));\n          dispatch(toggleSnackBar());\n          console.error(error);\n          return;\n        });\n    } else {\n      dispatch(setSnackMessage('Your Passwords Do Not Match'));\n      dispatch(toggleSnackBar());\n    }\n  }\n\n  return (\n    <SafeAreaView style={styles(theme).container}>\n      <View style={styles(theme).topBanner}>\n        <TouchableOpacity onPress={() => navigation.goBack()}>\n          <Icon name='arrow-back' color={theme.primary} size={30} style={{ marginTop: 3 }} />\n        </TouchableOpacity>\n        <Text style={styles(theme).titleText}>Reset password</Text>\n        <TouchableOpacity onPress={updatePassword}>\n          <Text style={{ fontSize: 18, fontWeight: '500', color: theme.primary }}>Save</Text>\n        </TouchableOpacity>\n      </View>\n\n      <KeyboardAvoidingView behavior='padding' style={[styles(theme).container, { width: '100%' }]}>\n        <View style={{ flexDirection: 'row', width: '90%', alignItems: 'flex-end', marginBottom: 60, marginTop: 30 }}>\n          <Image source={coachKLogo} style={styles(theme).kIcon} />\n          <View style={{ marginLeft: 10 }}>\n            <Text style={{ fontSize: 16, fontWeight: '500' }}>{user.email}</Text>\n            <Text style={{ fontSize: 16, fontWeight: '400' }}>Username: {username}</Text>\n          </View>\n        </View>\n\n        <View style={{ height: '50%', width: '100%', alignItems: 'center' }}>\n          <View style={[styles(theme).inputView, { marginBottom: 60 }]}>\n            <TextInput\n              style={styles(theme).textInput}\n              placeholder='Current password'\n              secureTextEntry={secureCurrEntry}\n              value={currPassword}\n              onChangeText={(currPassword) => setCurrPassword(currPassword)}\n            />\n            <TouchableOpacity\n              style={{ marginLeft: -20 }}\n              onPress={() => {\n                setSecureCurrEntry(!secureCurrEntry);\n                return false;\n              }}\n            >\n              <Icon name={secureCurrEntry ? 'eye-off-outline' : 'eye-outline'} color={theme.icon2} size={20} />\n            </TouchableOpacity>\n          </View>\n\n          <View style={styles(theme).inputView}>\n            <TextInput\n              style={styles(theme).textInput}\n              placeholder='New password'\n              secureTextEntry={secureConfirmEntry}\n              value={newPassword}\n              onChangeText={(newPassword) => setNewPassword(newPassword)}\n            />\n            <TouchableOpacity\n              style={{ marginLeft: -20 }}\n              onPress={() => {\n                setSecureConfirmEntry(!secureConfirmEntry);\n                return false;\n              }}\n            >\n              <Icon name={secureConfirmEntry ? 'eye-off-outline' : 'eye-outline'} color={theme.icon2} size={20} />\n            </TouchableOpacity>\n          </View>\n\n          <View style={styles(theme).inputView}>\n            <TextInput\n              style={styles(theme).textInput}\n              placeholder='Confirm new password'\n              secureTextEntry={secureNewEntry}\n              value={confirmPassword}\n              onChangeText={(confirmPassword) => setConfirmPassword(confirmPassword)}\n            />\n            <TouchableOpacity\n              style={{ marginLeft: -20 }}\n              onPress={() => {\n                setSecureNewEntry(!secureNewEntry);\n                return false;\n              }}\n            >\n              <Icon name={secureNewEntry ? 'eye-off-outline' : 'eye-outline'} color={theme.icon2} size={20} />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    container: { flex: 1, alignItems: 'center', backgroundColor: theme.background },\n\n    topBanner: {\n      //for the top container holding top 'settings' and save button\n      flexDirection: 'row',\n      backgroundColor: theme.background,\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      marginBottom: 30,\n      width: '100%',\n      height: 70,\n      paddingVertical: 10,\n      borderBottomWidth: 0.5,\n      borderColor: theme.popOutBorder,\n      paddingHorizontal: 10,\n    },\n\n    titleText: {\n      //text for different setting headers\n      fontSize: 18,\n      fontWeight: '600',\n      color: theme.text2,\n    },\n    kIcon: {\n      //for the duke basketball logos\n      width: 40,\n      height: 45,\n      alignSelf: 'center',\n      marginLeft: 10,\n      marginRight: 20,\n    },\n\n    textInput: {\n      width: '100%',\n      fontSize: 18,\n      paddingHorizontal: 5,\n      paddingVertical: 5,\n      //outlineWidth: 0.5,\n      //justifyContent: \"center\",\n    },\n    inputView: {\n      flexDirection: 'row',\n      marginVertical: 18,\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      width: '90%',\n      borderBottomColor: theme.grey3,\n      borderBottomWidth: 1,\n    },\n  });\n","import React from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity } from 'react-native';\nimport Modal from 'react-native-modal';\nimport { useTheme } from '../context/ThemeProvider';\n//import { Divider } from 'react-native-paper';\n\n/**\n * Parent Function for Confirmation Modal component\n * This Modal has little to no customization for uniform look\n * @param {function} toggleModal --  unction for toggling the modal\n * @param {string} userStyle -- options: ('dark' | 'light') background color of modal and text color\n * @param {function} buttonAction -- action taken the confirmation button \n * @param {string} body -- text prompt for the confirmation\n * @param {string} buttonText -- text for confirmation button\n * \n * @param {props} props --\n    **NOTE: must include normal modal props in the props of the Modal such as:\n        isVisible={isModalVisible} \n        onBackdropPress={() => setModalVisible(false)}\n        onSwipeComplete = {toggleModal} \n\n * @returns Modal Component\n */\nconst ConfirmationModal = ({ toggleModal, buttonAction, body, buttonText, userStyle, ...props }) => {\n  {\n    const { theme } = useTheme();\n\n    //set up default styles for light and dark themes\n    let backgroundColor, opacity, bodyText;\n    userStyle == 'light'\n      ? ((backgroundColor = '#fff'), (opacity = '92%'), (bodyText = 'black'))\n      : ((backgroundColor = '#565656'), (opacity = '100%'), (bodyText = '#fff'));\n\n    return (\n      <Modal\n        style={styles(theme).BottomModalView}\n        swipeDirection={['down']}\n        backdropTransitionOutTiming={0}\n        keyboardDismissMode={'on-drag'}\n        {...props}\n      >\n        <View>\n          <View style={[styles(theme).confirmationPop, { backgroundColor: backgroundColor, opacity: opacity }]}>\n            <View\n              style={{\n                height: '60%',\n                width: '100%',\n                justifyContent: 'center',\n                borderBottomWidth: 1,\n                borderBottomColor: '#cfcfcf',\n                padding: 10,\n              }}\n            >\n              <Text style={[styles(theme).confirmationText, { color: bodyText }]}>{body}</Text>\n            </View>\n\n            <TouchableOpacity\n              onPress={() => {\n                buttonAction();\n                toggleModal();\n              }}\n              style={{ height: '40%', width: '100%' }}\n            >\n              <View style={{ height: '100%', width: '100%', justifyContent: 'center' }}>\n                <Text style={[styles(theme).confirmationHeader, { color: theme.error }]}>{buttonText}</Text>\n              </View>\n            </TouchableOpacity>\n          </View>\n\n          <TouchableOpacity\n            onPress={() => toggleModal()}\n            style={[styles(theme).confirmationBottomBtn, { backgroundColor: backgroundColor, opacity: opacity }]}\n          >\n            <Text style={[styles(theme).confirmationHeader, { color: '#1988f8' }]}>Cancel</Text>\n          </TouchableOpacity>\n        </View>\n      </Modal>\n    );\n  }\n};\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    BottomModalView: {\n      //Modal Style for placing at bottom\n      margin: 0,\n      justifyContent: 'flex-end',\n    },\n    confirmationPop: {\n      //Style for top part container\n      width: '95%',\n      height: 150,\n      alignSelf: 'center',\n      alignItems: 'center',\n      justifyContent: 'space-evenly',\n      borderRadius: 20,\n      margin: 15,\n\n      // shadowColor: '#171717',\n      // shadowOffset: { width: 0, height: -5 },\n      // shadowOpacity: 0.5,\n      // shadowRadius: 20,\n      // elevation: 5,\n    },\n    confirmationHeader: {\n      //style for text of buttons\n      fontWeight: '600',\n      textAlign: 'center',\n      fontSize: 23,\n    },\n    confirmationText: {\n      //style for prompt text\n      textAlign: 'center',\n      justifyContent: 'center',\n      padding: 5,\n    },\n    confirmationBottomBtn: {\n      //style for cancel button\n      color: theme.text1,\n      alignSelf: 'center',\n      width: '95%',\n      borderRadius: 15,\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: 65,\n      marginBottom: 15,\n\n      shadowColor: '#171717',\n      shadowOffset: { width: 0, height: -5 },\n      shadowOpacity: 0.5,\n      shadowRadius: 20,\n      elevation: 5,\n    },\n  });\n\nexport { ConfirmationModal };\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    currentUser: null,\n    currGroupCode: '',\n    currGroupName: '',\n    currUserName: '',\n    currTentType: '',\n    currGroupRole: '',\n  },\n  reducers: {\n    setCurrentUser: (state, action) => {\n      state.currentUser = action.payload;\n    },\n    reset: (state) => {\n      state.currentUser = null;\n      state.currGroupCode = '';\n      state.currGroupName = '';\n      state.currUserName = '';\n      state.currTentType = '';\n      state.currGroupRole = '';\n    },\n    resetCurrGroup: (state)=> {\n       state.currGroupCode = '';\n       state.currGroupName = '';\n       state.currUserName = '';\n       state.currTentType = '';\n       state.currGroupRole = '';\n    },\n    setGroupCode: (state, action) => {\n      state.currGroupCode = action.payload;\n    },\n    setGroupName: (state, action) => {\n      state.currGroupName = action.payload;\n    },\n    setUserName: (state, action) => {\n      state.currUserName = action.payload;\n    },\n    setTentType: (state, action) => {\n      state.currTentType = action.payload;\n    },\n    setGroupRole: (state, action) => {\n      state.currGroupRole = action.payload;\n    },\n  },\n});\n\nexport const { setCurrentUser, reset, setGroupCode, setGroupName, setUserName, setTentType, setGroupRole, resetCurrGroup } =\n  userSlice.actions;\n\nexport default userSlice.reducer;\n","import React, { useState } from 'react';\nimport { Text, View, StyleSheet, TouchableOpacity, SafeAreaView, Linking } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport * as WebBrowser from 'expo-web-browser';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\n\nimport { useTheme } from '../../context/ThemeProvider';\nimport { ConfirmationModal } from '../../components/ConfirmationModal';\nimport { reset } from '../../redux/reducers/userSlice';\n\nconst PERSISTENCE_KEY = 'NAVIGATION_STATE_V1';\n\nexport default function AccountSettings({ navigation }) {\n  const [isConfirmationVisible, setConfirmationVisible] = useState(false);\n  const { theme } = useTheme();\n  const dispatch = useDispatch();\n\n  async function onLogout() {\n    toggleConfirmation();\n    await AsyncStorage.multiRemove(['USER_EMAIL', 'USER_PASSWORD', PERSISTENCE_KEY]);\n    await firebase.auth().signOut();\n    dispatch(reset());\n  }\n\n  function toggleConfirmation() {\n    setConfirmationVisible(!isConfirmationVisible);\n  } \n\n  return (\n    <SafeAreaView style={styles(theme).settingsContainer}>\n      <View style={styles(theme).topBanner}>\n        <TouchableOpacity onPress={() => navigation.goBack()} style={{position: 'absolute', left: 15}}>\n          <Icon name='arrow-back' color={theme.primary} size={30} style={{ marginTop: 3 }} />\n        </TouchableOpacity>\n        <Text style={[styles(theme).titleText, { color: theme.text2, alignSelf: 'center', fontSize: 26, marginLeft:0 }]}>\n          Settings\n        </Text>\n      </View>\n\n      <Text style={styles(theme).headerText}>User Settings</Text>\n      <TouchableOpacity style={styles(theme).settingBtn} onPress={() => navigation.navigate('ChangeEmail')}>\n        <View style={styles(theme).rightOfBtn}>\n          <Icon name='mail-outline' color={theme.grey2} size={22} />\n          <Text style={styles(theme).listText}>Update Email Address</Text>\n        </View>\n        <Icon name='arrow-forward' color={theme.grey2} size={25} style={{ marginRight: 20 }} />\n      </TouchableOpacity>\n      <TouchableOpacity style={styles(theme).settingBtn} onPress={() => navigation.navigate('ChangePassword')}>\n        <View style={styles(theme).rightOfBtn}>\n          <Icon name='lock-closed-outline' color={theme.grey2} size={22} />\n          <Text style={styles(theme).listText}>Change Password</Text>\n        </View>\n        <Icon name='arrow-forward' color={theme.grey2} size={25} style={{ marginRight: 20 }} />\n      </TouchableOpacity>\n\n      <Text style={[styles(theme).headerText, { marginTop: 15 }]}>About</Text>\n      <TouchableOpacity style={styles(theme).settingBtn} onPress={() => navigation.navigate('AboutScreen')}>\n        <View style={styles(theme).rightOfBtn}>\n          <Icon name='apps-outline' color={theme.grey2} size={22} />\n          <Text style={styles(theme).listText}>Creators</Text>\n        </View>\n        <Icon name='arrow-forward' color={theme.grey2} size={25} style={{ marginRight: 20 }} />\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles(theme).settingBtn}\n        onPress={() => {\n          WebBrowser.openBrowserAsync('https://kevinfu1.github.io/KVille-Website/privacy.html');\n        }}\n      >\n        <View style={styles(theme).rightOfBtn}>\n          <Icon name='clipboard-outline' color={theme.grey2} size={22} />\n          <Text style={styles(theme).listText}>Privacy Policy</Text>\n        </View>\n        <Icon name='arrow-forward' color={theme.grey2} size={25} style={{ marginRight: 20 }} />\n      </TouchableOpacity>\n\n      <Text style={[styles(theme).headerText, { marginTop: 15 }]}>Support</Text>\n      {/* <TouchableOpacity style={styles(theme).settingBtn} onPress={() => navigation.navigate('AboutScreen')}>\n        <View style={styles(theme).rightOfBtn}>\n          <Icon name='apps-outline' color={theme.grey2} size={22} />\n          <Text style={styles(theme).listText}>Report an Issue</Text>\n        </View>\n        <Icon name='arrow-forward' color={theme.grey2} size={25} style={{ marginRight: 20 }} />\n      </TouchableOpacity> */}\n      <TouchableOpacity style={styles(theme).settingBtn} onPress={() => navigation.navigate('DeleteAccount')}>\n        <View style={styles(theme).rightOfBtn}>\n          <Icon name='trash-outline' color={theme.error} size={22} />\n          <Text style={[styles(theme).listText, { color: theme.error }]}>Delete Account</Text>\n        </View>\n        <Icon name='arrow-forward' color={theme.grey2} size={25} style={{ marginRight: 20 }} />\n      </TouchableOpacity>\n\n      <TouchableOpacity style={styles(theme).leaveButton} onPress={toggleConfirmation}>\n        <Icon name='log-out-outline' color={theme.grey2} size={22} style={{ marginRight: 15 }} />\n        <Text style={{ color: theme.grey2, fontSize: 20, fontWeight: '500' }}>Log out</Text>\n      </TouchableOpacity>\n\n      <ConfirmationModal\n        body={'Are you sure you want to log out?'}\n        buttonText={'Log out'}\n        buttonAction={() => {\n          onLogout();\n        }}\n        toggleModal={toggleConfirmation}\n        isVisible={isConfirmationVisible}\n        onBackdropPress={() => setConfirmationVisible(false)}\n        onSwipeComplete={toggleConfirmation}\n        userStyle='light'\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    settingsContainer: {\n      flexDirection: 'column',\n      //alignItems: 'center',\n      backgroundColor: theme.background,\n      width: '100%',\n      height: '100%',\n      borderTopRightRadius: 20,\n      borderTopLeftRadius: 20,\n    },\n    topBanner: {\n      //for the top container holding top 'settings' and save button\n      flexDirection: 'row',\n      backgroundColor: theme.background,\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginBottom: 30,\n      width: '100%',\n      paddingVertical: 10,\n      borderBottomWidth: 0.5,\n      borderColor: theme.popOutBorder,\n      borderTopRightRadius: 20,\n      borderTopLeftRadius: 20,\n      paddingHorizontal: 20,\n    },\n\n    titleText: {\n      //text for different setting headers\n      fontSize: 20,\n      fontWeight: '600',\n      color: theme.grey2,\n      marginLeft: 25,\n    },\n    headerText: {\n      fontSize: 17,\n      color: theme.grey2,\n      fontWeight: '600',\n      marginLeft: 20,\n      marginBottom: 7,\n    },\n    rightOfBtn: {\n      flexDirection: 'row',\n      marginLeft: 20,\n    },\n    listText:{\n      fontSize: 16,\n      fontWeight: '400',\n      marginLeft: 20,\n    },\n    settingBtn:{\n      flexDirection: 'row',\n      width: '100%',\n      height: 50,\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      backgroundColor: theme.white1,\n    },\n    leaveButton: {\n      flexDirection: 'row',\n      backgroundColor: '#fff',\n      borderRadius: 15,\n      padding: 15,\n      position: 'absolute',\n      bottom: '3%',\n      width: '90%',\n      alignItems: 'center',\n      alignSelf: 'center',\n      justifyContent: 'center',\n      borderWidth: 0.5,\n      borderColor: theme.popOutBorder,\n    },\n  });\n","import React, { useState } from 'react';\nimport {\n  Text,\n  View,\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  TextInput,\n  KeyboardAvoidingView,\n  SafeAreaView,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\n\nimport { useTheme } from '../../context/ThemeProvider';\nimport { ConfirmationModal } from '../../components/ConfirmationModal';\nimport { reset } from '../../redux/reducers/userSlice';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport coachKLogo from '../../assets/coachKLogo.png';\nimport { setSnackMessage, toggleSnackBar } from '../../redux/reducers/snackbarSlice';\n\nconst PERSISTENCE_KEY = 'NAVIGATION_STATE_V1';\n\nexport default function DeleteAccount({ navigation }) {\n  const groups = useSelector((state) => state.user.currentUser.groupCode);\n  const username = useSelector((state) => state.user.currentUser.username);\n  const [password, setPassword] = useState('');\n  const [secureTextEntry, setSecureTextEntry] = useState(true);\n  const [isConfirmationVisible, setConfirmationVisible] = useState(false);\n  const { theme } = useTheme();\n  const dispatch = useDispatch();\n\n  function toggleConfirmation() {\n    setConfirmationVisible(!isConfirmationVisible);\n  }\n\n  const user = firebase.auth().currentUser;\n\n  async function deleteUser() {\n     if (firebase.auth().currentUser.uid == 'LyenTwoXvUSGJvT14cpQUegAZXp1') {\n       dispatch(setSnackMessage('This is a demo account'));\n       dispatch(toggleSnackBar());\n       return;\n     }\n    if (groups.length == 0) {\n      console.log(password);\n      const credentials = firebase.auth.EmailAuthProvider.credential(user.email, password);\n      await user\n        .reauthenticateWithCredential(credentials)\n        .then(async () => {\n          AsyncStorage.multiRemove(['USER_EMAIL', 'USER_PASSWORD', PERSISTENCE_KEY]);\n\n          await firebase\n            .firestore()\n            .collection('users')\n            .doc(firebase.auth().currentUser.uid)\n            .delete()\n            .catch((error) => console.error(error));\n          await firebase\n            .auth()\n            .currentUser.delete()\n            .catch((error) => console.error(error));\n\n          dispatch(reset());\n        })\n        .catch((error) => {\n          dispatch(setSnackMessage('Incorrect Password Entered'));\n          dispatch(toggleSnackBar());\n          console.error(error);\n          return;\n        });\n    } else {\n      dispatch(setSnackMessage('Delete or leave all current groups before deleting account'));\n      dispatch(toggleSnackBar());\n    }\n  }\n\n  return (\n    <SafeAreaView style={styles(theme).container}>\n      <View style={styles(theme).topBanner}>\n        <TouchableOpacity onPress={() => navigation.goBack()} style={{ position: 'absolute', left: 10, alignContent: 'center', justifyContent: 'center' }}>\n          <Icon name='arrow-back' color={theme.primary} size={30} />\n        </TouchableOpacity>\n        <Text style={styles(theme).titleText}>Delete User Account</Text>\n      </View>\n\n      <KeyboardAvoidingView behavior='padding' style={[styles(theme).container, { width: '100%' }]}>\n        <View style={{ flexDirection: 'row', width: '90%', alignItems: 'flex-end', marginBottom: 60, marginTop: 30 }}>\n          <Image source={coachKLogo} style={styles(theme).kIcon} />\n          <View style={{ marginLeft: 10 }}>\n            <Text style={{ fontSize: 16, fontWeight: '500' }}>{user.email}</Text>\n            <Text style={{ fontSize: 16, fontWeight: '400' }}>Username: {username}</Text>\n          </View>\n        </View>\n\n        <View style={{ height: '50%', width: '100%', alignItems: 'center' }}>\n          <View style={styles(theme).inputView}>\n            <TextInput\n              style={styles(theme).textInput}\n              placeholder='Account Password'\n              secureTextEntry={secureTextEntry}\n              value={password}\n              onChangeText={(password) => setPassword(password)}\n            />\n            <TouchableOpacity\n              style={{ marginLeft: -20 }}\n              onPress={() => {\n                setSecureTextEntry(!secureTextEntry);\n                return false;\n              }}\n            >\n              <Icon name={secureTextEntry ? 'eye-off-outline' : 'eye-outline'} color={theme.icon2} size={20} />\n            </TouchableOpacity>\n          </View>\n        </View>\n\n        <TouchableOpacity style={styles(theme).leaveButton} onPress={toggleConfirmation}>\n          <Text style={{ color: theme.error, fontSize: 20, fontWeight: '500' }}>Delete Account</Text>\n        </TouchableOpacity>\n      </KeyboardAvoidingView>\n\n      <ConfirmationModal\n        body={\n          'Are you sure you want to DELETE your account? This will delete any groups you have created and remove you from any groups you have joined.'\n        }\n        buttonText={'Delete account'}\n        buttonAction={() => {\n          deleteUser();\n        }}\n        toggleModal={toggleConfirmation}\n        isVisible={isConfirmationVisible}\n        onBackdropPress={() => setConfirmationVisible(false)}\n        onSwipeComplete={toggleConfirmation}\n        userStyle='light'\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    container: { flex: 1, alignItems: 'center', backgroundColor: theme.background },\n\n    topBanner: {\n      //for the top container holding top 'settings' and save button\n      flexDirection: 'row',\n      backgroundColor: theme.background,\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginBottom: 30,\n      width: '100%',\n      height: 70,\n      paddingVertical: 10,\n      borderBottomWidth: 0.5,\n      borderColor: theme.popOutBorder,\n      paddingHorizontal: 20,\n    },\n    titleText: {\n      //text for different setting headers\n      fontSize: 20,\n      fontWeight: '600',\n      color: theme.text2,\n    },\n    kIcon: {\n      //for the duke basketball logos\n      width: 40,\n      height: 45,\n      alignSelf: 'center',\n      marginLeft: 10,\n      marginRight: 20,\n    },\n\n    textInput: {\n      width: '100%',\n      fontSize: 18,\n      paddingHorizontal: 5,\n      paddingVertical: 5,\n      outlineWidth: 0.5,\n      //justifyContent: \"center\",\n    },\n    inputView: {\n      flexDirection: 'row',\n      marginVertical: 18,\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      width: '90%',\n      borderBottomColor: theme.grey3,\n      borderBottomWidth: 1,\n    },\n    leaveButton: {\n      backgroundColor: '#fff',\n      borderRadius: 15,\n      padding: 15,\n      position: 'absolute',\n      bottom: '3%',\n      width: '90%',\n      alignItems: 'center',\n      alignSelf: 'center',\n      borderWidth: 0.5,\n      borderColor: theme.popOutBorder,\n    },\n  });\n","import React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nimport AboutScreen from '../screens/settings/About';\nimport ChangeEmail from '../screens/settings/ChangeEmail';\nimport ChangePassword from '../screens/settings/ChangePassword';\nimport AccountSettingsScreen from '../screens/settings/AccountSettings';\nimport DeleteAccount from '../screens/settings/DeleteAccount';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function StackNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name='AccountSettingsScreen' component={AccountSettingsScreen} options={{ headerShown: false }} />\n      <Stack.Screen name='AboutScreen' component={AboutScreen} options={{ headerShown: false }} />\n      <Stack.Screen name='ChangeEmail' component={ChangeEmail} options={{ headerShown: false }} />\n      <Stack.Screen name='ChangePassword' component={ChangePassword} options={{ headerShown: false }} />\n      <Stack.Screen name='DeleteAccount' component={DeleteAccount} options={{ headerShown: false }} />\n    </Stack.Navigator>\n  );\n}\n","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nlet GRACE;\nconst MAXBLOCK = 8; //max half hours minus one (not including current time block) person can be scheduled for\n\n//Colors of each member, first is for 'empty'\n// prettier-ignore\nconst colors = ['#ececec', '#dd7e6b', '#ea9999', '#f9cb9c', '#ffe599', '#b6d7a8', '#a2c4c9',\n  '#a4c2f4' , '#fed9c9', '#b4a7d6', '#d5a6bd', '#e69138', '#6aa84f'];\n\nexport async function createGroupSchedule(groupCode, tentType) {\n  let numDay;\n  let numNight;\n\n  //based on the current tentType, adjust # of people needed in tent for day and night hours\n  //correspondingly\n  switch (tentType) {\n    case 'Black':\n      numDay = 2;\n      numNight = 10;\n      break;\n    case 'Blue':\n      numDay = 1;\n      numNight = 6;\n      break;\n    default:\n      numDay = 1;\n      numNight = 2;\n  }\n\n  //Initialize array of objects (memberArr), group schedule array, and previous members\n  //(members who had the last iteration of shifts)\n  let memberArr = new Array();\n  let groupScheduleArr = new Array(336);\n  let prevMember1 = null;\n  let prevMember2 = null;\n\n  //initialize member IDs array for updating hrs and colors\n  let memberIDs = [{ id: '12345', name: 'empty', color: '#ececec', changedHrs: 0 }];\n\n  //****input grace periods in groupScheduleArr, \"GRACE\" at each index****\n\n  //adds each member as an object to the memberArr\n  await firebase\n    .firestore()\n    .collection('groups') //UPDATE THIS TO 'groups' in real cases ******!!!\n    //.collection('groupsTest')\n    .doc(groupCode)\n    .collection('members')\n    .get()\n    .then((collSnap) => {\n      collSnap.forEach((doc) => {\n        //array of boolean values indicating availability\n        let availability = doc.data().availability;\n        let name = doc.data().name;\n        let hours = 0;\n        let consecutive = 0;\n        let id = doc.id;\n        let shifts = new Array(336);\n        shifts.fill(false);\n\n        //member name and id object (used to update hrs in schedule page)\n        let member = {\n          id,\n          name,\n          color: '',\n          changedHrs: 0,\n        };\n\n        memberIDs.push(member);\n\n        //member object\n        let current = {\n          name,\n          hours, //normalized by the half hour\n          availability, //array of 336 booleans\n          consecutive,\n          id,\n          shifts, //# of 30min shifts done consecutively\n        };\n        ////console.log(\"Current member object\", current);\n        memberArr.push(current); //add member to array\n      });\n    });\n  \n  if (memberArr.length == 1) {\n    throw 'Not enough members';\n  }\n\n  //promise to make sure all members are added before trying to read them\n\n  //console.log(\"tent type\", tentType, numDay, numNight);\n\n  //** FOR LOOP TO CREATE GROUP SCHEDULE\n  //total of 336 half hours in a week (48*7)\n  for (let time = 0; time < 336; time++) {\n    //iterate each half hour index of group schedule\n\n    //**FOR NIGHT TIME SHIFTS ONLY\n    //night time (starts at 1am-7am), so index 2 to 13\n    if (time % 48 == 2) {\n      //if night time, add the entire section as a block\n\n      sortMembers(time, memberArr); //sorts so lowest hours and available members go first\n      console.log('memberArr', memberArr);\n\n      //checks if the previous shift is still available\n      //If they are, shift their positions in the array to the beginning\n      if (prevMember1.availability[time]) {\n        let idxOfUsr = memberArr.findIndex((element) => element == prevMember1);\n\n        memberArr.splice(idxOfUsr, 1);\n        memberArr.unshift(prevMember1);\n        //console.log('member array at night', memberArr);\n      }\n      if (numDay == 2) {\n        if (prevMember2.availability[time]) {\n          let idxOfUsr = memberArr.findIndex((element) => element == prevMember2);\n\n          memberArr.splice(idxOfUsr, 1);\n          memberArr.unshift(prevMember2);\n          //console.log('member array at night', memberArr);\n        }\n      }\n\n      //indexes for all 12 half hours of night shift (from index 2 to index 13)\n      for (let nightHour = 0; nightHour < 12; nightHour++) {\n        //depending on how many are needed for each night (10 for 'black', 6 for 'blue', etc), index through each\n        for (let memberIdx = 0; memberIdx < numNight; memberIdx++) {\n          //if first member in sorted array and is available, set index of group array to that member\n          if (memberIdx == 0 && memberArr[0].availability[time]) {\n            groupScheduleArr[nightHour + time] = memberArr[0].name;\n            memberArr[0].shifts[nightHour + time] = true;\n            memberArr[0].hours++;\n          } else if (memberIdx < memberArr.length && memberArr[memberIdx].availability[time]) {\n            //for each next member, if available add to group schedule array\n            groupScheduleArr[nightHour + time] += ' ' + memberArr[memberIdx].name;\n            memberArr[memberIdx].shifts[nightHour + time] = true;\n            memberArr[memberIdx].hours++;\n          } else {\n            //otherwise, input empty to that empty spot\n            groupScheduleArr[nightHour + time] += ' empty';\n          }\n        }\n      }\n      time += 11; //adjust index to move forward to 7am (index 14)\n      continue;\n    }\n\n    //***ALL REMAINING CODE DEALS WITH DAYTIME SHIFTS ONLY***\n\n    //deals with blocking so members have consecutive shifts of 30 min\n    if (prevMember1 && prevMember2) {\n      //if previous shifts were not 'empty' continue\n      //switches prev1 and prev2 if first person is not available and second person is for the new time so that only have to consider one case\n\n      //console.log(time + ': ' + prevMember1.name + ' consecutive hours '  + prevMember1.consecutive + ' with ' + prevMember1.hours + ' scheduled');\n      //console.log(time + ': ' + prevMember2.name + ' consecutive hours '  + prevMember2.consecutive + ' with ' + prevMember2.hours + ' scheduled');\n      if (prevMember1.availability[time] && prevMember1.consecutive < MAXBLOCK) {\n        //If prev1 is available, add them in. Otherwise, resort and add next available person\n        groupScheduleArr[time] = prevMember1.name;\n        prevMember1.shifts[time] = true;\n        prevMember1.hours++;\n        prevMember1.consecutive++;\n      } else {\n        prevMember1.consecutive = 0;\n        sortMembers(time, memberArr); //sort array by total hours and availability\n\n        if (numDay == 2 && memberArr[0] == prevMember2) {\n          if (memberArr[1].availability[time]) {\n            //if index 1 is available add that instead\n            groupScheduleArr[time] = memberArr[1].name;\n            memberArr[1].shifts[time] = true;\n            memberArr[1].hours++;\n            //memberArr[1].consecutive++;\n            prevMember1 = memberArr[1];\n          } else {\n            //otherwise no one is available and add empty\n            groupScheduleArr[time] = 'empty';\n          }\n        } else {\n          //If the first index does not equal the previous1 member\n          if (memberArr[0].availability[time]) {\n            //then add the first index instead\n            groupScheduleArr[time] = memberArr[0].name;\n            memberArr[0].shifts[time] = true;\n            memberArr[0].hours++;\n            //memberArr[0].consecutive++;\n            prevMember1 = memberArr[0];\n          } else {\n            //if not available, no one is available so add empty\n            groupScheduleArr[time] = 'empty';\n          }\n        }\n      }\n\n      //if(numDay==1) continue;\n\n      if (numDay == 2) {\n        if (prevMember2.availability[time] && prevMember2.consecutive < MAXBLOCK) {\n          //If prev2 is available, add them in. Otherwise, resort and add next available person\n          groupScheduleArr[time] += ' ' + prevMember2.name;\n          prevMember2.shifts[time] = true;\n          prevMember2.hours++;\n          prevMember2.consecutive++;\n        } else {\n          prevMember2.consecutive = 0;\n          sortMembers(time, memberArr); //sort array by total hours and availability\n          ////console.log(\"members array\", memberArr);\n          if (memberArr[0] == prevMember1) {\n            if (memberArr[1].availability[time]) {\n              //if index 1 is available add that instead\n              groupScheduleArr[time] += ' ' + memberArr[1].name;\n              memberArr[1].shifts[time] = true;\n              memberArr[1].hours++;\n              prevMember2 = memberArr[1];\n            } else {\n              //otherwise no one is available and add empty\n              groupScheduleArr[time] += ' empty';\n            }\n          } else {\n            //If the first index does not equal the previous1 member\n            if (memberArr[0].availability[time]) {\n              //then add the first index instead\n              groupScheduleArr[time] += ' ' + memberArr[0].name;\n              memberArr[0].shifts[time] = true;\n              memberArr[0].hours++;\n              prevMember2 = memberArr[0];\n            } else {\n              //if not available, no one is available so add empty\n              groupScheduleArr[time] += ' empty';\n            }\n          }\n        }\n      }\n\n      continue;\n      //might need to set prevMember2.consecutive, if tenttype is black\n    }\n\n    sortMembers(time, memberArr); //sort array by total hours and availability\n    ////console.log(\"members array\", memberArr);\n    if (memberArr[0].availability[time]) {\n      //if first index is available, add to current block in group schedule\n      groupScheduleArr[time] = memberArr[0].name;\n      memberArr[0].shifts[time] = true;\n      memberArr[0].hours++;\n    } else {\n      //otherwise, add empty\n      groupScheduleArr[time] = 'empty';\n    }\n    if (numDay == 2) {\n      if (memberArr[1].availability[time]) {\n        //if black tent, add next available person\n        groupScheduleArr[time] += ' ' + memberArr[1].name;\n        memberArr[1].shifts[time] = true;\n        memberArr[1].hours++;\n      } else if (!memberArr[1].availability[time]) {\n        groupScheduleArr[time] += ' ' + 'empty';\n      }\n    }\n    prevMember1 = memberArr[0]; //set previous variables to current block holders before iterating again\n    prevMember2 = memberArr[1];\n  } //end of large for loop\n\n  let equalHours;\n  for (let i = 0; i < memberArr.length; i++) {\n    //print hours to check for equal hours\n    if (i == 0) equalHours = memberArr[0].name + ' ' + memberArr[0].hours + ' | ';\n    else equalHours += memberArr[i].name + ' ' + memberArr[i].hours + ' | ';\n    ////console.log(memberArr[i].name, memberArr[i].hours);\n  }\n  //console.log(equalHours);\n  //});\n\n  //to update the number of scheduled hours and shifts for each member\n  for (let i = 0; i < memberArr.length; i++) {\n    firebase\n      .firestore()\n      .collection('groups') //UPDATE THIS TO 'groups' in real cases ******!!!\n      //.collection('groupsTest')\n      .doc(groupCode)\n      .collection('members')\n      .doc(memberArr[i].id)\n      .update({\n        scheduledHrs: memberArr[i].hours / 2,\n        shifts: memberArr[i].shifts,\n      });\n  }\n\n  //To update memberArr in group with their unique id and name that corresponds with the schedule\n  for (let index = 1; index < memberIDs.length; index++) {\n    memberIDs[index].color = colors[index];\n  }\n  //console.log(memberIDs);\n  firebase.firestore().collection('groups').doc(groupCode).update({\n    memberArr: memberIDs,\n  });\n  // firebase\n  //   .firestore()\n  //   .collection('groups') //UPDATE THIS TO 'groups' in real cases ******!!!\n  //   //.collection('groupsTest')\n  //   .doc(groupCode)\n  //   .collection('members')\n  //   .get()\n  //   .then((collSnap) => {\n  //     collSnap.forEach((doc) => {\n  //       let currId = doc.id;\n  //       let indexOfUser;\n  //       if (memberArr.some((e) => e.id === currId)) {\n  //         //if Name is in member array\n  //         indexOfUser = memberArr.findIndex((member) => member.id === currId);\n  //       }\n\n  //       //console.log( 'hours of ',currId,' is ', memberArr[indexOfUser].hours);\n\n  //       doc.ref.update({\n  //         scheduledHrs: memberArr[indexOfUser].hours / 2,\n  //       });\n  //     });\n  //     return collSnap;\n  //   });\n\n  // .then((collSnap) => {\n  //\n\n  // });\n\n  return groupScheduleArr; //return group schedule array\n\n  //FINAL ARRAY TAKES THE FORMAT OF:\n\n  //   ['member1 member2', 'member1 member2',  'member1 member2 member3 member4 member5 member6 member7 ...'] for black tent\n  //   ['member1 ', 'member1 ',  'member1 member2 member3 member4 member5 member6 '] for blue tent, etc\n  // index of array indicates the half hour block of the week\n  /* (ex.) Index 0 is sunday 12:00 - 12:30am\n              Index 165 is Wednesday 10:30-11:am\n                  Must do 165%48 = 3, so 4th day and 165%48 = 21 so 21st half hour (10:30am) */\n\n  //Helper Methods\n\n  //sorts member array by total hours in ascending order\n  //then sorts by availibility, people who are availible go first\n  function sortMembers(idx, array) {\n    array.sort((a, b) => a.hours - b.hours);\n    array.sort((a, b) => Number(b.availability[idx]) - Number(a.availability[idx]));\n  }\n}\n","import * as React from 'react';\nimport { ActivityIndicator, View } from 'react-native';\n\nimport { useTheme } from '../context/ThemeProvider';\n\nexport function LoadingIndicator() {\n  const { theme } = useTheme();\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: theme.background,\n      }}\n    >\n      <ActivityIndicator size='large' />\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, Text, TouchableOpacity, Image, Dimensions,} from 'react-native';\nimport { useTheme } from '../context/ThemeProvider';\nimport coachkangrymeme from '../assets/coachkangrymeme.jpg'\n\nconst window = Dimensions.get('window'); \n\nexport function ErrorPage({navigation}) {\n\n  const ratioImg = window.width*0.8 / 551;\n  const { theme } = useTheme();\n\n  return (\n    <View style={styles(theme).fill}>\n        <View style={{height: '20%', justifyContent: 'center'}}>\n            <Text style={styles(theme).infoText}>Sorry, Looks like an error occured.</Text>\n            <Text style={styles(theme).infoText}>Please return to the home page</Text>  \n        </View>\n        <View style = {{width:'100%', height: '50%', justifyContent: 'center'}}>\n          <Image\n            style={{\n              width: window.width*.8,\n              height: 448*ratioImg,\n              borderRadius: 20,\n              alignSelf: 'center',\n            }}\n            source={coachkangrymeme}\n          />\n        </View>\n        \n        <TouchableOpacity\n            style ={styles(theme).returnBtn}\n            onPress = {()=> navigation.navigate('Home')}\n        >\n            <Text style={{color:'white', fontSize: 25, fontWeight: '700'}}>Return Home</Text>\n        </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = (theme) =>\nStyleSheet.create({\n  fill: {\n    flex: 1,\n    //justifyContent: 'space-evenly',\n    alignItems: 'center',\n    backgroundColor: theme.backgroundColor,\n  },\n  infoText:{\n    fontSize: 20,\n    fontWeight: '600',\n    marginVertical: 6,\n  },\n  returnBtn: {\n    backgroundColor: theme.primary,\n    width: '90%',\n    height: '7%',\n    marginTop: '20%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 15,\n  },\n});","import React, { Component } from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity, SafeAreaView } from 'react-native';\nimport Modal from 'react-native-modal';\nimport { useTheme } from '../context/ThemeProvider';\n\n/**\n * Parent Function for ActionSheet Modal component\n *\n * @param {function} toggleModal -- if cancelButton is true, set parameter to toggleModal function\n * @param {number} height -- vertical size of modal\n * @param {color} backgroundColor -- background color of modal\n * @param {boolean} swipeDown -- if you want the modal to be swipeable\n *      * would recommend false if modal has scrollable components such as a picker\n *      * if true, must add onSwipeComplete prop to the modal\n * @param {string} userStyle -- options: ('dark' | 'light') background color of modal and text color\n * @param {boolean} cancelButton  -- if a cancel button should be added to the modal\n * @param {Component} children -- components inside modal component;\n *\n *\n * @param {props} props --\n *   **NOTE: must include normal modal props in the props of the Modal such as:\n *       isVisible={isModalVisible}\n *       onBackdropPress={() => setModalVisible(false)}\n *       onSwipeComplete = {toggleModal}\n *       ...\n * @returns Modal Component\n */\n\nconst ActionSheetModal = ({\n  toggleModal,\n  backgroundColor,\n  swipeDown = true,\n  height = 130,\n  userStyle,\n  cancelButton = false,\n  children,\n  ...props\n}) => {\n  {\n    const { theme } = useTheme();\n\n    //set up default styles for light and dark themes\n    let background;\n    userStyle == 'light' ? ((background = '#fff')) : ((background = '#565656'));\n\n    //overwrite dark|light theme background colors if defined\n    if (backgroundColor !== undefined) background = backgroundColor;\n\n    //Height of entire modal based on if cancel button is added or not\n    const adjustedHeight = cancelButton ? height + 110 : height + 30; //accounts for vertical margin and cancel button\n\n    return (\n      <Modal\n        style={styles(theme).BottomModalView}\n        swipeDirection={swipeDown ? ['down'] : null}\n        backdropTransitionOutTiming={0}\n        keyboardDismissMode={'on-drag'}\n        {...props}\n      >\n        <SafeAreaView style={{ width: '95%', alignSelf: 'center', height: adjustedHeight }}>\n          <View\n            style={[styles(theme).TopSectionView, { backgroundColor: background, height: height }]}\n          >\n            {children}\n          </View>\n          {cancelButton ? (\n            <TouchableOpacity\n              onPress={() => toggleModal()}\n              style={[styles(theme).CancelBtn, { backgroundColor: background}]}\n            >\n              <Text style={[styles(theme).CancelBtnText, { color: '#1988f8' }]}>Cancel</Text>\n            </TouchableOpacity>\n          ) : null}\n        </SafeAreaView>\n      </Modal>\n    );\n  }\n};\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    BottomModalView: {\n      margin: 0,\n      justifyContent: 'flex-end',\n    },\n    TopSectionView: {\n      //Style for top view of action sheet\n      width: '100%',\n      alignSelf: 'center',\n      alignItems: 'center',\n      justifyContent: 'space-evenly',\n      borderRadius: 20,\n      margin: 15,\n    },\n    CancelBtn: {\n      //style for Cancel Button\n      alignSelf: 'center',\n      width: '100%',\n      borderRadius: 15,\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: 65,\n      marginBottom: 15,\n    },\n    CancelBtnText: {\n      //style for text of Cancel Button\n      fontWeight: '700',\n      textAlign: 'center',\n      fontSize: 24,\n    },\n  });\n\nexport { ActionSheetModal };\n","import {useState} from 'react';\n\nexport function useRefreshByUser(refetch) {\n  const [isRefetchingByUser, setIsRefetchingByUser] = useState(false);\n\n  async function refetchByUser() {\n    setIsRefetchingByUser(true);\n    \n    try {\n      await refetch();\n    } finally {\n      setIsRefetchingByUser(false);\n    }\n  }\n\n  return {\n    isRefetchingByUser,\n    refetchByUser,\n  };\n}\n","import React, { useState, useCallback, useRef } from 'react';\nimport { useFocusEffect } from '@react-navigation/native';\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  StyleSheet,\n  Image,\n  RefreshControl,\n  Dimensions,\n  FlatList,\n  SafeAreaView,\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Modal from 'react-native-modal';\nimport { IconButton } from 'react-native-paper';\nimport { useQuery } from 'react-query';\nimport { useDispatch } from 'react-redux';\nimport CountDown from 'react-native-countdown-component';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Svg, { Path } from 'react-native-svg';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport DukeBasketballLogo from '../assets/DukeBasketballLogo.png';\nimport { setGroupCode, setGroupName, setUserName, setTentType, setGroupRole, reset, resetCurrGroup } from '../redux/reducers/userSlice';\nimport { createGroupSchedule } from '../backend/CreateGroupSchedule';\nimport { createTestCases } from '../backend/firebaseAdd';\nimport { useTheme } from '../context/ThemeProvider';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { ErrorPage } from '../components/ErrorPage';\nimport { ActionSheetModal } from '../components/ActionSheetModal';\nimport { useRefreshByUser } from '../hooks/useRefreshByUser';\n\nconst window = Dimensions.get('window');\n\nexport default function Home({ navigation }) {\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [isCountVisible, setCountVisible] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [isReady, setIsReady] = useState(false);\n  const time = useRef(Math.round((new Date(2023, 1, 5).getTime() - Date.now()) / 1000));\n\n  const { theme } = useTheme();\n  const dispatch = useDispatch();\n\n  useFocusEffect(\n    useCallback(() => {\n      let mounted = true;\n      if (mounted) {\n        //dispatch(resetCurrGroup());\n        setIsDisabled(false);\n      }\n      return () => {\n        mounted = false;\n      };\n    }, [])\n  );\n\n  const { isLoading, isError, error, refetch, data } = useQuery(\n    ['groups', firebase.auth().currentUser.uid],\n    fetchGroups,\n    { initialData: [], onSuccess: () => setIsReady(true) }\n  );\n\n  const { isRefetchingByUser, refetchByUser } = useRefreshByUser(refetch);\n\n  async function fetchGroups() {\n    let data;\n\n    await firebase\n      .firestore()\n      .collection('users')\n      .doc(firebase.auth().currentUser.uid)\n      .get()\n      .then((doc) => {\n        let currGroup = doc.data().groupCode;\n        //console.log(\"Current user's groups\", currGroup);\n        data = currGroup.map((group) => ({\n          code: group.groupCode,\n          groupName: group.groupName,\n        }));\n      })\n      .catch((error) => {\n        console.error(error);\n        throw error;\n      });\n    return data;\n  }\n\n  async function updateRedux(groupName, groupCode) {\n    setIsDisabled(true);\n    let groupRole;\n    await firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .get()\n      .then((doc) => {\n        //console.log('tent type', doc.data().tentType);\n        dispatch(setTentType(doc.data().tentType));\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n    await firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .collection('members')\n      .doc(firebase.auth().currentUser.uid)\n      .get()\n      .then((memDoc) => {\n        groupRole = memDoc.data().groupRole;\n        dispatch(setUserName(memDoc.data().name));\n        dispatch(setGroupRole(groupRole));\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n\n    dispatch(setGroupCode(groupCode));\n    dispatch(setGroupName(groupName));\n    try {\n      navigation.navigate('GroupInfo', {\n        //pass groupcode and group name parameters\n        groupCode: groupCode,\n        groupName: groupName,\n        groupRole: groupRole,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  function toggleModal() {\n    setModalVisible(!isModalVisible);\n  }\n\n  function toggleCount() {\n    setCountVisible(!isCountVisible);\n  }\n\n  const EmptyGroup = () => {\n    return (\n      <View\n        style={[\n          styles(theme).listItem,\n          styles(theme).shadowProp,\n          { flexDirection: 'row', justifyContent: 'left', opacity: 0.5, width: '60%', height: '10%', marginRight: 50 },\n        ]}\n      >\n        <Image source={DukeBasketballLogo} style={styles(theme).image} />\n        <View style={{ flexDirection: 'column', width: '70%', justifyContent: 'space-between' }}>\n          <View style={{ backgroundColor: theme.grey5, width: '80%', height: '50%', borderRadius: 15 }} />\n          <View style={{ backgroundColor: theme.grey3, width: '50%', height: '30%', borderRadius: 15 }} />\n        </View>\n      </View>\n    );\n  };\n\n  const Arrow = (props) => (\n    <Svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 700 700' {...props}>\n      <Path\n        fill='#3a3b3c'\n        d='M423.06 204.3v-68.762l144.13 109.09-141.49 113.06-1.984-50.91c-86.613-13.223-217.52 31.734-291.57 117.02 37.023-124.3 103.14-223.47 290.91-219.5z'\n        fillRule='evenodd'\n      />\n    </Svg>\n  );\n\n  //const for list Items of Groups List\n  const Group = ({ groupName, groupCode }) => (\n    <TouchableOpacity\n      onPress={() => updateRedux(groupName, groupCode)}\n      style={[styles(theme).listItem, styles(theme).shadowProp]}\n      disabled={isDisabled}\n    >\n      <View style={{ flexDirection: 'row', justifyContent: 'left' }}>\n        <Image source={DukeBasketballLogo} style={styles(theme).image} />\n        <View style={{ flexDirection: 'column' }}>\n          <Text style={[styles(theme).listText, { fontSize: 20, color: theme.grey1 }]}>{groupName}</Text>\n          <Text style={[styles(theme).listText, { color: theme.grey4 }]}>{groupCode}</Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n\n  //for rendering list items of Groups\n  const renderGroup = ({ item }) => {\n    return <Group groupName={item.groupName} groupCode={item.code} />;\n  };\n\n  if (isLoading || !isReady) {\n    return <LoadingIndicator />;\n  }\n  if (isError) {\n    return <ErrorPage navigation={navigation} />;\n  }\n  return (\n    <View style={styles(theme).startContainer}>\n      <View style={styles(theme).topBanner}>\n        <Text style={styles(theme).topText}>Welcome to Krzyzewskiville!</Text>\n        <IconButton\n          icon='cog-outline'\n          color={theme.grey1}\n          size={25}\n          onPress={() => navigation.navigate('StackNavigator')}\n          style={{ marginRight: 0 }}\n        />\n      </View>\n\n      <View\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          width: '90%',\n          alignItems: 'center',\n          marginBottom: 5,\n        }}\n      >\n        <Text style={styles(theme).groupText}>Groups</Text>\n        <TouchableOpacity onPress={toggleModal}>\n          <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n            <Icon name='plus-circle-outline' color={theme.primary} size={20} />\n            <Text\n              style={[\n                styles(theme).groupText,\n                {\n                  fontSize: 16,\n                  fontWeight: '700',\n                  color: theme.primary,\n                  marginLeft: 4,\n                },\n              ]}\n            >\n              Add Group\n            </Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n\n      <SafeAreaView style={{ width: '100%', height: '60%' }}>\n        {data.length == 0 ? (\n          <View style={{ flex: 1, justifyContent: 'start', alignItems: 'center', paddingTop: '10%' }}>\n            <View\n              style={{\n                position: 'absolute',\n                height: 80,\n                width: 80,\n                transform: [{ rotateX: '180deg' }, { rotate: '90deg' }],\n                right: '10%',\n                top: '0%',\n              }}\n            >\n              <Arrow />\n            </View>\n            <EmptyGroup />\n            <EmptyGroup />\n            <EmptyGroup />\n            <Text style={{ color: theme.grey1, fontSize: 20, fontWeight: '700', marginTop: '10%' }}>\n              Create or Join a Group\n            </Text>\n          </View>\n        ) : (\n          <FlatList\n            data={data}\n            renderItem={renderGroup}\n            keyExtractor={(item) => item.code}\n            refreshControl={<RefreshControl enabled={true} refreshing={isRefetchingByUser} onRefresh={refetchByUser} />}\n            style={{ width: '100%', flexGrow: 1, height: '100%' /* , borderWidth:1 */ }}\n            showsVerticalScrollIndicator={false}\n          />\n        )}\n      </SafeAreaView>\n\n      {firebase.auth().currentUser.uid == 'LyenTwoXvUSGJvT14cpQUegAZXp1' ? <Text style={{textAlign: 'center'}}>**This is a demo account and is only meant for viewing</Text> : null}\n\n      {/* <View\n          style={{\n            width: '100%',\n            height: '20%',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              width: '85%',\n              height: '40%',\n              backgroundColor: theme.primary,\n              justifyContent: 'center',\n              alignItems: 'center',\n              borderRadius: 20,\n            }}\n            onPress={toggleCount}\n          >\n            <Text style={{ fontSize: 26, fontWeight: '700', color: theme.text1 }}>Countdown to UNC</Text>\n          </TouchableOpacity>\n        </View> */}\n\n      <ActionSheetModal\n        isVisible={isCountVisible}\n        onBackdropPress={toggleCount}\n        swipeDown={false}\n        height={200}\n        userStyle={'light'}\n      >\n        <View style={{ justifyContent: 'center', alignItems: 'center', flex: 1, width: '100%' }}>\n          <Text style={{ position: 'absolute', top: 0 }}>Countdown to UNC</Text>\n          <CountDown\n            size={30}\n            until={time.current}\n            onFinish={() => alert('Finished')}\n            digitStyle={{\n              backgroundColor: '#FFF',\n              borderWidth: 2,\n              borderColor: theme.primary,\n            }}\n            digitTxtStyle={{ color: theme.primary }}\n            timeLabelStyle={{ color: 'black', fontWeight: 'bold' }}\n            separatorStyle={{\n              color: theme.primary,\n              alignSelf: 'center',\n              flex: 1,\n              paddingTop: 15,\n              justifyContent: 'center',\n            }}\n            showSeparator={true}\n          />\n        </View>\n      </ActionSheetModal>\n\n      <Modal\n        isVisible={isModalVisible}\n        onBackdropPress={() => setModalVisible(false)}\n        backdropTransitionOutTiming={0}\n        keyboardDismissMode={'on-drag'}\n        //customBackdrop={<View style={{ flex: 1 }} />}\n      >\n        <SafeAreaView style={styles(theme).popUp}>\n          <Text style={styles(theme).popUpHeader}>Add Group</Text>\n          <TouchableOpacity\n            onPress={() => {\n              toggleModal();\n              navigation.navigate('JoinGroup');\n            }}\n            style={{ width: '100%', alignSelf: 'center' }}\n          >\n            <View\n              style={[\n                styles(theme).popButton,\n                {\n                  borderBottomLeftRadius: 3,\n                  borderBottomRightRadius: 3,\n                  borderTopLeftRadius: 11,\n                  borderTopRightRadius: 11,\n                },\n              ]}\n            >\n              <Icon name='account-plus-outline' color={'white'} size={20} style={{ marginLeft: 10 }} />\n              <Text style={styles(theme).buttonText}>Join Group</Text>\n            </View>\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            onPress={() => {\n              toggleModal();\n              navigation.navigate('CreateGroup');\n            }}\n            style={{ width: '100%', alignSelf: 'center' }}\n          >\n            <View\n              style={[\n                styles(theme).popButton,\n                {\n                  borderBottomLeftRadius: 11,\n                  borderBottomRightRadius: 11,\n                  borderTopLeftRadius: 3,\n                  borderTopRightRadius: 3,\n                },\n              ]}\n            >\n              <Icon name='account-circle-outline' color={'white'} size={20} style={{ marginLeft: 10 }} />\n              <Text style={styles(theme).buttonText}>Create New Group</Text>\n            </View>\n          </TouchableOpacity>\n        </SafeAreaView>\n      </Modal>\n      {/* <Button\n          title='Create Group Schedule'\n          onPress={() =>\n            createGroupSchedule('sX5bkvgE', 'Black').then((groupSchedule) => {\n              firebase\n                .firestore()\n                .collection('groups')\n                .doc('sX5bkvgE')\n                .update({\n                  groupSchedule: groupSchedule,\n                })\n                .then(() => console.log('update successfull'))\n                .catch((error) => console.log(error));\n              console.log(groupSchedule);\n            })\n          }\n        /> */}\n      {/* <Button\n              title=\"Add test case\"\n              onPress={() => createTestCases()}\n            /> */}\n    </View>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    startContainer: {\n      //Overarching Container\n      flexDirection: 'column',\n      flex: 1,\n      //backgroundColor: theme.background,\n      backgroundColor: '#f5f7fa',\n      alignItems: 'center',\n      marginTop: '0%',\n    },\n    topBanner: {\n      //for the top container holding \"welcome to k-ville\"\n      alignItems: 'center',\n      marginTop: 50,\n      marginBottom: 35,\n      width: '100%',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      paddingHorizontal: '5%',\n    },\n    topText: {\n      //\"welcome to kville\" text\n      textAlign: 'left',\n      fontWeight: '800',\n      fontSize: 28,\n      color: theme.grey1,\n      width: '70%',\n    },\n    groupText: {\n      //text for 'Groups' and '+ Add Group'\n      fontSize: 24,\n      fontWeight: '700',\n      color: theme.grey1,\n    },\n    popUp: {\n      //style for popup menu of add group\n      width: '90%',\n      height: 160,\n      backgroundColor: theme.secondary,\n      alignSelf: 'center',\n      alignItems: 'center',\n      borderRadius: 20,\n      margin: 15,\n    },\n    popUpHeader: {\n      //style for text at the top of the popup\n      fontWeight: '600',\n      color: theme.text1,\n      height: 40,\n      width: '89%',\n      marginTop: 15,\n      textAlign: 'center',\n      fontSize: 24,\n    },\n    popButton: {\n      //style for the buttons in the popup\n      flexDirection: 'row',\n      width: '85%',\n      height: 40,\n      marginVertical: 2,\n      alignSelf: 'center',\n      backgroundColor: theme.tertiary,\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n    },\n    buttonText: {\n      //popup buttons' text\n      fontSize: 16,\n      color: theme.text1,\n      textAlign: 'left',\n      marginLeft: 15,\n    },\n    image: {\n      //for the duke basketball logos\n      width: 45,\n      height: 39,\n      alignSelf: 'center',\n      marginLeft: 10,\n      marginRight: 20,\n    },\n\n    listItem: {\n      //for the items for each group\n      //backgroundColor: theme.grey3,\n      backgroundColor: '#fff',\n      padding: 8,\n      marginVertical: 7,\n      borderRadius: 10,\n      alignSelf: 'center',\n      borderWidth: 0.3,\n      borderColor: '#d8d9dc',\n      //width: window.width * 0.9,\n      width: '90%',\n      justifyContent: 'flex-start',\n    },\n    listText: {\n      //for the text inside the group cards\n      fontSize: 15,\n      fontWeight: '500',\n      color: theme.text2,\n    },\n    shadowProp: {\n      //shadow for the group cards\n      shadowColor: '#171717',\n      shadowOffset: { width: -2, height: 4 },\n      shadowOpacity: 0.2,\n      shadowRadius: 5,\n      elevation: 20,\n    },\n  });\n","//UUID generator, used for group codes\n// import firebase from \"firebase/compat/app\";\n// import \"firebase/compat/auth\";\n// import \"firebase/compat/firestore\";\n\n\nexport function generateGroupCode(digits) {\n  let uuid = generateUUID(digits);\n  // firebase\n  //   .firestore()\n  //   .collection(\"groups\")\n  //   .doc(uuid)\n  //   .get()\n  //   .then((doc) => {\n  //     console.log(doc.exists);\n  //     if (!doc.exists) {\n  //       return uuid;\n  //     }\n  //   });\n  return uuid;\n}\n\nconst generateUUID = (digits) => {\n  let str = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVXZ\";\n  let uuid = [];\n  for (let i = 0; i < digits; i++) {\n    uuid.push(str[Math.floor(Math.random() * str.length)]);\n  }\n  return uuid.join(\"\");\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useFocusEffect } from '@react-navigation/native';\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  StyleSheet,\n  TextInput,\n  Dimensions,\n  Image,\n  KeyboardAvoidingView,\n  Platform,\n  SafeAreaView,\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useQueryClient } from 'react-query';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport { generateGroupCode } from '../backend/GroupCode';\nimport {\n  setCurrentUser,\n  setGroupCode,\n  setGroupName,\n  setUserName,\n  setTentType,\n  setGroupRole,\n} from '../redux/reducers/userSlice';\nimport { useTheme } from '../context/ThemeProvider';\nimport coachKLogo from '../assets/coachKLogo.png';\nimport { ActionSheetModal } from '../components/ActionSheetModal';\nimport { setSnackMessage, toggleSnackBar } from '../redux/reducers/snackbarSlice';\n\n//length of the group code\nconst GROUP_CODE_LENGTH = 8;\n\nlet availability = new Array(336);\navailability.fill(true);\n\nconst window = Dimensions.get('window');\n\nexport default function CreateGroup({ navigation }) {\n  const [group, setGroup] = useState({\n    groupName: '',\n    tentType: '',\n    groupCode: '',\n    userName: '',\n    tentType: 'Select Tent Type',\n  });\n  const [isTentChangeVisible, setTentChangeVisible] = useState(false);\n  const [dimensions, setDimensions] = useState({ window });\n  const { theme } = useTheme();\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n\n  const groupRole = 'Creator';\n\n  const userRef = firebase.firestore().collection('users').doc(firebase.auth().currentUser.uid);\n  let groupRef;\n\n  const userName = useSelector((state) => state.user.currentUser.username);\n\n  function toggleTentChange() {\n    setTentChangeVisible(!isTentChangeVisible);\n  }\n\n  useEffect(() => {\n    const subscription = Dimensions.addEventListener('change', ({ window }) => {\n      setDimensions({ window });\n    });\n    return () => subscription?.remove();\n  });\n\n  //on first render sets name to user's registered name\n  useFocusEffect(\n    useCallback(() => {\n      let mounted = true;\n      if (mounted) {\n        setGroup({\n          ...group,\n          groupCode: generateGroupCode(GROUP_CODE_LENGTH),\n          userName: userName,\n        });\n      }\n      return () => {\n        mounted = false;\n      };\n    }, [])\n  );\n\n  //Create group function\n  async function onCreateGroup() {\n    if (firebase.auth().currentUser.uid == 'LyenTwoXvUSGJvT14cpQUegAZXp1') {\n      dispatch(setSnackMessage('This is a demo account'));\n      dispatch(toggleSnackBar());\n      return;\n    }\n    if (group.groupName == '') {\n      dispatch(toggleSnackBar());\n      dispatch(setSnackMessage('Enter group name'));\n      return;\n    }\n    if (group.tentType == 'Select Tent Type') {\n      dispatch(toggleSnackBar());\n      dispatch(setSnackMessage('Select tent type'));\n      return;\n    }\n    if (group.userName == '') {\n      dispatch(toggleSnackBar());\n      dispatch(setSnackMessage('Enter a nickname'));\n      return;\n    }\n    groupRef = firebase.firestore().collection('groups').doc(group.groupCode);\n    //creates/adds to groups collection, adds doc with generated group code and sets name and tent type\n    groupRef.set({\n      name: group.groupName,\n      tentType: group.tentType,\n      groupSchedule: [],\n      memberArr: [],\n      previousSchedule: [],\n      previousMemberArr: [],\n    }).catch((error)=>{\n      console.error(error);\n    });\n    //adds current user to collection of members in the group\n    groupRef.collection('members').doc(firebase.auth().currentUser.uid).set({\n      groupRole: groupRole,\n      name: group.userName,\n      inTent: false,\n      availability: availability,\n      scheduledHrs: 0,\n      shifts: [],\n    }).catch((error)=>{\n      console.error(error);\n    });\n    //updates current user's inGroup and groupCode states\n    userRef.update({\n      groupCode: firebase.firestore.FieldValue.arrayUnion({\n        groupCode: group.groupCode,\n        groupName: group.groupName,\n      }),\n    }).catch((error)=>{\n      console.error(error);\n    });\n    dispatch(setGroupCode(group.groupCode));\n    dispatch(setGroupName(group.groupName));\n    dispatch(setUserName(group.userName));\n    dispatch(setTentType(group.tentType));\n    dispatch(setGroupRole('Creator'));\n    await userRef.get().then((snapshot) => {\n      if (snapshot.exists) {\n        dispatch(setCurrentUser(snapshot.data()));\n      } else {\n        console.log('does not exist');\n      }\n      return snapshot;\n    });\n    \n    \n    queryClient.invalidateQueries(['groups', firebase.auth().currentUser.uid]);\n\n    navigation.navigate('GroupInfo', {\n      groupCode: group.groupCode,\n      groupName: group.groupName,\n      groupRole: 'Creator',\n    });\n  }\n\n  return (\n    <View style={{ flex: 1, backgroundColor: theme.background }}>\n      <SafeAreaView style={{ flex: 1 }}>\n        <KeyboardAvoidingView behavior='padding' style={{ flex: 1 }}>\n          <View style={styles(theme).groupContainer}>\n            <View style={styles(theme).groupHeader}>\n              <Text style={styles(theme).btnTxt} onPress={() => navigation.goBack()}>\n                Cancel\n              </Text>\n              <Text style={{ fontWeight: '500', fontSize: 20 }}>Create Group</Text>\n              <TouchableOpacity\n                onPress={() => {\n                  onCreateGroup();\n                  console.log(group.groupCode);\n                  console.log(groupRole);\n                }}\n              >\n                <Text style={styles(theme).btnTxt}>Create</Text>\n              </TouchableOpacity>\n            </View>\n\n            <View style={{ width: '90%' }}>\n              <Text style={styles(theme).headerText}>Group Name</Text>\n            </View>\n            <TextInput\n              style={styles(theme).textInput}\n              //autoFocus={true}\n              placeholder='Enter Group Name'\n              value={group.groupName}\n              maxLength={28}\n              onChangeText={(groupName) => setGroup({ ...group, groupName: groupName })}\n              autoCorrect={false}\n            />\n\n            <Text style={[styles(theme).headerText, { marginTop: 20 }]}>Group Code</Text>\n            <View\n              style={[\n                styles(theme).textInput,\n                {\n                  backgroundColor: theme.background,\n                  height: 60,\n                  width: '90%',\n                  justifyContent: 'center',\n                },\n              ]}\n            >\n              <Text selectable={true} style={{ textAlign: 'center', fontSize: 26, fontWeight: '700' }}>\n                {group.groupCode}\n              </Text>\n            </View>\n\n            <Text style={[styles(theme).headerText, { marginTop: 20 }]}>Tent Type</Text>\n            <TouchableOpacity onPress={toggleTentChange} style={styles(theme).selectTent}>\n              <Text style={{ textAlign: 'center', fontSize: 20, fontWeight: '400', color: theme.grey1 }}>\n                {group.tentType}\n              </Text>\n              <Icon name='chevron-down' color={theme.icon2} size={30} style={{ marginLeft: 10 }} />\n            </TouchableOpacity>\n\n            <Text style={[styles(theme).headerText, { marginTop: 20 }]}>Nickname</Text>\n            <TextInput\n              style={styles(theme).textInput}\n              value={group.userName}\n              placeholder='Enter Nickname'\n              maxLength={11}\n              onChangeText={(userName) =>\n                setGroup({\n                  ...group,\n                  userName: userName\n                    .normalize('NFD')\n                    .replace(/[\\u0300-\\u036f]/g, '')\n                    .replace(/\\s+/g, '')\n                    .replace(/[^a-z0-9]/gi, ''),\n                })\n              }\n              clearTextOnFocus={true}\n            />\n          </View>\n\n          <ActionSheetModal\n            isVisible={isTentChangeVisible}\n            onBackdropPress={toggleTentChange}\n            onSwipeComplete={toggleTentChange}\n            toggleModal={toggleTentChange}\n            cancelButton={true}\n            height={180}\n            userStyle={'light'}\n          >\n            <TouchableOpacity\n              onPress={() => {\n                setGroup({ ...group, tentType: 'Black' });\n                toggleTentChange();\n              }} //change to new tent type\n              style={styles(theme).tentChangeListItem}\n            >\n              <Text style={styles(theme).modalText}>Black</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={() => {\n                setGroup({ ...group, tentType: 'Blue' });\n                toggleTentChange();\n              }} //change to new tent type\n              style={styles(theme).tentChangeListItem}\n            >\n              <Text style={styles(theme).modalText}>Blue</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={() => {\n                setGroup({ ...group, tentType: 'White' });\n                toggleTentChange();\n              }} //change to new tent type\n              style={[styles(theme).tentChangeListItem, { borderBottomWidth: 0 }]}\n            >\n              <Text style={styles(theme).modalText}>White</Text>\n            </TouchableOpacity>\n          </ActionSheetModal>\n        </KeyboardAvoidingView>\n      </SafeAreaView>\n\n      <View\n        style={{\n          /* position: \"absolute\",\n          bottom: 0, */\n          marginTop: 'auto',\n          width: '100%',\n        }}\n      >\n        <View\n          style={[\n            styles(theme).triangle,\n            {\n              borderRightWidth: dimensions.window.width,\n              borderTopWidth: dimensions.window.height / 6,\n            },\n          ]}\n        ></View>\n        <Image\n          source={coachKLogo}\n          style={{\n            position: 'absolute',\n            marginVertical: 10,\n            zIndex: 1,\n            height: 129,\n            width: 113,\n            alignSelf: 'center',\n          }}\n        />\n        <View\n          style={{\n            width: '100%',\n            height: dimensions.window.height / 15,\n            backgroundColor: theme.primary,\n          }}\n        ></View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    groupContainer: {\n      flexDirection: 'column',\n      flex: 1,\n      alignItems: 'center',\n      backgroundColor: theme.background,\n    },\n    groupHeader: {\n      flexDirection: 'row',\n      width: '94%',\n      height: '10%',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      marginBottom: 20,\n    },\n    backgroundImage: {\n      flex: 1,\n      alignItems: 'center',\n      flexDirection: 'column',\n      height: '100%',\n      width: '100%',\n      resizeMode: 'cover',\n    },\n    topBanner: {\n      //for the top container holding \"create\" button\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      flexDirection: 'row',\n      marginTop: 10,\n      marginBottom: 12,\n      width: '90%',\n      //borderWidth: 2\n    },\n    headerText: {\n      //text for 'headers of each input'\n      textAlign: 'left',\n      width: '90%',\n      fontSize: 20,\n      marginBottom: 10,\n      fontWeight: '700',\n      color: theme.grey1,\n    },\n    textContainer: {\n      height: '70%',\n      width: '80%',\n      marginVertical: 50,\n    },\n    text: {\n      color: theme.text1,\n      fontSize: 22,\n      fontWeight: '700',\n    },\n    centerText: {\n      color: theme.text1,\n      fontSize: 36,\n      fontWeight: '700',\n      textAlign: 'center',\n    },\n    textInput: {\n      backgroundColor: theme.background,\n      padding: 10,\n      width: '90%',\n      fontSize: 20,\n      fontWeight: '400',\n      //textAlign: 'center',\n      borderRadius: 8,\n      borderColor: theme.grey2,\n      borderWidth: 2,\n    },\n    selectTent: {\n      width: '90%',\n      height: 45,\n      borderRadius: 8,\n      borderWidth: 2,\n      borderColor: theme.grey2,\n      backgroundColor: theme.background,\n      justifyContent: 'center',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      paddingHorizontal: 10,\n    },\n    tentChangeListItem: {\n      //Style of an item in the member tentChange modal (for creator only)\n      flexDirection: 'row',\n      height: '33%',\n      width: '95%',\n      justifyContent: 'center',\n      alignSelf: 'center',\n      alignItems: 'center',\n      borderBottomWidth: 1,\n      borderColor: '#cfcfcf',\n    },\n    modalText: {\n      //style of text within the modals (member info text and tentChange text)\n      fontSize: 18,\n      fontWeight: '500',\n      color: theme.text2,\n    },\n    picker: {\n      width: '90%',\n      height: '20%',\n      //borderWidth: 2,\n    },\n    pickerItem: {\n      height: '100%',\n    },\n    btnTxt: {\n      fontSize: 18,\n      color: theme.primary,\n      fontWeight: '600',\n    },\n    triangle: {\n      height: 0,\n      width: 0,\n      borderTopWidth: 150,\n      borderRightColor: theme.primary,\n      borderTopColor: 'transparent',\n      transform: [{ scaleX: -1 }],\n    },\n  });\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useFocusEffect } from '@react-navigation/native';\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  StyleSheet,\n  TextInput,\n  Image,\n  Dimensions,\n  KeyboardAvoidingView,\n  SafeAreaView,\n} from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useQueryClient } from 'react-query';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport {\n  setCurrentUser,\n  setGroupCode,\n  setGroupName,\n  setUserName,\n  setTentType,\n  setGroupRole,\n} from '../redux/reducers/userSlice';\nimport { useTheme } from '../context/ThemeProvider';\nimport coachKLogo from '../assets/coachKLogo.png';\nimport { setSnackMessage, toggleSnackBar } from '../redux/reducers/snackbarSlice';\n\nlet availability = new Array(336);\navailability.fill(true);\n\nconst window = Dimensions.get('window');\n\nexport default function JoinGroup({ navigation }) {\n  const [groupCode, setInputGroupCode] = useState('');\n  const [name, setName] = useState('');\n  const [dimensions, setDimensions] = useState({ window });\n  const { theme } = useTheme();\n  let groupName = '';\n\n  const queryClient = useQueryClient();\n  const dispatch = useDispatch();\n  const userName = useSelector((state) => state.user.currentUser.username);\n\n  useEffect(() => {\n    const subscription = Dimensions.addEventListener('change', ({ window }) => {\n      setDimensions({ window });\n    });\n    return () => subscription?.remove();\n  });\n\n  useFocusEffect(\n    useCallback(() => {\n      let mounted = true;\n\n      if (mounted) {\n        console.log('reset username ' + userName);\n        setName(userName);\n        setInputGroupCode('');\n      }\n      return () => {\n        mounted = false;\n      };\n    }, [])\n  );\n\n  async function onJoinGroup(navigation) {\n    if (firebase.auth().currentUser.uid == 'LyenTwoXvUSGJvT14cpQUegAZXp1') {\n      dispatch(setSnackMessage('This is a demo account'));\n      dispatch(toggleSnackBar());\n      return;\n    }\n    console.log('group code', groupCode);\n    if (groupCode == '') {\n      dispatch(setSnackMessage('Enter group code'));\n      dispatch(toggleSnackBar());\n      return;\n    }\n    if (name == '') {\n      dispatch(setSnackMessage('Enter a nickname'));\n      dispatch(toggleSnackBar());\n      return;\n    }\n    const groupRef = firebase.firestore().collection('groups').doc(groupCode);\n    const userRef = firebase.firestore().collection('users').doc(firebase.auth().currentUser.uid);\n\n    //checks to make sure entered group code exists\n    await groupRef.get().then(async (docSnapshot) => {\n      console.log('Group exists: ', docSnapshot.exists);\n      if (docSnapshot.exists) {\n        //Max 12 people in a group\n        let result = await groupRef\n          .collection('members')\n          .get()\n          .then((collSnap) => {\n            console.log(collSnap.size);\n            if (collSnap.size == 12) {\n              console.log('Group is full');\n              dispatch(toggleSnackBar());\n              dispatch(setSnackMessage('Group already full'));\n              return 'full';\n            }\n          });\n        console.log(result);\n        if (result == 'full') {\n          return;\n        }\n        result = await groupRef\n          .collection('members')\n          .doc(firebase.auth().currentUser.uid)\n          .get()\n          .then((doc) => {\n            if (doc.exists) {\n              dispatch(setSnackMessage('Already joined this group'));\n              dispatch(toggleSnackBar());\n              return 'exists';\n            }\n          });\n        if (result == 'exists') {\n          return;\n        }\n\n        groupRef\n          .collection('members')\n          .where('name', '==', name)\n          .get()\n          .then(async (snapshot) => {\n            if (snapshot.empty) {\n              groupName = docSnapshot.data().name;\n              dispatch(setGroupCode(groupCode));\n              dispatch(setUserName(name));\n              dispatch(setGroupName(groupName));\n              dispatch(setTentType(docSnapshot.data().tentType));\n              dispatch(setGroupRole('Member'));\n              //updates current user's info\n              await userRef.update({\n                groupCode: firebase.firestore.FieldValue.arrayUnion({\n                  groupCode: groupCode,\n                  groupName: docSnapshot.data().name,\n                }),\n              });\n              //adds current user to member list\n              await groupRef.collection('members').doc(firebase.auth().currentUser.uid).set({\n                groupRole: 'Member',\n                name: name,\n                inTent: false,\n                availability: availability,\n                scheduledHrs: 0,\n                shifts: [],\n              });\n              await userRef.get().then((snapshot) => {\n                dispatch(setCurrentUser(snapshot.data()));\n              });\n\n              queryClient.invalidateQueries(['groups', firebase.auth().currentUser.uid]);\n              navigation.navigate('GroupInfo', {\n                groupCode: groupCode,\n                groupName: groupName,\n                groupRole: 'Member',\n              });\n            } else {\n              dispatch(toggleSnackBar());\n              dispatch(setSnackMessage('Name already taken'));\n            }\n          });\n        return;\n      } else {\n        console.log('No group exists');\n        dispatch(toggleSnackBar());\n        dispatch(setSnackMessage(\"Invalid group code: group doesn't exist\"));\n        return;\n      }\n    });\n  }\n\n  return (\n    <View style={{ flex: 1, backgroundColor: theme.background }}>\n      <SafeAreaView style={{ flex: 1 }}>\n        <KeyboardAvoidingView behavior='padding' style={{ flex: 1 }}>\n          <View style={styles(theme).container}>\n            <View style={styles(theme).header}>\n              <Text style={styles(theme).buttonText} onPress={() => navigation.goBack()}>\n                Cancel\n              </Text>\n              <Text style={{ fontWeight: '500', fontSize: 20 }}>Join Group</Text>\n              <TouchableOpacity\n                onPress={() => {\n                  onJoinGroup(navigation);\n                }}\n              >\n                <Text style={styles(theme).buttonText}>Join</Text>\n              </TouchableOpacity>\n            </View>\n\n            <View\n              style={{\n                flexDirection: 'row',\n                width: '90%',\n                marginBottom: 10,\n              }}\n            >\n              <Text style={styles(theme).groupText}>Group Code</Text>\n            </View>\n\n            <TextInput\n              style={styles(theme).textInput}\n              //autoFocus={true}\n              onChangeText={(code) => setInputGroupCode(code.trim())}\n              value={groupCode}\n              placeholder='Enter Group Code'\n              autoCorrect={false}\n            />\n\n            <View\n              style={{\n                flexDirection: 'row',\n                width: '90%',\n                marginBottom: 10,\n                marginTop: 55,\n              }}\n            >\n              <Text style={styles(theme).groupText}>Nickname</Text>\n            </View>\n            <TextInput\n              style={styles(theme).textInput}\n              value={name}\n              placeholder='Enter Nickname'\n              maxLength={11} //Maximize username length to 11 characters\n              onChangeText={(name) =>\n                setName(\n                  name\n                    .normalize('NFD')\n                    .replace(/[\\u0300-\\u036f]/g, '')\n                    .replace(/\\s+/g, '')\n                    .replace(/[^a-z0-9]/gi, '')\n                )\n              }\n              clearTextOnFocus={true}\n              autoCorrect={false}\n            />\n          </View>\n        </KeyboardAvoidingView>\n      </SafeAreaView>\n      <View\n        style={{\n          marginTop: 'auto',\n          width: '100%',\n          backgroundColor: theme.background,\n        }}\n      >\n        <View\n          style={[\n            styles(theme).triangle,\n            {\n              borderRightWidth: dimensions.window.width,\n              borderTopWidth: dimensions.window.height / 5,\n            },\n          ]}\n        ></View>\n        <Image\n          source={coachKLogo}\n          style={{\n            position: 'absolute',\n            marginVertical: 20,\n            zIndex: 1,\n            height: 161,\n            width: 140,\n            alignSelf: 'center',\n          }}\n        />\n        <View\n          style={{\n            width: '100%',\n            height: dimensions.window.height / 10,\n            backgroundColor: theme.primary,\n          }}\n        ></View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    container: {\n      flexDirection: 'column',\n      flex: 1,\n      backgroundColor: theme.background,\n      alignItems: 'center',\n      marginTop: '0%',\n    },\n    header: {\n      flexDirection: 'row',\n      width: '94%',\n      height: '10%',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      marginBottom: 20,\n    },\n    textInput: {\n      backgroundColor: theme.background,\n      padding: 10,\n      width: '90%',\n      fontSize: 20,\n      fontWeight: '500',\n      //textAlign: 'center',\n      borderRadius: 8,\n      borderColor: theme.grey2,\n      borderWidth: 2,\n    },\n    groupText: {\n      //text for 'Groups' and '+ Add Group'\n      //fontFamily: \"sans-serif\",\n      width: '90%',\n      fontSize: 20,\n      fontWeight: '700',\n      color: theme.grey1,\n    },\n    buttonText: {\n      fontSize: 18,\n      color: theme.primary,\n      fontWeight: '600',\n      //textAlign: 'center',\n    },\n    shadowProp: {\n      //shadow for the text input and image\n      shadowColor: '#171717',\n      shadowOffset: { width: -2, height: 4 },\n      shadowOpacity: 0.2,\n      shadowRadius: 5,\n      elevation: 20,\n    },\n    triangle: {\n      height: 0,\n      width: 0,\n      borderTopWidth: 150,\n      borderRightColor: theme.primary,\n      borderTopColor: 'transparent',\n      transform: [{ scaleX: -1 }],\n    },\n  });\n","import React, { createContext, useContext } from 'react';\nimport { StyleSheet, View, Text, SafeAreaView } from 'react-native';\nimport Modal from 'react-native-modal';\nimport { useTheme } from '../context/ThemeProvider';\n\nlet ModalContext = createContext();\n\n//Function for creating context for interior components\nfunction useModal() {\n  const context = useContext(ModalContext);\n  if (!context) {\n    throw new Error('useModal must be used in or within a Modal Component');\n  }\n  return context;\n}\n\n/** Parent function for BottomSheetModal\n *\n * @param {string (%) | number } height -- percent size of modal (or pixel size)\n * @param {color} color -- overwrite background color of modal from dark or light theme\n * @param {boolean} swipeDown -- if you want the modal to be swipeable\n *      * would recommend false if modal has scrollable components such as a picker\n *      * if true, must add onSwipeComplete prop to the modal\n * @param {string ('default' | 'small' | 'none') } barSize -- depending on the size of the modal, determine the size of toggle bar\n * @param {string} userStyle -- options: ('dark' | 'light') background color of modal and text color\n * @param {Component} children -- components inside modal component;\n *\n * @param {props} props --\n *   **NOTE: must include normal modal props in the props of the Modal such as:\n *       isVisible={isModalVisible}\n *       onBackdropPress={() => setModalVisible(false)}\n *       onSwipeComplete = {toggleModal}\n *       ...\n * @returns {Component} Modal Component\n */\n\nconst BottomSheetModal = ({\n  height = '50%',\n  color,\n  swipeDown = true,\n  barSize = 'default',\n  userStyle,\n  children,\n  ...props\n}) => {\n  {\n    const { theme } = useTheme();\n\n    //set up default styles for light and dark themes\n    let background, headerColor;\n    userStyle == 'light'\n      ? ((background = theme.background), (headerColor = 'black'))\n      : ((background = '#565656'), (headerColor = '#fff'));\n\n    //overwrite dark|light theme background colors if defined\n    if (color !== undefined) background = color;\n\n    return (\n      <ModalContext.Provider value={{ headerColor }}>\n        <Modal\n          style={styles(theme).BottomModalView}\n          swipeDirection= {swipeDown ? 'down' : null}\n          backdropTransitionOutTiming={0}\n          keyboardDismissMode={'on-drag'}\n          {...props}\n        >\n          <SafeAreaView style={[styles(theme).ModalContainer, { height: height, backgroundColor: background }]}>\n            {barSize == 'default' ? (\n              <View style={[styles(theme).modalBar, { backgroundColor: headerColor }]}></View>\n            ) : barSize == 'small' ? (\n              <View style={[styles(theme).modalSmallBar, { backgroundColor: headerColor }]}></View>\n            ) : null}\n\n            {children}\n          </SafeAreaView>\n        </Modal>\n      </ModalContext.Provider>\n    );\n  }\n};\n\n/**Component for adding a second bottom layer on modal\n *\n * @param {color} color -- background color of modal ;\n * @param {string ('default' | 'small') } size -- depending on the size of the modal, determine the size of second layer\n * @param {Component} children -- components inside bottom container component;\n *\n */\nconst ModalSecondContainer = ({ children, color, size = 'default' }) => {\n  let height, background;\n  {\n    size == 'default' ? (height = '85%') : (height = '70%');\n  }\n  const { theme } = useTheme();\n  let { headerColor } = useModal();\n  headerColor == 'black' ? (background = '#f5f5f5') : (background = '#757575');\n\n  //overwrite dark|light theme background colors if defined\n  if (color !== undefined) background = color;\n\n  return (\n    <View style={[styles(theme).ModalSecondaryView, { backgroundColor: background, height: height }]}>{children}</View>\n  );\n};\nBottomSheetModal.SecondContainer = ModalSecondContainer;\n\n/**Component for adding a top header\n *\n * @param {number} verticalMargin -- depending on the size of the modal, determine the margin of text\n * @param {number} fontSize -- depending on the size of the modal, determine the fontSize of text\n *\n * @param {string} children -- text of header;\n *\n * */\nconst ModalHeader = ({ children, verticalMargin = 10, fontSize = 20 }) => {\n  const { theme } = useTheme();\n  let { headerColor } = useModal();\n  return (\n    <Text\n      style={[styles(theme).ModalHeader, { marginVertical: verticalMargin, fontSize: fontSize, color: headerColor }]}\n    >\n      {children}\n    </Text>\n  );\n};\nBottomSheetModal.Header = ModalHeader;\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    BottomModalView: {\n      margin: 0,\n      justifyContent: 'flex-end',\n    },\n    ModalContainer: {\n      width: '100%',\n      height: '45%',\n      borderTopRightRadius: 30,\n      borderTopLeftRadius: 30,\n      alignItems: 'center',\n      justifyContent: 'space-between',\n    },\n    modalSmallBar: {\n      height: 2,\n      marginTop: 4,\n      width: '15%',\n      borderRadius: 25,\n      backgroundColor: 'white',\n    },\n    modalBar: {\n      height: 4,\n      marginTop: 8,\n      width: '22%',\n      borderRadius: 25,\n      backgroundColor: 'white', //theme.grey1,\n    },\n    ModalHeader: {\n      //style for text at the top of the popup\n      fontWeight: '700',\n      color: 'white',\n      textAlign: 'center',\n      fontSize: 20,\n    },\n    ModalSecondaryView: {\n      width: '100%',\n      height: '85%',\n      paddingHorizontal: 35,\n      paddingVertical: 20,\n      borderTopRightRadius: 40,\n      borderTopLeftRadius: 40,\n      marginBottom: 0,\n    },\n    ModalText: {\n      color: 'white',\n      marginVertical: 5,\n      textAlign: 'left',\n      fontSize: 16,\n    },\n  });\n\nexport { BottomSheetModal };\n","import React, { useState } from 'react';\nimport { Text, View, StyleSheet, TextInput, TouchableOpacity, SafeAreaView } from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { Snackbar } from 'react-native-paper';\nimport Modal from 'react-native-modal';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { useMutation, useQueryClient } from 'react-query';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport { setGroupName, setUserName, setTentType } from '../redux/reducers/userSlice';\nimport { useTheme } from '../context/ThemeProvider';\n//import { ConfirmationModal } from '../components/ConfirmationModal';\nimport { ActionSheetModal } from './ActionSheetModal';\nimport { setSnackMessage, toggleSnackBar } from '../redux/reducers/snackbarSlice';\n\nexport default function SettingsModal({ params, navigation, toggleModal }) {\n  const { groupCode, groupName, userName, tentType, groupRole } = params;\n  //const [isConfirmationVisible, setConfirmationVisible] = useState(false);\n  const [isTentChangeVisible, setTentChangeVisible] = useState(false);\n  const [isDeleteGroupVisible, setDeleteGroupVisible] = useState(false);\n  const [isModalSnackVisible, setModalSnackVisible] = useState(false);\n  const [modalSnackMessage, setModalSnackMessage] = useState('');\n  const [isDisabled, setIsDisabled] = useState(\n    firebase.auth().currentUser.uid == 'LyenTwoXvUSGJvT14cpQUegAZXp1' ? true : false\n  );\n  const [isCancelDisabled, setIsCancelDisabled] = useState(false);\n  const [deleteGroupName, setDeleteGroupName] = useState('');\n  const dispatch = useDispatch();\n  const { theme } = useTheme();\n  const queryClient = useQueryClient();\n\n  const userRef = firebase.firestore().collection('users').doc(firebase.auth().currentUser.uid);\n  const groupRef = firebase.firestore().collection('groups').doc(groupCode);\n\n  const postSave = useOnSave(groupCode);\n\n  function useOnSave(groupCode) {\n    //const queryClient = useQueryClient();\n    return useMutation((options) => onSave(options), {\n      onError: (error) => {\n        console.error(error);\n      },\n      onSuccess: () => {\n        queryClient.invalidateQueries(['group', groupCode]);\n      },\n    });\n  }\n\n  async function onSave(options) {\n    const { newGroupName, newUserName, newTentType } = options;\n    let groupIndex;\n    let groupCodeArr;\n    let valid = true;\n\n    if (newGroupName != groupName || newTentType != tentType) {\n      await userRef.get().then((userDoc) => {\n        groupCodeArr = userDoc.data().groupCode;\n        groupIndex = groupCodeArr.findIndex((element) => element.groupCode == groupCode);\n        console.log('group index', groupIndex);\n        groupCodeArr[groupIndex] = {\n          groupCode: groupCode,\n          groupName: newGroupName,\n        };\n      });\n\n      userRef\n        .update({\n          groupCode: groupCodeArr,\n        })\n        .then(() => {\n          console.log('successfully saved groupName');\n        })\n        .catch((error) => {\n          console.log(error);\n          setModalSnackMessage('Error saving group name');\n          toggleModalSnackBar();\n          return;\n        });\n\n      groupRef\n        .update({\n          name: newGroupName,\n          tentType: newTentType,\n        })\n        .then(() => {\n          console.log('successfully saved group settings');\n        })\n        .catch((error) => {\n          console.log(error);\n          setModalSnackMessage('Error saving group settings');\n          toggleModalSnackBar();\n          return;\n        });\n      queryClient.invalidateQueries(['groups', firebase.auth().currentUser.uid]);\n      dispatch(setTentType(newTentType));\n      dispatch(setGroupName(newGroupName));\n    }\n\n    if (newUserName != userName) {\n      groupRef\n        .collection('members')\n        .where('name', '==', newUserName)\n        .get()\n        .then((snapshot) => {\n          if (snapshot.empty) {\n            groupRef\n              .collection('members')\n              .doc(firebase.auth().currentUser.uid)\n              .update({\n                name: newUserName,\n              })\n              .then(() => {\n                console.log('successfully updated name');\n              })\n              .catch((error) => {\n                console.log(error);\n                setModalSnackMessage('Error saving user name');\n                toggleModalSnackBar();\n                return;\n              });\n            dispatch(setUserName(newUserName));\n          } else {\n            setModalSnackMessage('Nickname taken');\n            toggleModalSnackBar();\n            valid = false;\n            return;\n          }\n        })\n        .then(() => {\n          if (valid) {\n            dispatch(toggleSnackBar());\n            dispatch(setSnackMessage('Saved'));\n            toggleModal();\n          }\n        });\n    } else {\n      if (valid) {\n        dispatch(toggleSnackBar());\n        dispatch(setSnackMessage('Saved'));\n        toggleModal();\n      }\n    }\n  }\n\n  async function leaveGroup() {\n    if (firebase.auth().currentUser.uid == 'LyenTwoXvUSGJvT14cpQUegAZXp1') {\n      dispatch(setSnackMessage('This is a demo account'));\n      dispatch(toggleSnackBar());\n      return;\n    }\n    if (deleteGroupName == groupName) {\n      if (groupRole === 'Creator') {\n        await groupRef\n          .collection('members')\n          .get()\n          .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n              firebase\n                .firestore()\n                .collection('users')\n                .doc(doc.id)\n                .update({\n                  groupCode: firebase.firestore.FieldValue.arrayRemove({\n                    groupCode: groupCode,\n                    groupName: groupName,\n                  }),\n                })\n                .catch((error) => console.error(error));\n            });\n          });\n        groupRef\n          .collection('members')\n          .get()\n          .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n              doc.ref.delete().catch((error) => console.error(error));\n            });\n          })\n          .catch((error) => console.error(error));\n        groupRef\n          .delete()\n          .then(() => {\n            console.log('Group successfully deleted!');\n          })\n          .catch((error) => {\n            console.error('Error removing group: ', error);\n          });\n      } else {\n        await userRef.update({\n          groupCode: firebase.firestore.FieldValue.arrayRemove({\n            groupCode: groupCode,\n            groupName: groupName,\n          }),\n        });\n        groupRef\n          .collection('members')\n          .doc(firebase.auth().currentUser.uid)\n          .delete()\n          .then(() => {\n            console.log('Current user successfully removed from group!');\n          })\n          .catch((error) => {\n            console.error('Error removing user: ', error);\n          });\n      }\n      queryClient.invalidateQueries(['groups', firebase.auth().currentUser.uid]);\n      navigation.navigate('Home');\n    } else {\n      dispatch(setSnackMessage('Group Name is incorrect'));\n      dispatch(toggleSnackBar());\n    }\n  }\n\n  /*   function toggleConfirmation() {\n    setConfirmationVisible(!isConfirmationVisible);\n  } */\n  function toggleTentChange() {\n    setTentChangeVisible(!isTentChangeVisible);\n  }\n  function toggleDeleteGroup() {\n    setDeleteGroupVisible(!isDeleteGroupVisible);\n  }\n  function toggleModalSnackBar() {\n    setModalSnackVisible(!isModalSnackVisible);\n  }\n\n  return (\n    <View style={styles(theme).settingsContainer}>\n      <Formik\n        initialValues={{ newUserName: userName, newGroupName: groupName, newTentType: tentType }}\n        onSubmit={(values) => postSave.mutate(values)}\n        style={{ borderWidth: 1 }}\n      >\n        {({ handleChange, handleBlur, handleSubmit, setFieldValue, setFieldTouched, values }) => (\n          <>\n            <View style={styles(theme).topBanner}>\n              <TouchableOpacity\n                onPress={() => {\n                  setIsCancelDisabled(true);\n                  toggleModal();\n                }}\n                disabled={isCancelDisabled}\n              >\n                <Text style={{ fontSize: 18, fontWeight: '700', color: theme.primary }}>Cancel</Text>\n              </TouchableOpacity>\n              <Text style={[styles(theme).headerText, { color: theme.text2, alignSelf: 'center', fontSize: 26 }]}>\n                Settings\n              </Text>\n\n              <TouchableOpacity onPress={handleSubmit} disabled={isDisabled}>\n                <Text style={{ fontSize: 18, fontWeight: '700', color: isDisabled ? '#00000050' : theme.primary }}>\n                  Save\n                </Text>\n              </TouchableOpacity>\n            </View>\n\n            <View style={styles(theme).headerContainer}>\n              <Text style={styles(theme).headerText}>Nickname</Text>\n              <Icon name='account-edit' color={theme.grey2} size={20} style={{ marginRight: 8 }} />\n            </View>\n            <TextInput\n              name='newUserName'\n              placeholder='Nickname'\n              style={styles(theme).textInput}\n              onChangeText={handleChange('newUserName')}\n              onBlur={handleBlur('newUserName')}\n              value={values.newUserName}\n            />\n\n            {groupRole === 'Creator' || groupRole == 'Admin' ? (\n              <View style={{ width: '100%', alignItems: 'center', height: '55%' }}>\n                <View style={styles(theme).headerContainer}>\n                  <Text style={styles(theme).headerText}>Group Name</Text>\n                  <Icon name='circle-edit-outline' color={theme.grey2} size={20} style={{ marginRight: 8 }} />\n                </View>\n                <TextInput\n                  name='newGroupName'\n                  placeholder='Group Name'\n                  style={styles(theme).textInput}\n                  onChangeText={handleChange('newGroupName')}\n                  onBlur={handleBlur('newGroupName')}\n                  value={values.newGroupName}\n                />\n\n                <View style={styles(theme).headerContainer}>\n                  <Text style={styles(theme).headerText}>Tent Type</Text>\n                  <Icon name='home-edit' color={theme.grey2} size={20} style={{ marginRight: 8 }} />\n                </View>\n                <TouchableOpacity onPress={toggleTentChange} style={styles(theme).tentChangeBtn}>\n                  <Text style={styles(theme).modalText}>{values.newTentType}</Text>\n                  <Icon name='chevron-down' color={theme.grey2} size={20} />\n                </TouchableOpacity>\n              </View>\n            ) : null}\n\n            {groupRole == 'Creator' || groupRole == 'Admin' ? (\n              <ActionSheetModal\n                isVisible={isTentChangeVisible}\n                onBackdropPress={toggleTentChange}\n                onSwipeComplete={toggleTentChange}\n                toggleModal={toggleTentChange}\n                cancelButton={true}\n                height={180}\n                userStyle={'dark'}\n              >\n                <TouchableOpacity\n                  onPress={() => {\n                    setFieldValue('newTentType', 'Black');\n                    setFieldTouched('newTentType');\n                    toggleTentChange();\n                  }} //change to changing tent type\n                  style={styles(theme).tentChangeListItem}\n                >\n                  <Text style={[styles(theme).modalText, { color: theme.text1, marginRight: 15 }]}>Black</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  onPress={() => {\n                    setFieldValue('newTentType', 'Blue');\n                    setFieldTouched('newTentType');\n                    toggleTentChange();\n                  }}\n                  style={styles(theme).tentChangeListItem}\n                >\n                  <Text style={[styles(theme).modalText, { color: theme.text1, marginRight: 15 }]}>Blue</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  onPress={() => {\n                    setFieldValue('newTentType', 'White');\n                    setFieldTouched('newTentType');\n                    toggleTentChange();\n                  }}\n                  style={[styles(theme).tentChangeListItem, { borderBottomWidth: 0 }]}\n                >\n                  <Text style={[styles(theme).modalText, { color: theme.text1, marginRight: 15 }]}>White</Text>\n                </TouchableOpacity>\n              </ActionSheetModal>\n            ) : null}\n          </>\n        )}\n      </Formik>\n\n      <TouchableOpacity\n        style={styles(theme).leaveButton}\n        onPress={toggleDeleteGroup} /* onPress={toggleConfirmation} */\n      >\n        {groupRole === 'Creator' ? (\n          <Text style={{ color: theme.error, fontSize: 20, fontWeight: '500' }}>Delete Group</Text>\n        ) : (\n          <Text style={{ color: theme.error, fontSize: 20, fontWeight: '500' }}>Leave Group</Text>\n        )}\n      </TouchableOpacity>\n\n      <Modal\n        isVisible={isDeleteGroupVisible}\n        onBackdropPress={() => setDeleteGroupVisible(false)}\n        backdropTransitionOutTiming={0}\n        keyboardDismissMode={'on-drag'}\n      >\n        <SafeAreaView\n          style={{\n            width: '78%',\n            height: 230,\n            backgroundColor: theme.white2,\n            alignSelf: 'center',\n            alignItems: 'center',\n            borderRadius: 20,\n          }}\n        >\n          <View\n            style={{\n              width: '100%',\n              height: '80%',\n              borderBottomWidth: 1,\n              borderBottomColor: '#cfcfcf',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n            }}\n          >\n            {groupRole === 'Creator' ? (\n              <Text style={[styles(theme).deleteText, { paddingTop: 10 }]}>\n                Are you sure you want to DELETE this group? This action CANNOT be undone.\n              </Text>\n            ) : (\n              <Text style={[styles(theme).deleteText, { paddingTop: 10 }]}>\n                Are you sure you want to LEAVE this group? This will action CANNOT be undone.\n              </Text>\n            )}\n            <Text style={[styles(theme).deleteText, { fontSize: 14, fontWeight: '400' }]}>\n              Please type <Text style={{ fontWeight: '600' }}>{groupName}</Text> to confirm\n            </Text>\n\n            <TextInput\n              style={[\n                styles(theme).textInput,\n                {\n                  backgroundColor: theme.white1,\n                  fontSize: 16,\n                  fontWeight: '400',\n                  marginBottom: 10,\n                  borderWidth: 0.5,\n                  borderColor: theme.popOutBorder,\n                },\n              ]}\n              placeholder='Enter Group Name'\n              value={deleteGroupName}\n              onChangeText={(deleteGroupName) => setDeleteGroupName(deleteGroupName)}\n              autoCorrect={false}\n              autoCapitalize='none'\n            />\n          </View>\n\n          <View\n            style={{\n              flexDirection: 'row',\n              width: '100%',\n              height: '20%',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n            }}\n          >\n            <TouchableOpacity\n              style={{\n                width: '50%',\n                height: '98%',\n                justifyContent: 'center',\n                borderRightColor: '#cfcfcf',\n                borderRightWidth: 1,\n              }}\n              onPress={toggleDeleteGroup}\n            >\n              <Text style={{ textAlign: 'center', color: theme.primary, fontSize: 17, fontWeight: '500' }}>Cancel</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={{ width: '50%', height: '98%', justifyContent: 'center' }}\n              onPress={() => {\n                toggleModal();\n                leaveGroup();\n              }}\n            >\n              <Text style={{ textAlign: 'center', color: theme.error, fontSize: 17, fontWeight: '500' }}>Delete</Text>\n            </TouchableOpacity>\n          </View>\n        </SafeAreaView>\n      </Modal>\n\n      {/*       <ConfirmationModal\n        body={\n          groupRole === 'Creator'\n            ? 'Are you sure you want to DELETE this group? This will delete it for everyone in this group and CANNOT be undone.'\n            : 'Are you sure you want to LEAVE this group? This will delete all your information in this group and CANNOT be undone.'\n        }\n        buttonText={groupRole === 'Creator' ? 'Delete This Group' : 'Leave This Group'}\n        buttonAction={() => {\n          leaveGroup();\n          toggleModal();\n        }}\n        toggleModal={toggleConfirmation}\n        isVisible={isConfirmationVisible}\n        onBackdropPress={() => setConfirmationVisible(false)}\n        onSwipeComplete={toggleConfirmation}\n        userStyle='light'\n      /> */}\n      <Snackbar\n        visible={isModalSnackVisible}\n        onDismiss={() => setModalSnackVisible(false)}\n        wrapperStyle={{ top: 0 }}\n        duration={2000}\n      >\n        <Text style={{ textAlign: 'center', color: theme.text1 }}>{modalSnackMessage}</Text>\n      </Snackbar>\n    </View>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    settingsContainer: {\n      flexDirection: 'column',\n      alignItems: 'center',\n      backgroundColor: theme.background,\n      width: '100%',\n      height: '100%',\n      borderTopRightRadius: 20,\n      borderTopLeftRadius: 20,\n    },\n    topBanner: {\n      //for the top container holding top 'settings' and save button\n      flexDirection: 'row',\n      backgroundColor: theme.background,\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      marginBottom: 30,\n      width: '100%',\n      paddingVertical: 10,\n      borderBottomWidth: 0.5,\n      borderColor: theme.popOutBorder,\n      borderTopRightRadius: 20,\n      borderTopLeftRadius: 20,\n      paddingHorizontal: 20,\n    },\n    headerContainer: {\n      flexDirection: 'row',\n      width: '90%',\n      justifyContent: 'space-between',\n      marginBottom: 15,\n    },\n    headerText: {\n      //text for different setting headers\n      fontSize: 20,\n      fontWeight: '700',\n      color: theme.grey2,\n    },\n    modalText: {\n      //text for diff modal texts\n      fontSize: 18,\n      fontWeight: '500',\n    },\n    textInput: {\n      backgroundColor: '#fff',\n      paddingVertical: 10,\n      paddingHorizontal: 15,\n      width: '90%',\n      fontSize: 18,\n      fontWeight: '500',\n      textAlign: 'left',\n      borderRadius: 15,\n      marginBottom: 23,\n      // borderColor: theme.grey2,\n      // borderWidth: 1,\n    },\n    tentChangeListItem: {\n      //Style of an item in the member tentChange modal (for creator only)\n      flexDirection: 'row',\n      height: '33%',\n      width: '95%',\n      justifyContent: 'center',\n      alignSelf: 'center',\n      alignItems: 'center',\n      borderBottomWidth: 1,\n      borderColor: '#cfcfcf',\n    },\n    tentChangeBtn: {\n      //remove button for removing member if the user is the Creator\n      flexDirection: 'row',\n      width: '90%',\n      height: 45,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      borderRadius: 15,\n      // borderColor: theme.grey2,\n      // borderWidth: 1,\n      paddingHorizontal: 15,\n    },\n    BottomModalView: {\n      margin: 0,\n      justifyContent: 'flex-end',\n    },\n    leaveButton: {\n      backgroundColor: '#fff',\n      borderRadius: 15,\n      padding: 15,\n      position: 'absolute',\n      bottom: 10,\n      width: '90%',\n      alignItems: 'center',\n      borderWidth: 0.5,\n      borderColor: theme.popOutBorder,\n    },\n    deleteText: {\n      width: '90%',\n      textAlign: 'center',\n      fontWeight: '600',\n      fontSize: 16,\n    },\n  });\n","import React, { useState, useCallback, useRef } from 'react';\nimport {\n  Animated,\n  Text,\n  View,\n  StyleSheet,\n  FlatList,\n  TouchableOpacity,\n  RefreshControl,\n  TextInput,\n  SafeAreaView,\n  Keyboard,\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\n\nimport { Divider, IconButton } from 'react-native-paper';\nimport { useSelector } from 'react-redux';\nimport { useFonts, Merriweather_400Regular, Merriweather_700Bold } from '@expo-google-fonts/merriweather';\nimport { Montserrat_400Regular, Montserrat_700Bold } from '@expo-google-fonts/montserrat';\nimport { OpenSans_400Regular } from '@expo-google-fonts/open-sans';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport { useTheme } from '../context/ThemeProvider';\nimport { useRefreshByUser } from '../hooks/useRefreshByUser';\nimport { ConfirmationModal } from '../components/ConfirmationModal';\nimport { ActionSheetModal } from '../components/ActionSheetModal';\nimport { BottomSheetModal } from '../components/BottomSheetModal';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport SettingsModal from '../components/SettingsModal';\nimport { ErrorPage } from '../components/ErrorPage';\n\nexport default function GroupInfo({ navigation }) {\n  const groupCode = useSelector((state) => state.user.currGroupCode);\n  const groupName = useSelector((state) => state.user.currGroupName);\n  const groupRole = useSelector((state) => state.user.currGroupRole);\n  const userName = useSelector((state) => state.user.currUserName);\n  const tentType = useSelector((state) => state.user.currTentType);\n\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [isConfirmationVisible, setConfirmationVisible] = useState(false);\n  const [isRoleChangeVisible, setRoleChangeVisible] = useState(false);\n  //The following hooks are for the settings modal\n  const [isSettingsVisible, setSettingsVisible] = useState(false);\n  //These 2 hooks are used for identifying which member is clicked from the list\n  const currMember = useRef({});\n  const [fontsLoaded] = useFonts({\n    Merriweather_400Regular,\n    Merriweather_700Bold,\n    Montserrat_400Regular,\n    Montserrat_700Bold,\n    OpenSans_400Regular,\n  });\n\n  const { theme } = useTheme();\n\n  function toggleModal() {\n    setModalVisible(!isModalVisible);\n  }\n  function toggleConfirmation() {\n    setConfirmationVisible(!isConfirmationVisible);\n  }\n  function toggleRoleChange() {\n    setRoleChangeVisible(!isRoleChangeVisible);\n  }\n  function toggleSettings() {\n    Keyboard.dismiss();\n    setSettingsVisible(!isSettingsVisible);\n  }\n\n  const { isLoading, isError, error, data, refetch } = useQuery(\n    ['group', groupCode],\n    () => fetchGroupMembers(groupCode),\n    { initialData: [] }\n  );\n\n  const { isRefetchingByUser, refetchByUser } = useRefreshByUser(refetch);\n\n  //Function for gathering member information from database\n  async function fetchGroupMembers(groupCode) {\n    console.log('passed group code', groupCode);\n    const memberRef = firebase.firestore().collection('groups').doc(groupCode).collection('members');\n    let data = [{}];\n    await memberRef\n      .where('inTent', '==', true)\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          let currName = doc.data().name; //gets current name in list\n          let tentCondition = doc.data().inTent; //gets tent status as well\n          let scheduledHours = doc.data().scheduledHrs;\n          let groupRole = doc.data().groupRole;\n          let memID = doc.id;\n          if (doc.id == firebase.auth().currentUser.uid) {\n            data[0] = {\n              id: memID,\n              name: currName,\n              inTent: tentCondition,\n              hours: scheduledHours,\n              role: groupRole,\n            };\n          } else {\n            data.push({\n              id: memID,\n              name: currName,\n              inTent: tentCondition,\n              hours: scheduledHours,\n              role: groupRole,\n            });\n          }\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n        throw error;\n      });\n    await memberRef\n      .where('inTent', '!=', true)\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          let currName = doc.data().name; //gets current name in list\n          let tentCondition = doc.data().inTent; //gets tent status as well\n          let scheduledHours = doc.data().scheduledHrs;\n          let groupRole = doc.data().groupRole;\n          let memID = doc.id;\n          if (doc.id == firebase.auth().currentUser.uid) {\n            data[0] = {\n              id: memID,\n              name: currName,\n              inTent: tentCondition,\n              hours: scheduledHours,\n              role: groupRole,\n            };\n          } else {\n            data.push({\n              id: memID,\n              name: currName,\n              inTent: tentCondition,\n              hours: scheduledHours,\n              role: groupRole,\n            });\n          }\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n        throw error;\n      });\n    //console.log('groupInfo data', data);\n    return data;\n  }\n\n  const postRemoveMember = useRemoveMember(groupCode);\n\n  function useRemoveMember(groupCode) {\n    const queryClient = useQueryClient();\n    return useMutation(() => removeMember(groupCode), {\n      onError: (error) => {\n        console.error(error);\n      },\n      onSuccess: () => {\n        queryClient.invalidateQueries(['group', groupCode]);\n      },\n    });\n  }\n\n  //Function for removing a member from group in firebase\n  async function removeMember(groupCode) {\n    console.log('current member being deleted', currMember.current.id);\n    await firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .collection('members')\n      .doc(currMember.current.id)\n      .delete()\n      .then(() => {\n        console.log(currMember.current.id + ' removed from group');\n      })\n      .catch((error) => {\n        console.error('Error removing member: ', error);\n      });\n    firebase\n      .firestore()\n      .collection('users')\n      .doc(currMember.current.id)\n      .update({\n        groupCode: firebase.firestore.FieldValue.arrayRemove({ groupCode: groupCode, groupName: groupName }),\n      })\n      .catch((error) => console.error(error));\n    toggleModal();\n  }\n\n  const postGroupRole = useGroupRole(groupCode);\n\n  function useGroupRole(groupCode) {\n    const queryClient = useQueryClient();\n    return useMutation((options) => setGroupRole(options), {\n      onError: (error) => {\n        console.error(error);\n      },\n      onSuccess: () => {\n        queryClient.invalidateQueries(['group', groupCode]);\n      },\n    });\n  }\n\n  function setGroupRole(options) {\n    const { groupRole, groupCode } = options;\n    firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .collection('members')\n      .doc(currMember.current.id)\n      .update({\n        groupRole: groupRole,\n      })\n      .then(() => console.log(currMember.current.id + ' group Role updated to ' + groupRole))\n      .catch((error) => console.error(error));\n    toggleRoleChange();\n    toggleModal();\n  }\n\n  const UserMember = ({ item }) => {\n    const backgroundColor = item.inTent ? '#3eb489' : '#1f509a';\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          toggleModal();\n          currMember.current = { name: item.name, id: item.id, hours: item.hours, role: item.role };\n        }}\n      >\n        <View style={[styles(theme).listItem, styles(theme).shadowProp, { backgroundColor, marginVertical: 15 }]}>\n          <Text style={styles(theme).listText}>{item.name}</Text>\n          {item.inTent ? (\n            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n              <Text style={{ color: theme.text1 }}>In Tent</Text>\n              <Icon name='map-marker-check-outline' color={theme.icon1} size={28} style={{ marginLeft: 5 }} />\n            </View>\n          ) : null}\n          {/* <Text style={styles(theme).listText}>Scheduled Hrs: {item.hours} hrs</Text> */}\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  //Render Item for Each List Item of group members\n  const Member = ({ name, id, hours, role, inTent }) => {\n    const backgroundColor = inTent ? { backgroundColor: '#3eb489' } : { backgroundColor: '#1f509a' };\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          toggleModal();\n          currMember.current = { name: name, id: id, hours: hours, role: role };\n        }}\n      >\n        <View style={[styles(theme).listItem, backgroundColor, styles(theme).shadowProp]}>\n          <Text style={styles(theme).listText}>{name}</Text>\n          {inTent ? (\n            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n              <Text style={{ color: theme.text1 }}>In Tent</Text>\n              <Icon name='map-marker-check-outline' color={theme.icon1} size={28} style={{ marginLeft: 5 }} />\n            </View>\n          ) : null}\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  //variable for each name box, change color to green if status is inTent\n  const renderMember = ({ item }) => {\n    return <Member name={item.name} id={item.id} hours={item.hours} role={item.role} inTent={item.inTent} />;\n  };\n\n  if (isLoading || !fontsLoaded) {\n    return <LoadingIndicator />;\n  }\n  if (isError) {\n    return <ErrorPage navigation={navigation} />;\n  }\n  return (\n    <SafeAreaView style={styles(theme).container}>\n      <View style={styles(theme).containerHeader}>\n        <IconButton icon='menu' size={25} onPress={() => navigation.openDrawer()} />\n        <Text style={{ fontSize: 20, fontWeight: '600', color: theme.grey1 }}>Group Overview</Text>\n        <IconButton icon='cog-outline' color={theme.grey1} size={25} onPress={toggleSettings} />\n      </View>\n\n      <Text style={styles(theme).header}>Group Name</Text>\n      <View style={styles(theme).boxText}>\n        <Text style={styles(theme).contentText}>{groupName}</Text>\n      </View>\n\n      <Text style={styles(theme).header}>Group Code</Text>\n      <View style={styles(theme).boxText}>\n        <Text selectable={true} style={styles(theme).contentText}>\n          {groupCode}\n        </Text>\n      </View>\n\n      {/* List of Members in Group*/}\n      <Text style={styles(theme).header}>Members</Text>\n      <FlatList\n        data={data.slice(1)}\n        renderItem={renderMember}\n        keyExtractor={(item) => item.id}\n        ListHeaderComponent={data.length != 0 ? <UserMember item={data[0]} /> : null}\n        refreshControl={<RefreshControl enabled={true} refreshing={isRefetchingByUser} onRefresh={refetchByUser} />}\n        style={{ marginHorizontal: '4%', flexGrow: 1, height: '70%', width: '90%' }}\n        showsVerticalScrollIndicator={false}\n      />\n\n      {/*Member Information Modal Component*/}\n      <ActionSheetModal\n        isVisible={isModalVisible}\n        onBackdropPress={() => setModalVisible(false)}\n        onSwipeComplete={toggleModal}\n        height={groupRole == 'Creator' && currMember.current.id != firebase.auth().currentUser.uid ? 250 : 190}\n        userStyle={'light'}\n      >\n        <View style={styles(theme).popUpHeaderView}>\n          <View style={{ flexDirection: 'row' }}>\n            <Icon name='account' color={theme.grey2} size={28} style={{ marginRight: 12 }} />\n            <Text style={{ fontSize: 22, fontWeight: '700' }}>{currMember.current.name} Information</Text>\n          </View>\n          <TouchableOpacity onPress={toggleModal}>\n            <Icon name='close-circle' color={theme.grey2} size={26} style={{ marginRight: 0 }} />\n          </TouchableOpacity>\n        </View>\n\n        <View style={{ height: '70%', width: '94%', justifyContent: 'space-between' }}>\n          <View\n            style={\n              groupRole == 'Creator' && currMember.current.id != firebase.auth().currentUser.uid\n                ? { height: '65%' }\n                : { height: '100%' }\n            }\n          >\n            <View style={styles(theme).popUpHalfBody}>\n              <Icon name='timer-sand-empty' color={theme.grey2} size={25} style={{ marginRight: 15 }} />\n              <Text style={styles(theme).modalText}>Scheduled Hours: {currMember.current.hours} hrs</Text>\n            </View>\n            <Divider />\n\n            {groupRole == 'Creator' && currMember.current.id != firebase.auth().currentUser.uid ? (\n              <TouchableOpacity\n                style={[styles(theme).popUpHalfBody, { justifyContent: 'space-between' }]}\n                onPress={() => {\n                  toggleRoleChange();\n                }} //change later to admin change\n              >\n                <View style={{ flexDirection: 'row' }}>\n                  <Icon name='account-group' color={theme.grey2} size={25} style={{ marginRight: 15 }} />\n                  <Text style={styles(theme).modalText}>Group Role: {currMember.current.role}</Text>\n                </View>\n                <Icon name='chevron-down' color={theme.grey2} size={20} />\n              </TouchableOpacity>\n            ) : (\n              <View style={styles(theme).popUpHalfBody}>\n                <Icon name='account-group' color={theme.grey2} size={25} style={{ marginRight: 15 }} />\n                <Text style={styles(theme).modalText}>Group Role: {currMember.current.role}</Text>\n              </View>\n            )}\n          </View>\n\n          {groupRole === 'Creator' && currMember.current.id != firebase.auth().currentUser.uid ? (\n            <View style={{ width: '100%', height: '35%', justifyContent: 'center' }}>\n              <TouchableOpacity onPress={toggleConfirmation} style={styles(theme).removeBtn}>\n                <Icon name='trash-can' color={theme.error} size={30} style={{ marginRight: 15 }} />\n                <Text style={{ color: theme.error, fontSize: 22, fontWeight: '600' }}>Remove</Text>\n              </TouchableOpacity>\n            </View>\n          ) : null}\n        </View>\n        {groupRole == 'Creator' ? (\n          <ActionSheetModal\n            isVisible={isRoleChangeVisible}\n            onBackdropPress={toggleRoleChange}\n            onSwipeComplete={toggleRoleChange}\n            toggleModal={toggleRoleChange}\n            cancelButton={true}\n            height={180}\n            userStyle={'dark'}\n          >\n            {/* <TouchableOpacity\n              onPress={() => postGroupRole.mutate({ groupRole: 'Creator', groupCode })} //change to changing member role\n              style={styles(theme).roleChangeListItem}\n            >\n              <Icon name='chess-king' color={theme.text1} size={25} style={{ marginRight: 15 }} />\n              <Text style={[styles(theme).modalText, { color: theme.text1, marginRight: 15 }]}>Creator</Text>\n            </TouchableOpacity> */}\n\n            <TouchableOpacity\n              onPress={() => postGroupRole.mutate({ groupRole: 'Admin', groupCode })}\n              style={styles(theme).roleChangeListItem}\n            >\n              <Icon name='badge-account-outline' color={theme.text1} size={25} style={{ marginRight: 15 }} />\n              <Text style={[styles(theme).modalText, { color: theme.text1, marginRight: 15 }]}>Admin</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={() => postGroupRole.mutate({ groupRole: 'Member', groupCode })}\n              style={[styles(theme).roleChangeListItem, { borderBottomWidth: 0 }]}\n            >\n              <Icon name='account' color={theme.text1} size={25} style={{ marginRight: 15 }} />\n              <Text style={[styles(theme).modalText, { color: theme.text1, marginRight: 15 }]}>Member</Text>\n            </TouchableOpacity>\n          </ActionSheetModal>\n        ) : null}\n\n        {/* Remove Member Confirmation Modal */}\n        <ConfirmationModal\n          body={\n            'Are you sure you want to REMOVE ' +\n            currMember.current.name +\n            ' from the group? This action CANNOT be undone.'\n          }\n          buttonText={'Remove ' + currMember.current.name}\n          buttonAction={() => {\n            postRemoveMember.mutate();\n          }}\n          toggleModal={toggleConfirmation}\n          isVisible={isConfirmationVisible}\n          onBackdropPress={() => setConfirmationVisible(false)}\n          onSwipeComplete={toggleConfirmation}\n        />\n      </ActionSheetModal>\n\n      <BottomSheetModal\n        isVisible={isSettingsVisible}\n        onBackdropPress={toggleSettings}\n        onSwipeComplete={toggleSettings}\n        swipeDown={true}\n        barSize={'none'}\n        height={groupRole == 'Creator' || 'Admin' ? '90%' : '50%'}\n        userStyle='light'\n      >\n        <SettingsModal\n          params={{ groupCode, groupName, userName, tentType, groupRole }}\n          navigation={navigation}\n          toggleModal={toggleSettings}\n        />\n      </BottomSheetModal>\n    </SafeAreaView>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: theme.primaryContainer,\n      alignItems: 'center',\n    },\n    containerHeader: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      width: '100%',\n    },\n    header: {\n      //view of top headers above boxText\n      marginBottom: 10,\n      marginTop: 4,\n      color: theme.grey1,\n      width: '90%',\n      fontSize: 20,\n      //fontFamily: 'Merriweather_700Bold',\n      fontFamily: 'Montserrat_700Bold',\n    },\n    boxText: {\n      //View of top 2 boxes of text (groupCode and groupName)\n      marginBottom: 10,\n      width: '90%',\n      backgroundColor: theme.white1,\n      borderRadius: 8,\n      borderWidth: 0.3,\n      borderColor: theme.white1,\n    },\n    contentText: {\n      //style of text inside boxText\n      fontSize: 24,\n      textAlign: 'center',\n      marginHorizontal: 8,\n      //fontFamily: 'OpenSans_400Regular',\n      fontFamily: 'Montserrat_400Regular',\n    },\n    listItem: {\n      //style of a member list item\n      backgroundColor: theme.primary,\n      padding: 4,\n      height: 35,\n      marginVertical: 4,\n      borderRadius: 12,\n      width: '100%',\n      alignSelf: 'center',\n      alignItems: 'center',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      paddingHorizontal: 20,\n    },\n    listText: {\n      //text of a member item\n      fontSize: 15,\n      //fontFamily: 'OpenSans_400Regular',\n      fontFamily: 'Montserrat_400Regular',\n      color: theme.text1,\n    },\n    modalText: {\n      //style of text within the modals (member info text and roleChange text)\n      fontSize: 18,\n      fontWeight: '500',\n    },\n    popUpHeaderView: {\n      //view of the header of the info popup modal\n      flexDirection: 'row',\n      height: '20%',\n      width: '94%',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    },\n    popUpHalfBody: {\n      //view of the half of the info in the info popup modal\n      flexDirection: 'row',\n      alignSelf: 'center',\n      height: '50%',\n      width: '90%',\n      justifyContent: 'start',\n      alignItems: 'center',\n      borderRadius: 16,\n    },\n    removeBtn: {\n      //remove button for removing member if the user is the Creator\n      flexDirection: 'row',\n      width: '100%',\n      height: '85%',\n      backgroundColor: '#ececec',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 15,\n    },\n    roleChangeListItem: {\n      //Style of an item in the member roleChange modal (for creator only)\n      flexDirection: 'row',\n      height: '33%',\n      width: '95%',\n      justifyContent: 'center',\n      alignSelf: 'center',\n      alignItems: 'center',\n      borderBottomWidth: 1,\n      borderColor: '#cfcfcf',\n    },\n    shadowProp: {\n      shadowColor: '#171717',\n      shadowOffset: { width: -2, height: 3 },\n      shadowOpacity: 0.2,\n      shadowRadius: 3,\n    },\n    highlightShadow: {\n      shadowColor: '#ff0',\n      shadowRadius: 10,\n      shadowOpacity: 0.8,\n    },\n  });\n","import React, { useState, useCallback , memo} from 'react';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { View, StyleSheet, Text, TouchableOpacity, SafeAreaView } from 'react-native';\nimport { Title, Drawer, Switch } from 'react-native-paper';\nimport { DrawerContentScrollView, DrawerItem } from '@react-navigation/drawer';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\n\nimport { ConfirmationModal } from '../components/ConfirmationModal';\nimport { reset } from '../redux/reducers/userSlice';\n\nconst PERSISTENCE_KEY = 'NAVIGATION_STATE_V1';\n\nexport default memo(function DrawerContent(props) {\n  const [status, setStatus] = useState(false);\n  const [isConfirmationVisible, setConfirmationVisible] = useState(false);\n  \n  const dispatch = useDispatch();\n  const groupCode = useSelector((state) => state.user.currGroupCode);\n\n  const useUpdateTentStatus = (groupCode) => {\n    const queryClient = useQueryClient();\n    return useMutation((status) => updateTentStatus(groupCode, status), {\n      onError: (error) => {\n        console.error(error);\n      },\n      onSuccess: () => {\n        queryClient.invalidateQueries(['group', groupCode]);\n      },\n    });\n  };\n  function updateTentStatus(groupCode, status) {\n    return firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .collection('members')\n      .doc(firebase.auth().currentUser.uid)\n      .update({\n        inTent: status,\n      });\n    // .then(() => {\n    //   console.log('successfully updated tent status: ', status);\n    // })\n    // .catch((error) => {\n    //   console.error(error);\n    // });\n  }\n\n  const postTentStatus = useUpdateTentStatus(groupCode);\n\n  useFocusEffect(\n    useCallback(() => {\n      let mounted = true;\n      console.log('useFocusEffect triggered');\n      if (mounted && groupCode != '' && groupCode != null) {\n        firebase\n          .firestore()\n          .collection('groups')\n          .doc(groupCode)\n          .collection('members')\n          .doc(firebase.auth().currentUser.uid)\n          .get()\n          .then((doc) => {\n            if (mounted && doc.exists) {\n              console.log(doc.data().inTent);\n              setStatus(doc.data().inTent);\n              console.log('status: ', status);\n            } else {\n              console.log(\"doc doesn't exist\");\n            }\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n      return () => (mounted = false);\n    }, [groupCode])\n  );\n\n  const onToggleSwitch = async () => {\n    setStatus(!status);\n    postTentStatus.mutate(!status);\n  };\n\n  function toggleConfirmation() {\n    setConfirmationVisible(!isConfirmationVisible);\n  }\n\n  async function onLogout() {\n    toggleConfirmation();\n    await AsyncStorage.multiRemove(['USER_EMAIL', 'USER_PASSWORD', PERSISTENCE_KEY]);\n    await firebase.auth().signOut();\n    dispatch(reset());\n  }\n\n  return (\n    <View style={{ flex: 1 }}>\n      <DrawerContentScrollView {...props}>\n        <View style={styles.drawerContent}>\n          <View style={styles.userInfoSection}>\n            <View style={{ flexDirection: 'row', marginTop: 15 }}>\n              <Title style={styles.title}>Krzyzewskiville</Title>\n            </View>\n          </View>\n\n          <Drawer.Section style={styles.drawerSection}>\n            <DrawerItem\n              icon={({ color, size }) => <Icon name='home-outline' color={color} size={size} />}\n              label='Home'\n              onPress={() => {\n                props.navigation.navigate('Home');\n              }}\n            />\n            <DrawerItem\n              icon={({ color, size }) => <Icon name='account-group-outline' color={color} size={size} />}\n              label='Group Overview'\n              onPress={() => {\n                props.navigation.navigate('GroupInfo');\n              }}\n            />\n            <DrawerItem\n              icon={({ color, size }) => <Icon name='calendar-text-outline' color={color} size={size} />}\n              label='Your Availability'\n              onPress={() => {\n                props.navigation.navigate('AvailabilityScreen');\n              }}\n            />\n            <DrawerItem\n              icon={({ color, size }) => <Icon name='calendar-check-outline' color={color} size={size} />}\n              label='Shifts This Week'\n              onPress={() => {\n                props.navigation.navigate('ShiftsScreen');\n              }}\n            />\n            <DrawerItem\n              icon={({ color, size }) => <Icon name='calendar-outline' color={color} size={size} />}\n              label='Schedule'\n              onPress={() => {\n                props.navigation.navigate('ScheduleScreen');\n              }}\n            />\n            {/* <DrawerItem\n              icon={({ color, size }) => <Icon name='alert-outline' color={color} size={size} />}\n              label='Line Monitoring'\n              onPress={() => {\n                props.navigation.navigate('MonitorScreen');\n              }}\n            /> */}\n            <DrawerItem\n              icon={({ color, size }) => <Icon name='information-outline' color={color} size={size} />}\n              label='Information'\n              onPress={() => {\n                props.navigation.navigate('InfoScreen');\n              }}\n            />\n          </Drawer.Section>\n          <Drawer.Section title='Status'>\n            <View style={styles.status}>\n              <Text style={{ color: '#555555' }}>In Tent</Text>\n              <Switch value={status} onValueChange={onToggleSwitch} color='#3eb489' />\n            </View>\n          </Drawer.Section>\n        </View>\n      </DrawerContentScrollView>\n      <Drawer.Section style={styles.bottomDrawerSection}>\n        <DrawerItem\n          icon={({ color, size }) => <Icon name='logout' color={color} size={size} />}\n          label='Log Out'\n          onPress={toggleConfirmation}\n        />\n      </Drawer.Section>\n\n      <ConfirmationModal\n        body={'Are you sure you want to log out?'}\n        buttonText={'Log out'}\n        buttonAction={() => {\n          onLogout();\n        }}\n        toggleModal={toggleConfirmation}\n        isVisible={isConfirmationVisible}\n        onBackdropPress={toggleConfirmation}\n        onSwipeComplete={toggleConfirmation}\n        userStyle='light'\n      />\n    </View>\n  );\n})\n\nconst styles = StyleSheet.create({\n  drawerContent: {\n    flex: 1,\n  },\n  userInfoSection: {\n    paddingLeft: 20,\n  },\n  title: {\n    fontSize: 16,\n    marginTop: 3,\n    fontWeight: 'bold',\n  },\n  caption: {\n    fontSize: 14,\n    lineHeight: 14,\n  },\n  row: {\n    marginTop: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  section: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 15,\n  },\n  paragraph: {\n    fontWeight: 'bold',\n    marginRight: 3,\n  },\n  drawerSection: {\n    marginTop: 15,\n  },\n  bottomDrawerSection: {\n    marginBottom: 15,\n    borderTopColor: '#f4f4f4',\n    borderTopWidth: 1,\n  },\n  status: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n  },\n});\n","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Text,\n  View,\n  StyleSheet,\n  ScrollView,\n  Dimensions,\n  TouchableOpacity,\n  Platform,\n  RefreshControl,\n} from 'react-native';\nimport { Table, TableWrapper, Row, Col, Cell } from 'react-native-table-component';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { Picker } from '@react-native-picker/picker';\n\nimport { Snackbar } from 'react-native-paper';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport { useTheme } from '../context/ThemeProvider';\nimport { useRefreshByUser } from '../hooks/useRefreshByUser';\nimport { BottomSheetModal } from '../components/BottomSheetModal';\nimport { ActionSheetModal } from '../components/ActionSheetModal';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { ErrorPage } from '../components/ErrorPage';\nimport { setSnackMessage, toggleSnackBar } from '../redux/reducers/snackbarSlice';\n\nconst window = Dimensions.get('window');\n\n// prettier-ignore\nconst agenda = {\n  tableHead: ['', 'Sun', 'Mon', 'Tu', 'Wed', 'Th', 'Fri', 'Sat'],\n  tableTime: [ ' 1 am', ' 2 am', ' 3 am', ' 4 am', ' 5 am', ' 6 am', ' 7 am',' 8 am', ' 9 am', '10 am', '11 am', \n  '12 pm',' 1 pm', ' 2 pm', ' 3 pm', ' 4 pm', ' 5 pm', ' 6 pm', ' 7 pm', ' 8 pm', ' 9 pm', '10 pm', '11 pm',],\n};\n\nconst tableData = [];\nfor (let i = 0; i < 48; i += 1) {\n  const rowData = [];\n  for (let j = 0; j < 7; j += 1) {\n    rowData.push('');\n  }\n  tableData.push(rowData);\n}\n\nconst cellHeight = 35;\nlet currIndex;\nlet availability;\n\nexport default function Availability({ navigation }) {\n  const groupCode = useSelector((state) => state.user.currGroupCode);\n\n  const [dimensions, setDimensions] = useState({ window });\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [isDeleteModalVisible, setDeleteModalVisible] = useState(false);\n  const [isSnackVisible, setSnackVisible] = useState(false);\n  const [snackMessage, setModalSnackMessage] = useState('');\n  const [selectedDay, setSelectedDay] = useState(0);\n  const [startTime, setStartTime] = useState({\n    hour: 0,\n    minute: 0,\n    day: 0,\n  });\n  const [endTime, setEndTime] = useState({\n    hour: 0,\n    minute: 0,\n    day: 0,\n  });\n  const { theme } = useTheme();\n  const dispatch = useDispatch();\n\n  const { isLoading, isError, error, data, refetch } = useQuery(\n    ['availability', firebase.auth().currentUser.uid, groupCode],\n    () => fetchAvailability(groupCode)\n  );\n  const { isRefetchingByUser, refetchByUser } = useRefreshByUser(refetch);\n\n  async function fetchAvailability(groupCode) {\n    let availabilityUI = new Array(336);\n    availabilityUI.fill([true, 0]);\n    await firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .collection('members')\n      .doc(firebase.auth().currentUser.uid)\n      .get()\n      .then((doc) => {\n        availability = doc.data().availability;\n        //console.log('availability fetched from firebase', availability);\n      });\n    for (let i = 0; i < availability.length; i++) {\n      if (!availability[i]) {\n        let j = i;\n        while (j < availability.length && !availability[j]) {\n          availabilityUI[j] = [true, 0];\n          if (i != j && j % 48 == 0) {\n            break;\n          }\n          j++;\n        }\n        if (j > 47 && !availabilityUI[j - 1 - (j % 48)][0]) {\n          availabilityUI[j - 1] = [false, j - i + 1];\n        } else {\n          availabilityUI[j - 1] = [false, j - i];\n        }\n        i = j;\n      } else {\n        availabilityUI[i] = [true, 0];\n      }\n    }\n    return availabilityUI;\n  }\n\n  const useUpdateAvailability = (groupCode) => {\n    const queryClient = useQueryClient();\n    return useMutation(() => updateAvailability(groupCode), {\n      onError: (error) => {\n        console.error(error);\n      },\n      onSuccess: () => {\n        queryClient.invalidateQueries(['availability', firebase.auth().currentUser.uid, groupCode]);\n      },\n    });\n  };\n\n  const postAvailability = useUpdateAvailability(groupCode);\n\n  const updateAvailability = (groupCode) => {\n    const memberRef = firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .collection('members')\n      .doc(firebase.auth().currentUser.uid);\n    if (selectedDay == 7) {\n      toggleModalSnackBar();\n      setModalSnackMessage('Please select a day');\n      return;\n    }\n    let startIdx =\n      parseInt(selectedDay) * 48 + parseInt(startTime.day) + parseInt(startTime.minute) + parseInt(startTime.hour) * 2;\n    let endIdx =\n      parseInt(selectedDay) * 48 + parseInt(endTime.day) + parseInt(endTime.minute) + parseInt(endTime.hour) * 2;\n    if (endIdx == parseInt(selectedDay) * 48) {\n      endIdx += 48;\n    }\n    if (startIdx >= endIdx) {\n      toggleModalSnackBar();\n      setModalSnackMessage('Invalid time slot');\n      return;\n    }\n    for (let i = startIdx; i < endIdx; i++) {\n      availability[i] = false;\n    }\n    //availabilityUI[endIdx - 1] = [false, endIdx - startIdx];\n    console.log('availability', availability);\n    memberRef.update({\n      availability: availability,\n    });\n    toggleModal();\n  };\n\n  //const queryClient = useQueryClient();\n  const useDeleteAvailability = (groupCode) => {\n    const queryClient = useQueryClient();\n    return useMutation(() => deleteCell(groupCode), {\n      onError: (error) => {\n        console.error(error);\n      },\n      onSuccess: () => {\n        queryClient.invalidateQueries(['availability', firebase.auth().currentUser.uid, groupCode]);\n      },\n    });\n  };\n\n  const deleteAvailability = useDeleteAvailability(groupCode);\n\n  const deleteCell = (groupCode) => {\n    const memberRef = firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .collection('members')\n      .doc(firebase.auth().currentUser.uid);\n    console.log('currIndex', currIndex);\n    let startIdx = currIndex - data[currIndex][1];\n    console.log('startIdx', startIdx);\n    for (let i = startIdx; i <= currIndex; i++) {\n      availability[i] = true;\n    }\n    memberRef.update({\n      availability: availability,\n    });\n    toggleDeleteModal();\n  };\n\n  function toggleModal() {\n    setModalVisible(!isModalVisible);\n  }\n  function toggleDeleteModal() {\n    setDeleteModalVisible(!isDeleteModalVisible);\n  }\n  function toggleModalSnackBar() {\n    setSnackVisible(!isSnackVisible);\n  }\n\n  const element = (cellData, index, availability) => (\n    <TouchableOpacity\n      style={[styles(theme).btn, { height: cellHeight * parseInt(availability[index][1]) }]}\n      onPress={() => {\n        console.log(index);\n        toggleDeleteModal();\n        currIndex = index;\n      }}\n    ></TouchableOpacity>\n  );\n\n  useEffect(() => {\n    const subscription = Dimensions.addEventListener('change', ({ window }) => {\n      setDimensions({ window });\n    });\n    return () => subscription?.remove();\n  });\n\n  if (isLoading) {\n    return <LoadingIndicator />;\n  }\n\n  if (isError) {\n    return <ErrorPage navigation={navigation} />;\n  }\n\n  return (\n    <View style={styles(theme).container}>\n      <Table borderStyle={{ borderColor: 'transparent' }}>\n        <Row\n          data={agenda.tableHead}\n          style={StyleSheet.flatten(styles(theme).head)}\n          widthArr={[\n            dimensions.window.width / 12,\n            dimensions.window.width * (11 / 84),\n            dimensions.window.width * (11 / 84),\n            dimensions.window.width * (11 / 84),\n            dimensions.window.width * (11 / 84),\n            dimensions.window.width * (11 / 84),\n            dimensions.window.width * (11 / 84),\n            dimensions.window.width * (11 / 84),\n          ]}\n          textStyle={{ textAlign: 'center', fontWeight: '700' }}\n        />\n      </Table>\n\n      <ScrollView\n        showsVerticalScrollIndicator={false}\n        //onScroll = {onScroll}\n        //scrollEventThrottle = {16}\n        refreshControl={<RefreshControl enabled={true} refreshing={isRefetchingByUser} onRefresh={refetchByUser} />}\n      >\n        <Table borderStyle={{ borderWidth: 0, borderColor: 'transparent' }} style={{ flexDirection: 'row' }}>\n          <TableWrapper\n            style={StyleSheet.flatten([\n              { width: dimensions.window.width / 12, marginTop: 34, alignItems: 'center' /* , borderWidth:1 */ },\n            ])}\n          >\n            <Col\n              data={agenda.tableTime}\n              heightArr={new Array(23).fill(cellHeight * 2)}\n              textStyle={{\n                textAlign: 'center',\n                fontWeight: '700',\n                fontSize: 10,\n                width: '70%',\n                color: '#717573',\n                marginLeft: 2,\n              }}\n            />\n          </TableWrapper>\n\n          <TableWrapper style={{ flex: 1 }}>\n            {tableData.map((rowData, index) => (\n              <TableWrapper key={index} style={StyleSheet.flatten(styles(theme).row)}>\n                {rowData.map((cellData, cellIndex) => (\n                  <Cell\n                    key={cellIndex}\n                    data={data[48 * cellIndex + index][0] ? cellData : element(cellData, 48 * cellIndex + index, data)}\n                    //{data[48 * cellIndex + index].toString()}\n\n                    style={StyleSheet.flatten([styles(theme).cell, { width: dimensions.window.width * (11 / 84) }])}\n                  />\n                ))}\n              </TableWrapper>\n            ))}\n          </TableWrapper>\n        </Table>\n      </ScrollView>\n\n      <View style={styles(theme).addContainer}>\n        <TouchableOpacity onPress={toggleModal}>\n          <View style={styles(theme).FAB}>\n            <Icon name={'plus'} color={theme.text2} size={30} />\n          </View>\n        </TouchableOpacity>\n      </View>\n\n      <ActionSheetModal\n        isVisible={isDeleteModalVisible}\n        onBackdropPress={toggleDeleteModal}\n        height={55}\n        userStyle='light'\n      >\n        <TouchableOpacity\n          onPress={() => {\n            if (firebase.auth().currentUser.uid == 'LyenTwoXvUSGJvT14cpQUegAZXp1') {\n              toggleDeleteModal();\n              dispatch(setSnackMessage('This is a demo account'));\n              dispatch(toggleSnackBar());\n            } else {\n              deleteAvailability.mutate();\n            }\n          }}\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '100%',\n            height: '100%',\n            borderRadius: 20,\n          }}\n        >\n          <Icon name={'trash-can-outline'} color={theme.error} size={26} />\n          <Text style={{ textAlign: 'center', color: theme.error, fontSize: 26, fontWeight: '600', marginLeft: 10 }}>\n            Delete\n          </Text>\n        </TouchableOpacity>\n      </ActionSheetModal>\n\n      <BottomSheetModal\n        isVisible={isModalVisible}\n        onBackdropPress={toggleModal}\n        //onSwipeComplete={toggleModal}\n        swipeDown={false}\n        barSize={'none'}\n        height='90%'\n        userStyle='light'\n      >\n        <Snackbar\n          visible={isSnackVisible}\n          onDismiss={() => setSnackVisible(false)}\n          wrapperStyle={{ top: 0 }}\n          duration={2000}\n        >\n          <Text style={{ textAlign: 'center', color: theme.text1 }}>{snackMessage}</Text>\n        </Snackbar>\n\n        <View\n          style={{\n            height: '10%',\n            width: '100%',\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n            borderBottomWidth: 1,\n          }}\n        >\n          <BottomSheetModal.Header fontSize={24} verticalMargin={0}>\n            Add New Busy Time\n          </BottomSheetModal.Header>\n          <TouchableOpacity onPress={toggleModal} style={{ justifyContent: 'center', position: 'absolute', right: 15 }}>\n            <Icon name='close-circle' color={theme.grey2} size={26} />\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles(theme).modalBody}>\n          <View style={styles(theme).selectDay}>\n            <Text style={styles(theme).modalText}>Select Day: </Text>\n\n            <View style={{ width: '100%', height: '75%', alignItems: 'center' }}>\n              <Picker\n                selectedValue={selectedDay}\n                onValueChange={(itemValue, itemIndex) => {\n                  setSelectedDay(itemValue);\n                }}\n                style={\n                  Platform.OS === 'ios' ? { height: '100%', width: '80%' } : { height: 30, width: '70%', marginTop: 20 }\n                }\n                itemStyle={Platform.OS === 'ios' ? styles(theme).pickerItem : {}}\n              >\n                <Picker.Item label='Sunday' value={0} />\n                <Picker.Item label='Monday' value={1} />\n                <Picker.Item label='Tuesday' value={2} />\n                <Picker.Item label='Wednesday' value={3} />\n                <Picker.Item label='Thursday' value={4} />\n                <Picker.Item label='Friday' value={5} />\n                <Picker.Item label='Saturday' value={6} />\n              </Picker>\n            </View>\n          </View>\n\n          <View style={styles(theme).selectTime}>\n            <Text style={styles(theme).modalText}>Start Time: </Text>\n\n            <View style={styles(theme).timePickerBody}>\n              <Picker\n                selectedValue={startTime.hour}\n                onValueChange={(itemValue, itemIndex) => {\n                  setStartTime({ ...startTime, hour: itemValue });\n                }}\n                style={Platform.OS === 'ios' ? styles(theme).picker : { height: 30, width: '30%', marginTop: 20 }}\n                itemStyle={Platform.OS === 'ios' ? styles(theme).pickerItem : {}}\n              >\n                <Picker.Item label='12' value={0} />\n                <Picker.Item label='1' value={1} />\n                <Picker.Item label='2' value={2} />\n                <Picker.Item label='3' value={3} />\n                <Picker.Item label='4' value={4} />\n                <Picker.Item label='5' value={5} />\n                <Picker.Item label='6' value={6} />\n                <Picker.Item label='7' value={7} />\n                <Picker.Item label='8' value={8} />\n                <Picker.Item label='9' value={9} />\n                <Picker.Item label='10' value={10} />\n                <Picker.Item label='11' value={11} />\n              </Picker>\n              <Picker\n                selectedValue={startTime.minute}\n                onValueChange={(itemValue, itemIndex) => {\n                  setStartTime({ ...startTime, minute: itemValue });\n                }}\n                style={Platform.OS === 'ios' ? styles(theme).picker : { height: 30, width: '30%', marginTop: 20 }}\n                itemStyle={Platform.OS === 'ios' ? styles(theme).pickerItem : {}}\n              >\n                <Picker.Item label='00' value={0} />\n                <Picker.Item label='30' value={1} />\n              </Picker>\n              <Picker\n                selectedValue={startTime.day}\n                onValueChange={(itemValue, itemIndex) => {\n                  setStartTime({ ...startTime, day: itemValue });\n                }}\n                style={Platform.OS === 'ios' ? styles(theme).picker : { height: 30, width: '30%', marginTop: 20 }}\n                itemStyle={Platform.OS === 'ios' ? styles(theme).pickerItem : {}}\n              >\n                <Picker.Item label='AM' value={0} />\n                <Picker.Item label='PM' value={24} />\n              </Picker>\n            </View>\n          </View>\n\n          <View style={styles(theme).selectTime}>\n            <Text style={styles(theme).modalText}>End Time: </Text>\n\n            <View style={styles(theme).timePickerBody}>\n              <Picker\n                selectedValue={endTime.hour}\n                onValueChange={(itemValue, itemIndex) => {\n                  setEndTime({ ...endTime, hour: itemValue });\n                }}\n                style={Platform.OS === 'ios' ? styles(theme).picker : { height: 30, width: '30%', marginTop: 20 }}\n                itemStyle={Platform.OS === 'ios' ? styles(theme).pickerItem : {}}\n              >\n                <Picker.Item label='12' value={0} />\n                <Picker.Item label='1' value={1} />\n                <Picker.Item label='2' value={2} />\n                <Picker.Item label='3' value={3} />\n                <Picker.Item label='4' value={4} />\n                <Picker.Item label='5' value={5} />\n                <Picker.Item label='6' value={6} />\n                <Picker.Item label='7' value={7} />\n                <Picker.Item label='8' value={8} />\n                <Picker.Item label='9' value={9} />\n                <Picker.Item label='10' value={10} />\n                <Picker.Item label='11' value={11} />\n              </Picker>\n              <Picker\n                selectedValue={endTime.minute}\n                onValueChange={(itemValue, itemIndex) => {\n                  setEndTime({ ...endTime, minute: itemValue });\n                }}\n                style={Platform.OS === 'ios' ? styles(theme).picker : { height: 30, width: '30%', marginTop: 20 }}\n                itemStyle={Platform.OS === 'ios' ? styles(theme).pickerItem : {}}\n              >\n                <Picker.Item label='00' value={0} />\n                <Picker.Item label='30' value={1} />\n              </Picker>\n              <Picker\n                selectedValue={endTime.day}\n                onValueChange={(itemValue, itemIndex) => {\n                  setEndTime({ ...endTime, day: itemValue });\n                }}\n                style={Platform.OS === 'ios' ? styles(theme).picker : { height: 30, width: '30%', marginTop: 20 }}\n                itemStyle={Platform.OS === 'ios' ? styles(theme).pickerItem : {}}\n              >\n                <Picker.Item label='AM' value={0} />\n                <Picker.Item label='PM' value={24} />\n              </Picker>\n            </View>\n          </View>\n        </View>\n\n        <View style={styles(theme).modalFooter}>\n          <TouchableOpacity style={styles(theme).addBtn} onPress={toggleModal}>\n            <Text style={styles(theme).btnText}>Cancel</Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            style={[styles(theme).addBtn, { backgroundColor: theme.primary }]}\n            onPress={() => {\n              if (firebase.auth().currentUser.uid == 'LyenTwoXvUSGJvT14cpQUegAZXp1') {\n                toggleModal();\n                dispatch(setSnackMessage('This is a demo account'));\n                dispatch(toggleSnackBar());\n              } else {\n                postAvailability.mutate();\n              }\n            }}\n          >\n            <Text style={[styles(theme).btnText, { color: theme.text1 }]}>Add</Text>\n          </TouchableOpacity>\n        </View>\n      </BottomSheetModal>\n    </View>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    container: {\n      flex: 1,\n      padding: 0,\n      backgroundColor: theme.background,\n    },\n    text: {\n      textAlign: 'center',\n    },\n    modalText: {\n      fontSize: 18,\n      color: theme.text2,\n      textAlign: 'center',\n      padding: 0,\n    },\n    modalBody: {\n      alignItems: 'center',\n      width: '100%',\n      height: '80%',\n      marginTop: 10,\n      //justifyContent: 'space-evenly',\n      //borderWidth:1,\n    },\n    picker: {\n      height: '100%',\n      width: '35%',\n    },\n    pickerItem: {\n      height: '100%',\n    },\n    selectDay: {\n      alignItems: 'center',\n      width: '70%',\n      height: '23%',\n      //borderWidth:1,\n    },\n    selectTime: {\n      alignItems: 'center',\n      height: '35%',\n      width: '90%',\n    },\n    timePickerBody: {\n      flexDirection: 'row',\n      width: '100%',\n      height: '90%',\n      justifyContent: 'center',\n      //borderWidth:1,\n    },\n    modalFooter: {\n      flexDirection: 'row',\n      width: '100%',\n      height: '10%',\n      alignItems: 'center',\n      justifyContent: 'space-evenly',\n    },\n    addBtn: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '50%',\n      width: '40%',\n      height: '60%',\n      borderRadius: 15,\n    },\n    btnText: {\n      color: theme.text2,\n      fontSize: 24,\n      fontWeight: '600',\n    },\n    head: {\n      backgroundColor: theme.background,\n      height: 35,\n      borderBottomLeftRadius: 20,\n      borderBottomRightRadius: 20,\n      shadowColor: '#171717',\n      shadowOffset: { width: 0, height: -5 },\n      shadowOpacity: 0.9,\n      shadowRadius: 10,\n      elevation: 3,\n      overflow: 'visible',\n    },\n    row: {\n      height: cellHeight,\n      flexDirection: 'row',\n      borderBottomWidth: 1,\n      borderColor: '#cfcfcf',\n      //borderColor: '#a7aebe',\n    },\n    cell: {\n      height: cellHeight,\n      flexDirection: 'column',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      borderRightWidth: 1,\n      borderColor: '#cfcfcf',\n      //borderColor: '#a7aebe',\n      margin: 0,\n    },\n    btn: {\n      width: '92%',\n      height: 42,\n      backgroundColor: theme.primary,\n      borderRadius: 7,\n      borderWidth: 1,\n      alignSelf: 'center',\n    },\n    addContainer: {\n      position: 'absolute',\n      backgroundColor: '#00000000',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      right: 25,\n      bottom: 20,\n    },\n    FAB: {\n      height: 50,\n      width: 50,\n      backgroundColor: '#D2D5DC',\n      borderRadius: 12,\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  });\n","import React, { useState, useCallback, useRef, memo } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n  FlatList,\n  Dimensions,\n  Platform,\n  useWindowDimensions,\n  RefreshControl,\n  LayoutAnimation,\n  UIManager,\n  SafeAreaView,\n  Image,\n} from 'react-native';\nimport { Table, TableWrapper, Col, Cell } from 'react-native-table-component';\nimport { Divider, Badge } from 'react-native-paper';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Animated, { withSpring, useAnimatedStyle, useSharedValue } from 'react-native-reanimated';\nimport { FAB, Portal, Provider } from 'react-native-paper';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { createGroupSchedule } from '../backend/CreateGroupSchedule';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport { useTheme } from '../context/ThemeProvider';\nimport { useRefreshByUser } from '../hooks/useRefreshByUser';\nimport { ConfirmationModal } from '../components/ConfirmationModal';\nimport { BottomSheetModal } from '../components/BottomSheetModal';\nimport { ActionSheetModal } from '../components/ActionSheetModal';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { ErrorPage } from '../components/ErrorPage';\nimport { toggleSnackBar, setSnackMessage } from '../redux/reducers/snackbarSlice';\nimport tentemoji from '../assets/tentemoji.png';\n\nif (Platform.OS === 'android' && UIManager.setLayoutAnimationEnabledExperimental) {\n  UIManager.setLayoutAnimationEnabledExperimental(true);\n}\n\n//prettier-ignore\nconst times = [ //Times for right column of the list of times of the day\n  '12am', '1am', '2am', '3am', '4am', '5am', '6am', '7am', '8am', '9am', '10am', \n  '11am', '12am', '1pm', '2pm', '3pm', '4pm', '5pm', '6pm', '7pm', '8pm', '9pm',\n  '10pm', '11pm',\n];\n\n//Colors of each member, first is for 'empty'\n//prettier-ignore\nconst colors = ['#D0342C','#dd7e6b','#ea9999','#f9cb9c','#ffe599','#b6d7a8','#a2c4c9','#a4c2f4','#fed9c9','#b4a7d6','#d5a6bd','#e69138','#6aa84f',];\n\nlet prevColorCodes;\nlet prevSchedule = new Array();\n\nconst win = Dimensions.get('window'); //Global Var for screen size\n\nexport default function Schedule({ navigation }) {\n  const groupCode = useSelector((state) => state.user.currGroupCode);\n  const groupRole = useSelector((state) => state.user.currGroupRole);\n  const tentType = useSelector((state) => state.user.currTentType);\n\n  const [isReady, setIsReady] = useState(false);\n  const [isRefetching, setIsRefetching] = useState(false);\n  const [isModalVisible, setModalVisible] = useState(false); //for the popup for editing a time cell\n  const [isMemberModalVisible, setMemberModalVisible] = useState(false); //for the popup for choosing a member from list\n  const [isConfirmationVisible, setConfirmationVisible] = useState(false); //for confirmation Popup\n  const [fabState, setFabState] = useState({ open: false });\n  const [weekDisplay, setWeekDisplay] = useState('Current Week');\n  const [renderDay, setRenderDay] = useState('Sunday'); //stores the current day that is being rendered\n  const [newMember, setNewMember] = useState('Select a Member'); //to set the new member to replace old one\n\n  const oldMember = useRef('');\n  const editIndex = useRef(0);\n  const newSchedule = useRef([]);\n  const editSuccessful = useRef(false); //tentative for when editing schedule and member already exists, then it shouldn't change, otherwise it will\n  const scrollRef = useRef([]);\n  const colorCodes = useRef([{ id: 1, name: 'empty', color: '#ececec', changedHrs: 0 }]);\n\n  const { theme } = useTheme();\n  const dayHighlightOffset = useSharedValue(0);\n  const isCurrentWeek = useSharedValue(1);\n  const { open } = fabState;\n  const dispatch = useDispatch();\n\n  const { isLoading, isError, error, refetch, data } = useQuery(\n    ['groupSchedule', firebase.auth().currentUser.uid, groupCode, weekDisplay],\n    () => fetchGroupSchedule(groupCode, weekDisplay),\n    {\n      initialData: [],\n      onSuccess: () => {\n        setIsReady(true);\n        setIsRefetching(false);\n      },\n    }\n  );\n\n  const { isRefetchingByUser, refetchByUser } = useRefreshByUser(refetch);\n\n  async function fetchGroupSchedule(groupCode, weekDisplay) {\n    console.log('query initiated');\n\n    let currSchedule;\n    await firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .get()\n      .then((doc) => {\n        currSchedule = doc.data().groupSchedule;\n        prevSchedule = doc.data().previousSchedule;\n        colorCodes.current = doc.data().memberArr;\n        prevColorCodes = doc.data().previousMemberArr;\n      })\n      .catch((error) => {\n        console.error(error);\n        throw error;\n      });\n    if (weekDisplay == 'Current Week') {\n      //console.log('current week returned', currSchedule);\n      return currSchedule;\n    }\n    //console.log('previous week returned', prevSchedule);\n    return prevSchedule;\n  }\n\n  const postEditCell = useEditCell(groupCode, weekDisplay);\n\n  function useEditCell(groupCode, weekDisplay) {\n    const queryClient = useQueryClient();\n    return useMutation((options) => editCell(options), {\n      onError: (error) => {\n        console.error(error);\n      },\n      onSuccess: () => {\n        if (editSuccessful.current) {\n          queryClient.setQueryData(\n            ['groupSchedule', firebase.auth().currentUser.uid, groupCode, weekDisplay],\n            newSchedule.current\n          );\n        } else return;\n      },\n    });\n  }\n\n  //function for editing the schedule based on old member and new member to replace\n  async function editCell(options) {\n    const { index, oldMember, newMember, groupCode } = options;\n    const groupRef = firebase.firestore().collection('groups').doc(groupCode);\n\n    let currSchedule = data;\n    //Must check if the member already exists in the array\n    if (newMember !== 'empty' && data[index].trim().split(' ').includes(newMember)) {\n      dispatch(toggleSnackBar());\n      dispatch(setSnackMessage('Member already in chosen timeslot'));\n      editSuccessful.current = false;\n    } else {\n      currSchedule[index] = currSchedule[index].replace(oldMember, newMember);\n      const indexofOld = colorCodes.current.findIndex((object) => object.name === oldMember);\n      const indexofNew = colorCodes.current.findIndex((object) => object.name === newMember);\n\n      let oldHours;\n      let newHours;\n      let oldShifts;\n      let newShifts;\n      await groupRef\n        .collection('members')\n        .doc(colorCodes.current[indexofOld].id)\n        .get()\n        .then((doc) => {\n          oldHours = doc.data().scheduledHrs - 0.5;\n          oldShifts = doc.data().shifts;\n          oldShifts[index] = false;\n        });\n      await groupRef\n        .collection('members')\n        .doc(colorCodes.current[indexofNew].id)\n        .get()\n        .then((doc) => {\n          newHours = doc.data().scheduledHrs + 0.5;\n          newShifts = doc.data().shifts;\n          newShifts[index] = true;\n        });\n      groupRef.collection('members').doc(colorCodes.current[indexofOld].id).update({\n        scheduledHrs: oldHours,\n        shifts: oldShifts,\n      });\n      groupRef.collection('members').doc(colorCodes.current[indexofNew].id).update({\n        scheduledHrs: newHours,\n        shifts: newShifts,\n      });\n\n      //colorCodes.current[indexofOld].changedHrs -= 0.5;\n      //colorCodes.current[indexofNew].changedHrs += 0.5;\n\n      groupRef.update({\n        groupSchedule: currSchedule,\n      });\n\n      newSchedule.current = currSchedule;\n      editSuccessful.current = true;\n    }\n  }\n\n  const postSchedule = useUpdateSchedule(groupCode, tentType, weekDisplay);\n\n  function useUpdateSchedule(groupCode, tentType, weekDisplay) {\n    const queryClient = useQueryClient();\n    return useMutation(() => createNewGroupSchedule(groupCode, tentType), {\n      onError: (error) => {\n        console.error(error);\n      },\n      onSuccess: () => {\n        queryClient.setQueryData(\n          ['groupSchedule', firebase.auth().currentUser.uid, groupCode, weekDisplay],\n          newSchedule.current\n        );\n        queryClient.invalidateQueries(['shifts', firebase.auth().currentUser.uid, groupCode]);\n      },\n    });\n  }\n\n  async function createNewGroupSchedule(groupCode, tentType) {\n    //let newSchedule;\n    await createGroupSchedule(groupCode, tentType)\n      .then((groupSchedule) => {\n        //console.log('Group Schedule', groupSchedule);\n        newSchedule.current = groupSchedule;\n\n        //If current schedule is blank, no need to update\n        if (data[0] !== undefined) prevSchedule = data;\n\n        //Update previous colorCodes to current and update current schedule to the groupSchedule\n        prevColorCodes = colorCodes.current;\n        firebase\n          .firestore()\n          .collection('groups')\n          .doc(groupCode)\n          .update({\n            groupSchedule: newSchedule.current,\n            previousSchedule: prevSchedule,\n            previousMemberArr: colorCodes.current,\n          })\n          .catch((error) => console.error(error));\n        dispatch(setSnackMessage('New Schedule created'));\n        dispatch(toggleSnackBar());\n      })\n      .catch((error) => {\n        console.error(error);\n        dispatch(setSnackMessage('Not enough members'));\n        dispatch(toggleSnackBar());\n      });\n    //w schedule', newSchedule);\n  }\n\n  function toggleModal() {\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\n    //to toggle the edit cell popup\n    setModalVisible(!isModalVisible);\n  }\n\n  function toggleMemberModal() {\n    //to toggle the popup for the member list\n    setMemberModalVisible(!isMemberModalVisible);\n  }\n\n  function toggleConfirmation() {\n    //to toggle the popup for the edit confirmation\n    setConfirmationVisible(!isConfirmationVisible);\n  }\n\n  function onFabStateChange({ open }) {\n    setFabState({ open });\n  }\n\n  function toggleWeek() {\n    if (weekDisplay == 'Current Week') {\n      console.log('showing previous week', weekDisplay);\n      setWeekDisplay('Previous Week');\n      isCurrentWeek.value = 0;\n    } else {\n      console.log('showing current week');\n      setWeekDisplay('Current Week');\n      isCurrentWeek.value = 1;\n    }\n    setIsRefetching(true);\n    refetch();\n  }\n\n  const TimeColumn = memo(function () {\n    //component for side table of 12am-12am time segments\n    return (\n      <Table style={{ width: '7%', marginTop: -31 }}>\n        <Col\n          data={times}\n          heightArr={[62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62]}\n          textStyle={StyleSheet.flatten(styles(theme).timesText)}\n          //style={{  borderWidth: 1 }}\n        />\n      </Table>\n    );\n  });\n\n  //to render flatList in member list popup\n  const renderMember = ({ item }) => {\n    let height = win.height * 0.45 * (1 / colorCodes.current.length) + 8;\n    return (\n      <View style={{ width: '100%' }}>\n        <TouchableOpacity\n          onPress={() => {\n            setNewMember(item.name);\n            toggleMemberModal();\n            console.log('height', height);\n          }}\n          style={{ width: '100%' /* borderBottomWidth:1 */ }}\n        >\n          <View style={{ height: height, justifyContent: 'center' }}>\n            <Text style={{ textAlign: 'center', color: 'black', fontSize: 18 }}>{item.name}</Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  // Component for each single cell timeslot\n  //    Parameters:\n  //      index: index of cell within the entire schedule array\n  //      person: string holding the person currently scheduled for the time cell\n  const OneCell = memo(({ index, person }) => {\n    //changes background based on who the member is\n    const indexofUser =\n      weekDisplay == 'Current Week'\n        ? colorCodes.current.findIndex((object) => object.name == person)\n        : prevColorCodes.findIndex((object) => object.name == person);\n    //console.log(colorCodes.current);\n    //console.log('indexOfUser', indexofUser);\n    const backgroundColor =\n      indexofUser != -1\n        ? weekDisplay == 'Current Week'\n          ? colorCodes.current[indexofUser].color\n          : prevColorCodes[indexofUser].color\n        : '#fff'; //gets background color from the colorCodes Array\n    if (weekDisplay == 'Current Week' && (groupRole == 'Creator' || groupRole == 'Admin')) {\n      return (\n        <View\n          /* style={[   //trying to make border radius of table round\n            { flex: 1 }, \n            index==0 ? {borderTopLeftRadius:10, borderTopRightRadius:10}: \n              index==47 ? \n              {borderBottomLeftRadius:10, borderBottomRightRadius:10}: null]} */\n          style={{ flex: 1 }}\n        >\n          <TouchableOpacity\n            onPress={() => {\n              editIndex.current = index;\n              oldMember.current = person;\n              console.log('index: ', index);\n              toggleModal();\n            }}\n          >\n            <View style={[styles(theme).timeSlotBtn, { backgroundColor: backgroundColor }]}>\n              <Text\n                style={\n                  person == 'empty'\n                    ? [styles(theme).btnText, { color: theme.error, fontWeight: '700' }]\n                    : styles(theme).btnText\n                }\n                adjustsFontSizeToFit\n                minimumFontScale={0.5}\n                numberOfLines={1}\n              >\n                {person}\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      );\n    } else {\n      return (\n        <View style={{ flex: 1 }}>\n          <View style={[styles(theme).timeSlotBtn, { backgroundColor: backgroundColor }]}>\n            <Text\n              style={\n                person == 'empty'\n                  ? [styles(theme).btnText, { color: theme.error, fontWeight: '700' }]\n                  : styles(theme).btnText\n              }\n              adjustsFontSizeToFit\n              minimumFontScale={0.5}\n              numberOfLines={1}\n            >\n              {person}\n            </Text>\n          </View>\n        </View>\n      );\n    }\n  });\n\n  /*Component for each row to list the people in that time shift\n    # of people on the row is dependent on the tentType and time of day\n      Parameters: \n        index: index of cell within the day (range from 0-47) \n        arrayIndex: index of cell in the entire schedule array (range from 0-337)\n        members: string of one time shift (ex. \"member1 member2 member3 member4 \") */\n\n  const RenderCell = (index, arrayIndex, members) => {\n    const people = members.trim().split(' '); //stores the string as an array of single members\n    //console.log('people: ', people);\n\n    return (\n      <View style={styles(theme).row}>\n        <OneCell index={arrayIndex} person={people[0]} />\n        {people.length > 1 ? <OneCell index={arrayIndex} person={people[1]} /> : null}\n        {people.length > 2 ? <OneCell index={arrayIndex} person={people[2]} /> : null}\n        {people.length > 2 ? <OneCell index={arrayIndex} person={people[3]} /> : null}\n        {people.length > 2 ? <OneCell index={arrayIndex} person={people[4]} /> : null}\n        {people.length > 2 ? <OneCell index={arrayIndex} person={people[5]} /> : null}\n        {people.length > 6 ? <OneCell index={arrayIndex} person={people[6]} /> : null}\n        {people.length > 6 ? <OneCell index={arrayIndex} person={people[7]} /> : null}\n        {people.length > 6 ? <OneCell index={arrayIndex} person={people[8]} /> : null}\n        {people.length > 6 ? <OneCell index={arrayIndex} person={people[9]} /> : null}\n      </View>\n    );\n  };\n\n  //Component for the table for one day's schedule\n  const DailyTable = memo(function ({ day }) {\n    //if (schedule == undefined) return null;\n    let indexAdder = 0;\n    //depending on day parameter, change index in GLOBAL schedule array\n    switch (day) {\n      case 'Monday':\n        indexAdder = 48;\n        break;\n      case 'Tuesday':\n        indexAdder = 96;\n        break;\n      case 'Wednesday':\n        indexAdder = 144;\n        break;\n      case 'Thursday':\n        indexAdder = 192;\n        break;\n      case 'Friday':\n        indexAdder = 240;\n        break;\n      case 'Saturday':\n        indexAdder = 288;\n        break;\n      default:\n        indexAdder = 0;\n    }\n    let dayArr = data.slice(indexAdder, indexAdder + 48);\n    //console.log(day,\"||\", dayArr);\n    return (\n      <View style={{ marginTop: 0, width: '90%' }}>\n        <Table borderStyle={{ borderColor: 'transparent' }}>\n          {dayArr.map((rowData, index) => (\n            <TableWrapper key={index} style={StyleSheet.flatten(styles(theme).row)}>\n              <Cell\n                data={RenderCell(index, index + indexAdder, dayArr[index])}\n                textStyle={StyleSheet.flatten(styles(theme).text)}\n              />\n            </TableWrapper>\n          ))}\n        </Table>\n      </View>\n    );\n  });\n\n  const customSpringStyles = useAnimatedStyle(() => {\n    return {\n      transform: [\n        {\n          translateX: withSpring(dayHighlightOffset.value * (win.width / 7), {\n            damping: 50,\n            stiffness: 90,\n          }),\n        },\n      ],\n    };\n  });\n  const toggleWeekSpring = useAnimatedStyle(() => {\n    return {\n      transform: [\n        {\n          translateX: withSpring(isCurrentWeek.value * (win.width * 0.3), {\n            damping: 50,\n            stiffness: 90,\n          }),\n        },\n      ],\n    };\n  });\n\n  //Component for the top day buttons\n  const DayButton = ({ day, abbrev, value }) => {\n    return (\n      <TouchableOpacity\n        style={[styles(theme).button, { backgroundColor: 'transparent', zIndex: 2 }]}\n        onPress={() => {\n          setRenderDay(day);\n          dayHighlightOffset.value = value;\n          if (data.length != 0) {\n            scrollRef.current.scrollTo({ x: 0, y: 0, animated: true });\n          }\n        }}\n      >\n        <Text\n          style={\n            renderDay == day\n              ? [styles(theme).buttonText, { color: 'white' }]\n              : [styles(theme).buttonText, { color: 'black' }]\n          }\n        >\n          {abbrev}\n        </Text>\n        {renderDay == day ? (\n          <Badge size={8} style={{ alignSelf: 'center', backgroundColor: theme.text1 }}></Badge>\n        ) : null}\n      </TouchableOpacity>\n    );\n  };\n\n  if (isLoading || !isReady) {\n    return <LoadingIndicator />;\n  }\n\n  if (isError) {\n    return <ErrorPage navigation={navigation} />;\n  }\n\n  if (data.length == 0 && !isRefetching && weekDisplay != 'Previous Week') {\n    return (\n      <View style={styles(theme).emptyStateContainer}>\n        <Text>Group Schedule has not been created</Text>\n        <Image style={{ opacity: 0.5, height: '30%', width: '50%' }} resizeMode='contain' source={tentemoji} />\n        {groupRole != 'Member' ? (\n          <TouchableOpacity\n            style={{\n              width: '50%',\n              height: 50,\n              backgroundColor: theme.primary,\n              borderRadius: 30,\n              flexDirection: 'row',\n              justifyContent: 'center',\n              alignItems: 'center',\n              marginTop: 50,\n            }}\n            onPress={() => {\n              postSchedule.mutate();\n            }}\n          >\n            <Icon name='plus' color={theme.icon1} size={20} style={{ marginRight: 10 }} />\n            <Text style={{ color: theme.text1, fontSize: 15, fontWeight: '500' }}>Create Schedule</Text>\n          </TouchableOpacity>\n        ) : (\n          <Text>Ask the creator or an admin to create a new schedule</Text>\n        )}\n      </View>\n    );\n  }\n\n  return (\n    <Provider>\n      <View style={styles(theme).bigContainer}>\n        <ActionSheetModal\n          isVisible={isModalVisible}\n          onBackdropPress={toggleModal}\n          onSwipeComplete={toggleModal}\n          toggleModal={toggleModal}\n          userStyle={'light'}\n          cancelButton={true}\n          height={win.height * 0.15}\n        >\n          <TouchableOpacity onPress={toggleMemberModal} style={{ height: '50%', width: '100%' }}>\n            <View\n              style={{\n                flex: 1,\n                justifyContent: 'center',\n                alignItems: 'center',\n                borderBottomWidth: 1,\n                borderColor: '#cfcfcf',\n                flexDirection: 'row',\n              }}\n            >\n              <Text style={{ textAlign: 'center', fontSize: 24, color: 'black' }}>{newMember}</Text>\n              <Icon name='chevron-down' color={theme.icon2} size={30} style={{ marginLeft: 10 }} />\n            </View>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => {\n              if (newMember == 'Select a Member') {\n                toggleModal();\n              } else if (firebase.auth().currentUser.uid == 'LyenTwoXvUSGJvT14cpQUegAZXp1') {\n                toggleModal();\n                dispatch(setSnackMessage('This is a demo account'));\n                dispatch(toggleSnackBar());\n              } else {\n                toggleModal();\n                postEditCell.mutate({\n                  index: editIndex.current,\n                  oldMember: oldMember.current,\n                  newMember: newMember,\n                  groupCode: groupCode,\n                });\n              }\n            }}\n            style={{ height: '50%', width: '100%' }}\n          >\n            <View style={{ height: '100%', justifyContent: 'center' }}>\n              <Text\n                style={{\n                  textAlign: 'center',\n                  color: 'black',\n                  fontSize: 20,\n                  fontWeight: '500',\n                }}\n              >\n                Edit\n              </Text>\n            </View>\n          </TouchableOpacity>\n          <BottomSheetModal\n            isVisible={isMemberModalVisible}\n            onBackdropPress={() => setMemberModalVisible(false)}\n            onSwipeComplete={toggleMemberModal}\n            userStyle={'light'}\n          >\n            <View\n              style={{\n                marginTop: 10,\n                width: '90%',\n                //borderWidth: 1,\n                alignItems: 'center',\n                height: '92%',\n              }}\n            >\n              <View style={{ height: '100%', width: '100%' }}>\n                <FlatList\n                  data={colorCodes.current}\n                  renderItem={renderMember}\n                  ItemSeparatorComponent={() => <Divider />}\n                  keyExtractor={(item) => item.id}\n                />\n              </View>\n            </View>\n          </BottomSheetModal>\n        </ActionSheetModal>\n\n        <ConfirmationModal\n          toggleModal={toggleConfirmation}\n          body='Are you sure you want to create a new schedule? This will change the current schedule for all members and cannot be undone.'\n          buttonText='Create New Schedule'\n          buttonAction={() => {\n            if (firebase.auth().currentUser.uid == 'LyenTwoXvUSGJvT14cpQUegAZXp1') {\n              dispatch(setSnackMessage('This is a demo account'));\n              dispatch(toggleSnackBar());\n            } else {\n              postSchedule.mutate();\n            }\n          }}\n          isVisible={isConfirmationVisible}\n          userStyle={'light'}\n          onBackdropPress={() => setConfirmationVisible(false)}\n          onSwipeComplete={toggleConfirmation}\n        />\n\n        <View style={{ zIndex: 1 }}>\n          <View style={[styles(theme).buttonContainer, styles(theme).shadowProp]}>\n            <Animated.View style={[styles(theme).dayHighlight, customSpringStyles]} />\n            <DayButton day='Sunday' abbrev='Sun' value={0} />\n            <DayButton day='Monday' abbrev='Mon' value={1} />\n            <DayButton day='Tuesday' abbrev='Tue' value={2} />\n            <DayButton day='Wednesday' abbrev='Wed' value={3} />\n            <DayButton day='Thursday' abbrev='Thur' value={4} />\n            <DayButton day='Friday' abbrev='Fri' value={5} />\n            <DayButton day='Saturday' abbrev='Sat' value={6} />\n          </View>\n        </View>\n        <View style={{ width: '100%', justifyContent: 'center', alignItems: 'center' }}>\n          <View style={styles(theme).toggleWeekContainer}>\n            <Animated.View style={[styles(theme).toggleWeekHighlight, toggleWeekSpring]} />\n            <TouchableOpacity style={styles(theme).toggleWeekButton} onPress={toggleWeek}>\n              <Text>Previous</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles(theme).toggleWeekButton} onPress={toggleWeek}>\n              <Text>Current</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n\n        <View style={{ backgroundColor: '#D2D5DC', marginTop: 0, flex: 1, zIndex: 0 }}>\n          <ScrollView\n            showsVerticalScrollIndicator={false}\n            refreshControl={<RefreshControl enabled={true} refreshing={isRefetchingByUser} onRefresh={refetchByUser} />}\n            ref={scrollRef}\n            contentContainerStyle={{ paddingBottom: 30 }}\n            style={{ width: '100%' }}\n            removeClippedSubviews={true}\n          >\n            <View style={{ flexDirection: 'row', marginTop: 20, padding: 0, width: '100%' }}>\n              <TimeColumn />\n              <DailyTable day={renderDay} />\n            </View>\n          </ScrollView>\n        </View>\n\n        {groupRole != 'Member' ? (\n          <Portal>\n            <FAB.Group\n              open={open}\n              icon={'plus'}\n              style={{ position: 'absolute' }}\n              fabStyle={{ backgroundColor: '#9FA6B7' }}\n              actions={[\n                {\n                  icon: 'calendar',\n                  label: 'Create New Schedule',\n                  onPress: () => toggleConfirmation(),\n                },\n              ]}\n              onStateChange={onFabStateChange}\n              onPress={() => {\n                if (open) {\n                  // do something if the speed dial is open\n                }\n              }}\n            />\n          </Portal>\n        ) : null}\n      </View>\n    </Provider>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    bigContainer: {\n      flex: 1,\n      backgroundColor: '#D2D5DC',\n      flexGrow: 1,\n      overflow: 'hidden',\n    }, //for the entire page's container\n    emptyStateContainer: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      paddingBottom: '30%',\n      backgroundColor: theme.background,\n    },\n    text: { margin: 3 }, //text within cells\n    timesText: {\n      //text style for the side text of the list of times\n      fontWeight: '800',\n      fontSize: 9,\n      width: '100%',\n      textAlign: 'center',\n    },\n    dayHighlight: {\n      position: 'absolute',\n      backgroundColor: '#1F509Ad0',\n      width: win.width / 7,\n      height: 38,\n      borderRadius: 100,\n    },\n    toggleWeekContainer: {\n      borderRadius: 10,\n      width: '60%',\n      height: 30,\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n      borderWidth: 1,\n      marginTop: 20,\n      backgroundColor: '#FAFAFA',\n      padding: 1,\n      borderColor: '#fff',\n    },\n    toggleWeekHighlight: {\n      position: 'absolute',\n      width: '50%',\n      height: '100%',\n      left: 0,\n      borderRadius: 10,\n      backgroundColor: '#FCFCFC',\n      shadowColor: '#171717',\n      shadowOffset: { width: 0, height: 0 },\n      shadowOpacity: 0.2,\n      shadowRadius: 2,\n    },\n    toggleWeekButton: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100%',\n    },\n    buttonContainer: {\n      //container for the top buttons\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      borderBottomRightRadius: 20,\n      borderBottomLeftRadius: 20,\n      backgroundColor: theme.primaryContainer,\n    },\n    button: {\n      //for the day buttons at top of screen\n      backgroundColor: theme.grey3,\n      width: win.width / 7,\n      height: 38,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    buttonText: {\n      //text for day buttons\n      fontSize: 'auto',\n      fontWeight: '500',\n      textAlign: 'center',\n      color: 'black',\n    },\n    topEditBtn: {\n      //for top edit buttons below daybuttons\n      width: '100%',\n      backgroundColor: 'white',\n      justifyContent: 'center',\n      height: 32,\n    },\n    topEditBtnText: {\n      //text for the edit buttons\n      textAlign: 'center',\n      fontSize: 16,\n      fontWeight: '500',\n    },\n    dayHeader: {\n      //text for the header for the day\n      marginTop: 20,\n      fontSize: 28,\n      fontWeight: '700',\n      textAlign: 'center',\n    },\n    row: {\n      //style for one row of the table\n      flexDirection: 'row',\n      backgroundColor: 'lavender',\n      width: '100%',\n      height: 31,\n      alignItems: 'center',\n      borderBottomColor: 'black',\n      borderBottomWidth: 1,\n    },\n    timeSlotBtn: {\n      //Button for oneCell of the Table\n      height: 30,\n      backgroundColor: '#78B7BB',\n      paddingHorizontal: 1,\n      justifyContent: 'center',\n    },\n    btnText: {\n      //Text within one cell button\n      textAlign: 'center',\n      color: theme.text2,\n      fontWeight: '400',\n      fontSize: 11,\n    },\n    shadowProp: {\n      //shadows to apply\n      shadowColor: '#171717',\n      shadowOffset: { width: -3, height: 5 },\n      shadowOpacity: 0.4,\n      shadowRadius: 3,\n    },\n    fabStyle: {\n      bottom: 16,\n      right: win.width * 0.02,\n      position: 'absolute',\n    },\n  });\n","import React from 'react'\nimport {\n  Text,\n  View,\n  StyleSheet,\n} from \"react-native\";\n\nexport default function Monitor() {\n  return (\n    <View style={{justifyContent: 'center', alignItems: 'center'}}>\n      <Text style = {{fontSize: 30, fontWeight: '700'}}> COMING SOON ... </Text>\n    </View>\n  )\n}\n","import React, {useRef} from 'react';\nimport {\n  Text,\n  View,\n  Image,\n  StyleSheet,\n  SafeAreaView,\n  ScrollView,\n  TouchableOpacity,\n  Dimensions,\n} from 'react-native';\nimport {\n  Table,\n  TableWrapper,\n  Row,\n  Rows,\n  Col,\n} from 'react-native-table-component';\nimport { useTheme } from '../context/ThemeProvider';\n\nimport kvilleBoundary from '../assets/kvilleBoundary.jpg';\nimport kvillesign from '../assets/kvillesign.jpg';\n\n//DATA for The TABLES\nconst NIGHTHOURS = {\n  tableHead: ['', 'Sunday-Thursday', 'Friday and Saturday'],\n  tableTitle: ['Night'],\n  tableData: [['1 am - 7 am', '2:30 am - 7 am']],\n};\n\nconst BLACKTENT = {\n  tableData: [\n    ['Starting Dates', 'Jan *, 2023 - Feb *, 2023'],\n    [\n      'Occupancy Requirements',\n      ' \\u25CF TWO members of the tent must be on duty during the day.\\n\\u25CF TEN members during night hours',\n    ],\n  ],\n};\nconst BLUETENT = {\n  tableData: [\n    ['Starting Dates', 'Jan *, 2023 - Feb *, 2023'],\n    [\n      'Occupancy Requirements',\n      ' \\u25CF ONE member of the tent must be on duty during the day.\\n\\u25CF SIX members during night hours',\n    ],\n  ],\n};\nconst WHITETENT = {\n  tableData: [\n    ['Starting Dates', 'Feb *, 2023 - Feb *, 2023'],\n    [\n      'Occupancy Requirements',\n      ' \\u25CF ONE member of the tent must be on duty during the day.\\n\\u25CF TWO members during night hours',\n    ],\n  ],\n};\n\nconst window = Dimensions.get('window'); \n\nexport default function Info() {\n  const { theme } = useTheme();\n  const ratioSignImg = window.width / 1000;\n  //const ratioBoundaryImg = window.width / 1450;\n  //variables for geting y-position of headers\n  let hourPos, tentCheckPos, missPos, gracePos, tentPos, pCheckPos;\n  const ref = useRef(); //creates reference for scrollView\n\n  //render item for bullet points\n  const BulletPoint = ({ data }) => (\n    <View style={{ flexDirection: 'row' }}>\n      <Text style={{ fontSize: 30, paddingLeft: 30 }}>{'\\u25CF'}</Text>\n      <Text style={[styles(theme).contentText, { flex: 1 }]}>{data}</Text>\n    </View>\n  );\n\n  function autoScroll(yPos) {\n    //for auto-scolling to certain y-position\n    ref.current.scrollTo({ x: 0, y: yPos, animated: true });\n  }\n\n  return (\n    <SafeAreaView style={styles(theme).container}>\n      <View style={styles(theme).buttonContainer}>\n        <TouchableOpacity\n          style={styles(theme).button}\n          onPress={() => autoScroll(hourPos)}\n        >\n          <Text style={styles(theme).buttonText}>Hours</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={styles(theme).button}\n          onPress={() => autoScroll(tentCheckPos)}\n        >\n          <Text style={styles(theme).buttonText}>Tent Checks</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={styles(theme).button}\n          onPress={() => autoScroll(missPos)}\n        >\n          <Text style={styles(theme).buttonText}>Missed Checks</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={styles(theme).button}\n          onPress={() => autoScroll(gracePos)}\n        >\n          <Text style={styles(theme).buttonText}>Grace</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={styles(theme).button}\n          onPress={() => autoScroll(tentPos)}\n        >\n          <Text style={styles(theme).buttonText}>Tent Types</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={styles(theme).button}\n          onPress={() => autoScroll(pCheckPos)}\n        >\n          <Text style={styles(theme).buttonText}>P-Checks</Text>\n        </TouchableOpacity>\n      </View>\n\n      <ScrollView\n        style={{ marginHorizontal: 20, marginTop: 50 }}\n        ref={ref}\n        showsVerticalScrollIndicator={false}\n      >\n        <Text style={styles(theme).header}>Tenting Overview:</Text>\n\n        <View\n          style={{\n            width: '100%',\n            marginBottom: 10,\n          }}\n        >\n          <Image\n            style={{\n              width: window.width,\n              height: 568 * ratioSignImg,\n              resizeMode: 'contain',\n              alignSelf: 'center',\n            }}\n            source={kvillesign}\n          />\n        </View>\n\n        <Text style={styles(theme).contentText}>\n          A tent is comprised of a maximum of 12 people. Occupancy requirements\n          for each tenting period remain the same regardless of the number of\n          people in the tent.\n        </Text>\n\n        <Text\n          style={styles(theme).header}\n          onLayout={(event) => {\n            const layout = event.nativeEvent.layout;\n            hourPos = layout.y;\n          }}\n        >\n          Daytime Hours and Curfew\n        </Text>\n        <Text style={styles(theme).contentText}>\n          Tenters on duty must be within the K-Ville city limits at all times.\n          The number of tenters required at a given time varies based on the\n          current tenting period and the time of day.\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          Each day is divided into day and night hours. A different number of\n          tenters on duty is necessary from day to night.\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          Night Hours are defined as:\n        </Text>\n\n        <View style={{ marginHorizontal: 20 }}>\n          <Table borderStyle={{ borderWidth: 1.3 }}>\n            <Row\n              data={NIGHTHOURS.tableHead}\n              flexArr={[1.00001, 2, 2]}\n              style={StyleSheet.flatten(styles(theme).tableHead)}\n              textStyle={StyleSheet.flatten(styles(theme).tableText)}\n            />\n            <TableWrapper style={styles(theme).tableWrapper}>\n              <Col\n                data={NIGHTHOURS.tableTitle}\n                style={StyleSheet.flatten(styles(theme).tableTitle)}\n                heightArr={[28, 28]}\n                textStyle={StyleSheet.flatten(styles(theme).tableText)}\n              />\n              <Rows\n                data={NIGHTHOURS.tableData}\n                flexArr={[1.987, 1.987]}\n                style={StyleSheet.flatten(styles(theme).tableRow)}\n                textStyle={StyleSheet.flatten(styles(theme).tableText)}\n              />\n            </TableWrapper>\n          </Table>\n        </View>\n\n        <Text style={styles(theme).contentText}>\n          *All other times will count as Day Hours\n        </Text>\n        <View style={{ marginVertical: 15 }}></View>\n\n        <Text\n          style={styles(theme).header}\n          onLayout={(event) => {\n            const layout = event.nativeEvent.layout;\n            tentCheckPos = layout.y;\n          }}\n        >\n          Tent Checks\n        </Text>\n        <Text style={styles(theme).contentText}>\n          The Line Monitors may announce a tent check at their discretion. A\n          check will be signaled by the sounding of a bullhorn siren.\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          To check in, gather all members of your tent in the area between the\n          Card parking lot and the Schwartz-Butters plaza. Wait until the\n          required number of tenters are present to check in — we cannot check\n          in your tent until all required members are present.\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          Tents who have yet to be checked but appear to be missing will — at a\n          minimum — be given three warning calls over the bullhorn before being\n          marked as absent. After the final warning call, an additional 2\n          minutes will be given to allow for tenters to check in. After this\n          time elapses, the check is officially over.\n        </Text>\n\n        <Text style={[styles(theme).contentText, { fontWeight: '700' }]}>\n          Tenters must stay within K-Ville boundaries to be counted.\n        </Text>\n\n        <View\n          style={{\n            //flex: 1,\n            width: '100%',\n            marginBottom: 10,\n          }}\n        >\n          <Image\n            style={{\n              width: window.width,\n              height: 568 * ratioSignImg,\n              resizeMode: 'contain',\n              alignSelf: 'center',\n            }}\n            source={kvilleBoundary}\n          />\n        </View>\n\n        <Text style={styles(theme).contentText}>\n          Line Monitors cannot be held responsible for checks missed due to\n          tenters using the bathroom, failing to hear the siren, being asleep in\n          the tent, or similar related circumstances.\n        </Text>\n        <View style={{ marginVertical: 12 }}></View>\n\n        <Text\n          style={styles(theme).header}\n          onLayout={(event) => {\n            const layout = event.nativeEvent.layout;\n            missPos = layout.y;\n          }}\n        >\n          Missed Checks\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          Checking in entails each present group member presenting their Duke\n          Card to a Line Monitor. If the tent fails to complete this, the check\n          will be counted as a missed check for that tent.\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          Each tent is allowed one missed check per tenting period. Missing a\n          second check will result in the tent being bumped to the end of the\n          line, behind all registered tents.\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          An email from headlinemonitor@gmail.com to your tent captain within 24\n          hours will inform you of your miss. If you feel a miss has been\n          assigned in error, please contact the Head Line Monitors at\n          headlinemonitor@gmail.com to discuss your circumstances.\n        </Text>\n        <Text style={styles(theme).contentText}>\n          If K-Ville is at a maximum capacity, the tent will be dropped to the\n          end of the resultant wait list.\n        </Text>\n        <View style={{ marginVertical: 12 }}></View>\n\n        <Text\n          style={styles(theme).header}\n          onLayout={(event) => {\n            const layout = event.nativeEvent.layout;\n            gracePos = layout.y;\n          }}\n        >\n          Grace\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          A grace period may be announced in which no tent checks will be\n          called. During grace, tenters need not be on duty in K-Ville.\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          Grace shall be given on the following occasions:\n        </Text>\n\n        <BulletPoint data='For one hour after a tent check is completed.' />\n        <BulletPoint data='Two hours before and after a men’s or women’s home basketball game.' />\n        <BulletPoint data='One hour before and after a men’s or women’s away basketball game.' />\n        <BulletPoint data='For some heavy weather-related incidents.' />\n        <View style={{ marginVertical: 18 }}></View>\n\n        <Text\n          style={[\n            styles(theme).header,\n            styles(theme).tentHeaderBox,\n            { backgroundColor: theme.text2, color: theme.text1},\n          ]}\n          onLayout={(event) => {\n            const layout = event.nativeEvent.layout;\n            tentPos = layout.y;\n          }}\n        >\n          Black Tent\n        </Text>\n\n        <Text style={styles(theme).contentText}>\n          Black Tenting is the first period of the Tenting season. Following the\n          conclusion of Black Tenting, missed checks will clear and all Black\n          Tents will begin following Blue Tenting rules.\n        </Text>\n\n        <View style={{ marginHorizontal: 20 }}>\n          <Table borderStyle={{ borderWidth: 1.3 }}>\n            <TableWrapper style={styles(theme).tableWrapper}>\n              <Rows\n                data={BLACKTENT.tableData}\n                flexArr={[1, 1.987]}\n                style={StyleSheet.flatten(styles(theme).tentTableRow)}\n                textStyle={StyleSheet.flatten(styles(theme).tableText)}\n              />\n            </TableWrapper>\n          </Table>\n        </View>\n        <View style={{ marginVertical: 18 }}></View>\n\n        <Text\n          style={[\n            styles(theme).header,\n            styles(theme).tentHeaderBox,\n            { backgroundColor: 'blue', color: theme.text1 },\n          ]}\n        >\n          Blue Tent\n        </Text>\n        <Text style={styles(theme).contentText}>\n          Blue Tenting is the second period of the Tenting season. Following the\n          conclusion of Blue Tenting, missed checks will clear and all Black and\n          Blue Tents will begin following White Tenting rules.\n        </Text>\n\n        <View style={{ marginHorizontal: 20 }}>\n          <Table borderStyle={{ borderWidth: 1.3 }}>\n            <TableWrapper style={styles(theme).tableWrapper}>\n              <Rows\n                data={BLUETENT.tableData}\n                flexArr={[1, 1.987]}\n                style={StyleSheet.flatten(styles(theme).tentTableRow)}\n                textStyle={StyleSheet.flatten(styles(theme).tableText)}\n              />\n            </TableWrapper>\n          </Table>\n        </View>\n        <View style={{ marginVertical: 18 }}></View>\n\n        <Text\n          style={[\n            styles(theme).header,\n            styles(theme).tentHeaderBox,\n            { backgroundColor: theme.text1 },\n          ]}\n        >\n          White Tent\n        </Text>\n        <Text style={styles(theme).contentText}>\n          White Tenting is the third period of the Tenting season.\n        </Text>\n        <Text style={styles(theme).contentText}>\n          Given the high demand for White tents, the order of White tents will\n          be determined by a scavenger hunt.\n        </Text>\n\n        <View style={{ marginHorizontal: 20 }}>\n          <Table borderStyle={{ borderWidth: 1.3 }}>\n            <TableWrapper style={styles(theme).tableWrapper}>\n              <Rows\n                data={WHITETENT.tableData}\n                flexArr={[1, 1.987]}\n                style={StyleSheet.flatten(styles(theme).tentTableRow)}\n                textStyle={StyleSheet.flatten(styles(theme).tableText)}\n              />\n            </TableWrapper>\n          </Table>\n        </View>\n        <View style={{ marginVertical: 18 }}></View>\n\n        <Text\n          style={[\n            styles(theme).header,\n            styles(theme).tentHeaderBox,\n            { backgroundColor: theme.grey6 },\n          ]}\n        >\n          Flex Tent\n        </Text>\n        <Text style={styles(theme).contentText}>\n          Flex Tenting abides by the same rules and regulations as White\n          Tenting, but Flex tents are NOT GUARANTEED a spot in the Carolina\n          game.\n        </Text>\n        <Text style={styles(theme).contentText}>\n          These tenting spots will be filled through the Race to the Secret\n          Spots. The 31st to 60th groups to complete the Race to the Secret\n          Spots will receive Flex Tenting spots.\n        </Text>\n        <Text style={styles(theme).contentText}>\n          All groups after the 60th group to complete the Race to the Secret\n          Spots will be added to the Flex Tenting wait list.\n        </Text>\n\n        <Text\n          style={styles(theme).header}\n          onLayout={(event) => {\n            const layout = event.nativeEvent.layout;\n            pCheckPos = layout.y;\n          }}\n        >\n          Personal Checks\n        </Text>\n        <Text style={styles(theme).contentText}>\n          P-Checks are conducted on an individual basis. Therefore, an entire\n          tent will not be penalized should a member of their tent miss too many\n          Personal Checks.\n        </Text>\n        <Text style={styles(theme).contentText}>\n          Five Personal Checks will be called at any time on **insert date**\n        </Text>\n        <Text style={[styles(theme).contentText, { fontWeight: '700' }]}>\n          To obtain a wristband for the Carolina game, a tenter must check in at\n          THREE of the FIVE checks.\n        </Text>\n        <Text style={styles(theme).contentText}>\n          Individuals who fail to report to three of the five Personal Checks\n          will be ineligible to receive a wristband for the Carolina game. Those\n          students will not, however, penalize the other members in their tent\n        </Text>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: theme.background,\n      flexDirection: 'column',\n    },\n    buttonContainer: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      //marginHorizontal: 20,\n      //marginTop: 2,\n      width: '100%'\n    },\n    button: {\n      backgroundColor: theme.primary,\n      width: window.width/6,\n      height: 50,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    buttonText: {\n      //fontSize: 'auto',\n      fontWeight: '500',\n      textAlign: 'center',\n      color: theme.text1,\n    },\n    header: {\n      marginVertical: 10,\n      marginHorizontal: 15,\n      fontSize: 28,\n      fontWeight: '700',\n    },\n    contentText: {\n      fontSize: 18,\n      fontWeight: '400',\n      marginHorizontal: 24,\n      marginVertical: 10,\n      color: theme.text2,\n    },\n\n    tentHeaderBox: {\n      width: '',\n      height: 40,\n      borderRadius: 20,\n      textAlign: 'center',\n    },\n    tableHead: { height: 40, backgroundColor: 'lavender' },\n    tableWrapper: { flexDirection: 'row' },\n    tableTitle: { flex: 1, backgroundColor: 'lavender' },\n    tableRow: { height: 28 },\n    tableText: {\n      fontSize: 12,\n      fontWeight: '500',\n      textAlign: 'center',\n    },\n    tentTableRow: { height: 95 },\n  });\n","import React, { useState, useRef } from 'react';\nimport { Text, View, StyleSheet, SectionList, RefreshControl, Image } from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { useSelector } from 'react-redux';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport { useTheme } from '../context/ThemeProvider';\nimport { useRefreshByUser } from '../hooks/useRefreshByUser';\nimport { LoadingIndicator } from '../components/LoadingIndicator';\nimport { ErrorPage } from '../components/ErrorPage';\nimport tentemoji from '../assets/tentemoji.png';\n\nconst dayMapping = {\n  0: 'Sunday',\n  1: 'Monday',\n  2: 'Tuesday',\n  3: 'Wednesday',\n  4: 'Thursday',\n  5: 'Friday',\n  6: 'Saturday',\n};\nconst timeOfDayMapping = {\n  0: 'AM',\n  1: 'PM',\n};\nconst minMapping = {\n  0: '00',\n  1: '30',\n};\nconst colorMapping = {\n  'Morning Shift': '#FDF1DB',\n  'Afternoon Shift': '#FCEBE5',\n  'Night Shift': '#E5DBFF',\n};\n\nexport default function Shifts({ navigation }) {\n  const groupCode = useSelector((state) => state.user.currGroupCode);\n\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [isDeleteModalVisible, setDeleteModalVisible] = useState(false);\n  const [isReady, setIsReady] = useState(false);\n\n  const { theme } = useTheme();\n  const shifts = useRef();\n\n  const { isLoading, isError, error, data, refetch } = useQuery(\n    ['shifts', firebase.auth().currentUser.uid, groupCode],\n    () => fetchCurrentUserShifts(groupCode),\n    { initialData: [], onSuccess: () => setIsReady(true) }\n  );\n  const { isRefetchingByUser, refetchByUser } = useRefreshByUser(refetch);\n\n  async function fetchCurrentUserShifts(groupCode) {\n    //let shifts;\n    await firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .collection('members')\n      .doc(firebase.auth().currentUser.uid)\n      .get()\n      .then((doc) => {\n        shifts.current = doc.data().shifts;\n        //console.log('shifts fetched from firebase', shifts);\n      });\n    let parsedShifts = [\n      {\n        title: 'Sunday',\n        data: [],\n      },\n      {\n        title: 'Monday',\n        data: [],\n      },\n      {\n        title: 'Tuesday',\n        data: [],\n      },\n      {\n        title: 'Wednesday',\n        data: [],\n      },\n      {\n        title: 'Thursday',\n        data: [],\n      },\n      {\n        title: 'Friday',\n        data: [],\n      },\n      {\n        title: 'Saturday',\n        data: [],\n      },\n    ];\n    for (let i = 0; i < shifts.current.length; i++) {\n      if (shifts.current[i]) {\n        const start = i;\n        const startDay = Math.floor(start / 48);\n\n        while (i < shifts.current.length && shifts.current[i]) {\n          i++;\n        }\n        const end = i - 1;\n        parsedShifts[startDay].data.push({ start: start, end: end });\n      }\n    }\n    return parsedShifts;\n  }\n\n  function isEmpty(shifts) {\n    for (let i = 0; i < shifts.length; i++) {\n      if (shifts[i].data.length != 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  const postShiftUpdate = useShiftUpdate(groupCode);\n\n  function useShiftUpdate(groupCode) {\n    const queryClient = useQueryClient();\n    return useMutation((options) => markComplete(options), {\n      onError: (error) => {\n        console.error(error);\n      },\n      onSuccess: (data) => {\n        //console.log('new shift', newParsedShifts.current);\n        queryClient.setQueryData(['shifts', firebase.auth().currentUser.uid, groupCode], data);\n      },\n    });\n  }\n\n  function markComplete(options) {\n    const { item, groupCode } = options;\n\n    let newShifts = shifts.current;\n    for (let i = item.start; i <= item.end; i++) {\n      newShifts[i] = false;\n    }\n    firebase\n      .firestore()\n      .collection('groups')\n      .doc(groupCode)\n      .collection('members')\n      .doc(firebase.auth().currentUser.uid)\n      .update({\n        shifts: newShifts,\n      });\n\n    let parsedShifts = data;\n    parsedShifts.splice(item.id, 1);\n\n    return parsedShifts;\n  }\n\n  function toggleModal() {\n    setModalVisible(!isModalVisible);\n  }\n  function toggleDeleteModal() {\n    setDeleteModalVisible(!isDeleteModalVisible);\n  }\n\n  const RenderShift = ({ item }) => {\n    const startDay = Math.floor(item.start / 48);\n    const startTime = item.start - 48 * startDay;\n    const startTimeOfDay = Math.floor(startTime / 24);\n    const startHour =\n      Math.floor((startTime - 24 * startTimeOfDay) / 2) == 0 ? 12 : Math.floor((startTime - 24 * startTimeOfDay) / 2);\n    const startMin = startTime % 2;\n    // console.log('item start time', item.start);\n    // console.log('startDay: ' + startDay + '; startTime: ' +  startTime);\n\n    const endDay = Math.floor(item.end / 48);\n    const endTime = item.end - 48 * endDay;\n    const endTimeOfDay = Math.floor(endTime / 24);\n    const endHour =\n      Math.floor((endTime - 24 * endTimeOfDay) / 2) == 0 ? 12 : Math.floor((endTime - 24 * endTimeOfDay) / 2);\n    const endMin = endTime % 2;\n\n    const shiftTime =\n      startHour > 6 && startTimeOfDay == 0\n        ? 'Morning Shift'\n        : startHour > 0 && startHour <= 5 && startTimeOfDay == 1\n        ? 'Afternoon Shift'\n        : 'Night Shift';\n    //const sameDay = dayMapping[startDay] != dayMapping[endDay];\n\n    return (\n      <View style={[styles(theme).listItem, styles(theme).shadowProp, { backgroundColor: colorMapping[shiftTime] }]}>\n        <View style={{ flexDirection: 'row', width: '100%', alignItems: 'center', height: '60%' }}>\n          <Icon name='clock-outline' color={theme.grey1} size={20} />\n          <Text style={styles(theme).timeText}>\n            {startHour} : {minMapping[startMin]} {timeOfDayMapping[startTimeOfDay]} - {endHour} : {minMapping[endMin]}{' '}\n            {timeOfDayMapping[endTimeOfDay]}\n          </Text>\n        </View>\n        <View style={{ borderTopWidth: 1, width: '100%', height: '40%', justifyContent: 'center' }}>\n          <Text style={styles(theme).listText}>{shiftTime}</Text>\n        </View>\n      </View>\n    );\n  };\n\n  if (isLoading || !isReady) {\n    return <LoadingIndicator />;\n  }\n\n  if (isError) {\n    return <ErrorPage navigation={navigation} />;\n  }\n\n  if (isEmpty(data)) {\n    return (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n          paddingBottom: '30%',\n          backgroundColor: theme.background,\n        }}\n      >\n        <Text>No Shifts have been assigned to you</Text>\n        <Image style={{ opacity: 0.5, height: '30%', width: '50%' }} resizeMode='contain' source={tentemoji} />\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles(theme).screenContainer}>\n      <SectionList\n        sections={data}\n        keyExtractor={(item, index) => item + index}\n        renderItem={RenderShift}\n        renderSectionHeader={({ section: { title, data } }) =>\n          data.length != 0 ? <Text style={styles(theme).sectionHeader}>{title}</Text> : null\n        }\n        renderSectionFooter={() => <View style={{ marginBottom: 10 }}></View>}\n        refreshControl={<RefreshControl enabled={true} refreshing={isRefetchingByUser} onRefresh={refetchByUser} />}\n        showsVerticalScrollIndicator={false}\n        stickySectionHeadersEnabled={false}\n      />\n    </View>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    screenContainer: {\n      flex: 1,\n      backgroundColor: theme.background, //'#D2D5DC',\n      //paddingVertical: 15,\n    }, //for the entire page's container\n    listItem: {\n      //for the items for each group\n      flexDirection: 'column',\n      //justifyContent: 'space-between',\n      alignItems: 'start',\n      padding: 8,\n      marginVertical: 7,\n      borderRadius: 10,\n      alignSelf: 'center',\n      width: '90%',\n      height: 90,\n    },\n    listText: {\n      //for the text inside the group cards\n      fontSize: 15,\n      fontWeight: '400',\n      color: theme.grey1,\n    },\n    timeText: {\n      color: theme.grey1,\n      textAlign: 'center',\n      marginLeft: 10,\n      fontSize: 15,\n      fontWeight: '500',\n    },\n    sectionHeader: {\n      fontSize: 24,\n      marginLeft: '6%',\n      marginTop: 10,\n      color: theme.grey1,\n    },\n    shadowProp: {\n      //shadow for the group cards\n      shadowColor: '#171717',\n      shadowOffset: { width: -2, height: 4 },\n      shadowOpacity: 0.2,\n      shadowRadius: 5,\n      elevation: 20,\n    },\n  });\n","import React from 'react';\nimport { Text, View, TouchableWithoutFeedback} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Snackbar } from 'react-native-paper';\n\nimport { toggleSnackBar } from '../redux/reducers/snackbarSlice';\nimport { useTheme } from '../context/ThemeProvider';\n\nconst CustomizedSnackbar = () => {\n  const dispatch = useDispatch();\n  const snackbarOpen = useSelector((state) => state.snackbar.snackbarOpen);\n  const snackbarMessage = useSelector((state) => state.snackbar.snackbarMessage);\n  const { theme } = useTheme();\n\n  return (\n    <TouchableWithoutFeedback onPress={() => dispatch(toggleSnackBar())}>\n      <Snackbar\n        visible={snackbarOpen}\n        onDismiss={() => dispatch(toggleSnackBar())}\n        wrapperStyle={{ top: 0 }}\n        duration={2000}\n        elevation={5}\n      >\n        <Text style={{ textAlign: 'center', color: theme.text1 }}>{snackbarMessage}</Text>\n      </Snackbar>\n    </TouchableWithoutFeedback>\n  );\n};\n\nexport default CustomizedSnackbar;\n","import 'react-native-gesture-handler'; //must be at top\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View, ScrollView, TextInput } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { Linking, Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { IconButton } from 'react-native-paper';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useDispatch } from 'react-redux';\nimport { StatusBar } from 'expo-status-bar';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nimport StackNavigator from './StackNavigator';\nimport HomeScreen from '../screens/Home';\nimport CreateGroupScreen from '../screens/CreateGroup';\nimport JoinGroupScreen from '../screens/JoinGroup';\nimport GroupInfoScreen from '../screens/GroupInfo';\nimport DrawerContent from '../screens/DrawerContent';\nimport AvailabilityScreen from '../screens/Availability';\nimport ScheduleScreen from '../screens/Schedule';\nimport MonitorScreen from '../screens/Monitor';\nimport InfoScreen from '../screens/Info';\nimport ShiftsScreen from '../screens/Shifts';\nimport { setCurrentUser, reset } from '../redux/reducers/userSlice';\nimport { useTheme } from '../context/ThemeProvider';\nimport { ActionSheetModal } from '../components/ActionSheetModal';\nimport Snackbar from '../components/Snackbar';\n\nconst Drawer = createDrawerNavigator();\nconst PERSISTENCE_KEY = 'NAVIGATION_STATE_V1';\n\nexport default function NavigationStack() {\n  //uncomment this to reset redux states\n  //const dispatch = useDispatch();\n  //dispatch(reset());\n  const [isReady, setIsReady] = useState(false);\n  const [initialState, setInitialState] = useState();\n  const [isInfoVisible, setInfoVisible] = useState(false);\n  const [isScheduleInfoVisible, setScheduleInfoVisible] = useState(false);\n  const { theme } = useTheme();\n  const dispatch = useDispatch();\n\n  function toggleInfo() {\n    setInfoVisible(!isInfoVisible);\n  }\n\n  function toggleScheduleInfo() {\n    setScheduleInfoVisible(!isScheduleInfoVisible);\n  }\n\n  const AvailabilityText = () => (\n    <View style={{ flex: 1, paddingBottom: 20 }}>\n      <Text style={styles(theme).InfoText}>\n        This page is for your availability throughout the week. You will input what times of the week you are not\n        available for tenting.\n      </Text>\n      <Text style={styles(theme).InfoText}>\n        To do so, click the add button on the bottom right to add a new busy time and input the day, start time, and end\n        time.\n      </Text>\n      <Text style={styles(theme).InfoText}>\n        Do this for your entire weekly schedule. You can delete blocks to edit your times.\n      </Text>\n      <Text style={styles(theme).InfoText}>\n        This schedule remains the same from week to week, but you may edit every week if you have changes to your schedule.\n      </Text>\n      <Text style={styles(theme).InfoText}>\n        Make sure to fill out your availability every week before you Create a New Group Schedule or your busy times\n        will not be accounted for in the group schedule.\n      </Text>\n      <Text style={styles(theme).InfoText}>\n        NOTE*: If you mark yourself as available at 1am on a day, you will be marked available for the whole night shift\n        from 1am to 7am. So make sure to mark 1am as busy to account for the night shift.\n      </Text>\n    </View>\n  );\n\n  const ScheduleText = () => (\n    <View style={{ flex: 1, paddingBottom: 20 }}>\n      <Text style={styles(theme).InfoText}>\n        This page is for your group schedule for the week (from Sunday to Saturday midnight).\n      </Text>\n      <Text style={styles(theme).InfoText}>\n        Groups should aim to create a new weekly schedule every week after members fill out their availability for that\n        week.\n      </Text>\n      <Text style={styles(theme).InfoText}>\n        Once all members of the group have filled out their availability for the week, an admin should create a new\n        group schedule.\n      </Text>\n      <Text style={styles(theme).InfoText}>\n        After the schedule is made, admins can make edits by clicking on the time slot and changing the member for that\n        time.\n      </Text>\n      <Text style={styles(theme).InfoText}>\n        Colors for the time shifts correspond with each member. Blocks labeled \"empty\" means no one is available at \n        that time and need to be addressed (this can be done by having an admin edit the schedule to fill in those \n        empty spots).\n      </Text>\n      <Text style={styles(theme).InfoText}>\n        The page also displays the previous schedule (labeled \"previous\") for the group's reference.\n      </Text>\n    </View>\n  );\n\n  //Navigation State persistence, saves user's location in app\n  useEffect(() => {\n    let mounted = true;\n\n    firebase\n      .firestore()\n      .collection('users')\n      .doc(firebase.auth().currentUser.uid)\n      .get()\n      .then((snapshot) => {\n        if (mounted && snapshot.exists) {\n          dispatch(setCurrentUser(snapshot.data()));\n        } else {\n          console.log('does not exist');\n        }\n      })\n      .then(() => {\n        console.log('cleared data and fetched user');\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    const restoreState = async () => {\n      try {\n        const initialUrl = await Linking.getInitialURL();\n        console.log('initialUrl', initialUrl);\n\n        if (Platform.OS !== 'web' /*&& initialUrl == null*/) {\n          // Only restore state if there's no deep link and we're not on web\n          const savedStateString = await AsyncStorage.getItem(PERSISTENCE_KEY);\n          const state = savedStateString ? JSON.parse(savedStateString) : undefined;\n          //console.log('state', state);\n          if (state !== undefined) {\n            setInitialState(state);\n          }\n        }\n      } finally {\n        setIsReady(true);\n      }\n    };\n    if (!isReady) {\n      restoreState();\n    }\n    return () => (mounted = false);\n  }, [isReady]);\n\n  if (!isReady) {\n    return null;\n  }\n\n  return (\n    <View style={{ flex: 1, zIndex: 1 }}>\n      <NavigationContainer\n        initialState={initialState}\n        //onReady={onLayoutRootView}\n        onStateChange={(state) => {\n          AsyncStorage.setItem(PERSISTENCE_KEY, JSON.stringify(state));\n        }}\n      >\n        <Drawer.Navigator\n          initialRouteName='Start'\n          drawerContent={(props) => <DrawerContent {...props} />}\n          screenOptions={{ drawerType: 'front' }}\n        >\n          <Drawer.Screen\n            name='Home'\n            component={HomeScreen}\n            options={{\n              headerShown: false,\n              swipeEnabled: false,\n            }}\n          />\n          <Drawer.Screen\n            name='CreateGroup'\n            component={CreateGroupScreen}\n            options={{\n              headerShown: false,\n              swipeEnabled: false,\n            }}\n          />\n          <Drawer.Screen\n            name='StackNavigator'\n            component={StackNavigator}\n            options={{\n              headerShown: false,\n              swipeEnabled: false,\n            }}\n          />\n          <Drawer.Screen\n            name='JoinGroup'\n            component={JoinGroupScreen}\n            options={{\n              headerShown: false,\n              swipeEnabled: false,\n            }}\n          />\n          <Drawer.Screen\n            name='GroupInfo'\n            component={GroupInfoScreen}\n            options={{\n              headerShown: false,\n              swipeEnabled: true,\n            }}\n          />\n          <Drawer.Screen\n            name='AvailabilityScreen'\n            component={AvailabilityScreen}\n            options={({ navigation }) => ({\n              title: 'Availability',\n              headerStyle: {\n                backgroundColor: theme.primaryContainer,\n                borderBottomWidth: 0,\n                shadowColor: 'transparent',\n              },\n              headerLeft: () => <IconButton icon='menu' size={25} onPress={() => navigation.openDrawer()}></IconButton>,\n              headerRight: () => (\n                <View>\n                  <TouchableOpacity\n                    onPress={() => {\n                      toggleInfo();\n                    }}\n                    style={{ marginRight: 20 }}\n                  >\n                    <Icon name='help-circle-outline' color={'black'} size={25} />\n                  </TouchableOpacity>\n\n                  <ActionSheetModal\n                    isVisible={isInfoVisible}\n                    onBackdropPress={toggleInfo}\n                    swipeDown={false}\n                    height={350}\n                    userStyle={'light'}\n                  >\n                    <View style={styles(theme).popUpHeaderView}>\n                      <View style={{ flexDirection: 'row' }}>\n                        <Icon name='lightbulb' color={theme.grey2} size={40} style={{ marginRight: 15 }} />\n                        <View>\n                          <Text style={{ fontWeight: '500' }}>Helpful Tips</Text>\n                          <Text style={{ fontSize: 15, fontWeight: '700' }}>How to use the Availability Page</Text>\n                        </View>\n                      </View>\n                      <TouchableOpacity onPress={toggleInfo}>\n                        <Icon name='close-circle' color={theme.grey2} size={32} style={{ marginTop: 4 }} />\n                      </TouchableOpacity>\n                    </View>\n\n                    <ScrollView\n                      showsVerticalScrollIndicator={false}\n                      style={styles(theme).textView}\n                      scrollToOverflowEnabled={true}\n                    >\n                      <AvailabilityText />\n                    </ScrollView>\n\n                    <View style={{ height: '13%', width: '100%', justifyContent: 'center', alignItems: 'center' }}>\n                      <TouchableOpacity onPress={toggleInfo} style={styles(theme).closeBtn}>\n                        <Text style={{ color: theme.text1, fontSize: 20, fontWeight: '600' }}>Ok</Text>\n                      </TouchableOpacity>\n                    </View>\n                  </ActionSheetModal>\n                </View>\n              ),\n            })}\n          />\n          <Drawer.Screen\n            name='ShiftsScreen'\n            component={ShiftsScreen}\n            options={({ navigation }) => ({\n              title: 'Shifts This Week',\n              headerStyle: {\n                backgroundColor: theme.primaryContainer,\n                borderBottomWidth: 0,\n                shadowColor: '#171717',\n                shadowOffset: { width: -2, height: 4 },\n                shadowOpacity: 0.2,\n                shadowRadius: 5,\n                elevation: 20,\n              },\n              headerLeft: () => <IconButton icon='menu' size={25} onPress={() => navigation.openDrawer()}></IconButton>,\n            })}\n          />\n          <Drawer.Screen\n            name='ScheduleScreen'\n            component={ScheduleScreen}\n            options={({ navigation }) => ({\n              title: 'Group Schedule',\n              headerStyle: {\n                backgroundColor: theme.primaryContainer,\n                borderBottomWidth: 0,\n                shadowColor: 'transparent',\n              },\n              headerLeft: () => <IconButton icon='menu' size={25} onPress={() => navigation.openDrawer()}></IconButton>,\n              headerRight: () => (\n                <View>\n                  <TouchableOpacity\n                    onPress={() => {\n                      toggleScheduleInfo();\n                    }}\n                    style={{ marginRight: 20 }}\n                  >\n                    <Icon name='help-circle-outline' color={'black'} size={25} />\n                  </TouchableOpacity>\n\n                  <ActionSheetModal\n                    isVisible={isScheduleInfoVisible}\n                    onBackdropPress={toggleScheduleInfo}\n                    swipeDown={false}\n                    height={350}\n                    userStyle={'light'}\n                  >\n                    <View style={styles(theme).popUpHeaderView}>\n                      <View style={{ flexDirection: 'row' }}>\n                        <Icon name='lightbulb' color={theme.grey2} size={40} style={{ marginRight: 15 }} />\n                        <View>\n                          <Text style={{ fontWeight: '500' }}>Helpful Tips</Text>\n                          <Text style={{ fontSize: 16, fontWeight: '700' }}>How to use the Schedule Page</Text>\n                        </View>\n                      </View>\n                      <TouchableOpacity onPress={toggleScheduleInfo}>\n                        <Icon name='close-circle' color={theme.grey2} size={32} style={{ marginTop: 4 }} />\n                      </TouchableOpacity>\n                    </View>\n\n                    <ScrollView\n                      showsVerticalScrollIndicator={false}\n                      style={styles(theme).textView}\n                      scrollToOverflowEnabled={true}\n                    >\n                      <ScheduleText />\n                    </ScrollView>\n\n                    <View style={{ height: '13%', width: '100%', justifyContent: 'center', alignItems: 'center' }}>\n                      <TouchableOpacity onPress={toggleScheduleInfo} style={styles(theme).closeBtn}>\n                        <Text style={{ color: theme.text1, fontSize: 20, fontWeight: '600' }}>Ok</Text>\n                      </TouchableOpacity>\n                    </View>\n                  </ActionSheetModal>\n                </View>\n              ),\n            })}\n          />\n          <Drawer.Screen\n            name='MonitorScreen'\n            component={MonitorScreen}\n            options={({ navigation }) => ({\n              title: '',\n              headerStyle: {\n                backgroundColor: theme.primaryContainer,\n                borderBottomWidth: 0,\n                shadowColor: 'transparent',\n              },\n              headerLeft: () => <IconButton icon='menu' size={25} onPress={() => navigation.openDrawer()}></IconButton>,\n            })}\n          />\n          <Drawer.Screen\n            name='InfoScreen'\n            component={InfoScreen}\n            options={({ navigation }) => ({\n              title: 'Tenting Information',\n              headerStyle: {\n                backgroundColor: theme.primaryContainer,\n                borderBottomWidth: 0,\n                shadowColor: 'transparent',\n              },\n              headerLeft: () => <IconButton icon='menu' size={25} onPress={() => navigation.openDrawer()}></IconButton>,\n            })}\n          />\n        </Drawer.Navigator>\n        <StatusBar style='dark' />\n        <Snackbar />\n      </NavigationContainer>\n    </View>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    popUpHeaderView: {\n      //view of the header of the info popup modal\n      flexDirection: 'row',\n      height: '18%',\n      width: '94%',\n      marginTop: '2%',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    },\n    textView: {\n      height: '80%',\n      width: '94%',\n      backgroundColor: '#f3f3f3',\n      borderRadius: 18,\n      paddingVertical: 10,\n      paddingHorizontal: 15,\n    },\n    InfoText: {\n      color: theme.text2,\n      marginVertical: 5,\n      textAlign: 'left',\n      fontSize: 16,\n    },\n    closeBtn: {\n      //remove button for removing member if the user is the Creator\n      flexDirection: 'row',\n      height: '70%',\n      width: '70%',\n      backgroundColor: '#3B65A2',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 15,\n    },\n    headerContainer: {\n      flexDirection: 'row',\n      width: '90%',\n      justifyContent: 'space-between',\n      marginBottom: 15,\n    },\n    headerText: {\n      //text for different setting headers\n      fontSize: 20,\n      fontWeight: '700',\n      color: theme.grey2,\n    },\n    textInput: {\n      backgroundColor: theme.white2,\n      paddingVertical: 10,\n      paddingHorizontal: 15,\n      width: '90%',\n      fontSize: 18,\n      fontWeight: '500',\n      textAlign: 'left',\n      borderRadius: 15,\n      marginBottom: 23,\n      borderColor: theme.grey2,\n    },\n  });\n","import React, { useState, useCallback } from 'react';\nimport { View, TouchableOpacity, Text, StyleSheet, TextInput, SafeAreaView, StatusBar } from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\n\nimport { useTheme } from '../../context/ThemeProvider';\n\nexport default function ForgotPassword({ navigation }) {\n  const [email, setEmail] = useState('');\n  const { theme } = useTheme();\n\n  const passwordReset = async () => {\n    await firebase\n      .auth()\n      .sendPasswordResetEmail(email)\n      .then(() => {\n        console.log('Password reset email sent');\n        navigation.navigate('Login');\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  return (\n    <SafeAreaView style={styles(theme).container}>\n      <StatusBar barStyle='dark-content' backgroundColor='#6a51ae' />\n      <View style={styles(theme).formCenter}>\n        <Text>Forgot Password?</Text>\n        <View style={styles(theme).section}>\n          <View style={styles(theme).icon}>\n            <Icon name='email-outline' color={theme.icon2} size={25} />\n          </View>\n          <TextInput\n            style={styles(theme).textInput}\n            placeholder='Enter email'\n            value={email}\n            onChangeText={(email) => setEmail(email)}\n            keyboardType='email-address'\n          />\n        </View>\n\n        <TouchableOpacity style={styles(theme).button} onPress={passwordReset}>\n          <Text style={{ color: theme.text1 }}>Send Email</Text>\n        </TouchableOpacity>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = (theme) =>\n  StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: theme.white2,\n    },\n    formCenter: {\n      justifyContent: 'center',\n      flex: 1,\n      margin: 25,\n    },\n    section: {\n      flexDirection: 'row',\n      //justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: theme.white2,\n      height: 40,\n      borderRadius: 20,\n      margin: 10,\n      shadowColor: theme.primary,\n      elevation: 20,\n      shadowOffset: { width: 0, height: 4 },\n      shadowOpacity: 0.3,\n      shadowRadius: 7,\n    },\n    icon: {\n      position: 'absolute',\n      left: -10,\n      height: 50,\n      width: 50,\n      borderRadius: 100,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: theme.white2,\n      shadowColor: theme.primary,\n      elevation: 20,\n      shadowOffset: { width: 0, height: 4 },\n      shadowOpacity: 0.3,\n      shadowRadius: 7,\n    },\n    textInput: {\n      marginLeft: 50,\n      flexDirection: 'row',\n      flex: 1,\n      backgroundColor: theme.white2,\n      padding: 10,\n      borderRadius: 20,\n      height: '100%',\n      //outlineWidth: 0,\n      //justifyContent: \"center\",\n    },\n    button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'row',\n      width: '100%',\n      backgroundColor: theme.primary,\n      height: 30,\n      marginTop: 40,\n      borderRadius: 50,\n    },\n  });\n","import { configureStore } from '@reduxjs/toolkit';\n//import storage from \"redux-persist/lib/storage\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { combineReducers } from 'redux';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport thunk from 'redux-thunk';\n\nimport userReducer from '../reducers/userSlice';\nimport snackbarReducer from '../reducers/snackbarSlice';\n\nconst reducers = combineReducers({\n  user: userReducer,\n  snackbar: snackbarReducer\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage: AsyncStorage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  //devTools: process.env.NODE_ENV !== \"production\",\n  middleware: [thunk],\n});\n\nexport const persistor = persistStore(store);\n","import 'react-native-gesture-handler'; //must be at top\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { Provider } from 'react-redux';\nimport { Platform } from 'react-native';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { StatusBar } from 'expo-status-bar';\nimport * as Location from 'expo-location';\nimport * as TaskManager from 'expo-task-manager';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\n//Hide this with environmental variables before publishing\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDEFvAO5nl5XlW7WcGcDCrFGo4QEZFuWq0',\n  authDomain: 'duke-tenting-app-cc15b.firebaseapp.com',\n  databaseURL: 'https://duke-tenting-app-cc15b-default-rtdb.firebaseio.com',\n  projectId: 'duke-tenting-app-cc15b',\n  storageBucket: 'duke-tenting-app-cc15b.appspot.com',\n  messagingSenderId: '391061238630',\n  appId: '1:391061238630:web:85fbc00e4babf43cdc8ea7',\n  measurementId: 'G-6QNGDGFLHZ',\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nimport RegisterScreen from './src/screens/auth/Register';\nimport LoginScreen from './src/screens/auth/Login';\nimport NavigationStack from './src/navigation/DrawerNavigator';\nimport ForgotPasswordScreen from './src/screens/auth/ForgotPassword';\nimport { persistor, store } from './src/redux/store/index';\nimport ThemeProvider from './src/context/ThemeProvider';\nimport Snackbar from './src/components/Snackbar';\n\nconst Stack = createNativeStackNavigator();\n\nconst queryClient = new QueryClient();\n\nexport default function App() {\n  const [state, setState] = useState({\n    isReady: false,\n  });\n\n  TaskManager.defineTask('KVILLE', ({ data: { eventType, region }, error }) => {\n    if (error) {\n      console.error(error);\n      return;\n    }\n    if (eventType === Location.GeofencingEventType.Enter) {\n      console.log(\"You've entered region:\", region);\n      if (state.loggedIn) {\n        updateTentStatus(true);\n      }\n    } else if (eventType === Location.GeofencingEventType.Exit) {\n      console.log(\"You've left region:\", region);\n      if (state.loggedIn) {\n        updateTentStatus(false);\n      }\n    }\n  });\n\n  async function updateTentStatus(status) {\n    const currentUser = firebase.auth().currentUser.uid;\n    if (currentUser != null) {\n      let groupCodes;\n      await firebase\n        .firestore()\n        .collection('users')\n        .doc(currentUser)\n        .get()\n        .then((doc) => {\n          groupCodes = doc.data().groupCode;\n        })\n        .catch((error) => console.error(error));\n      for (let i = 0; i < groupCodes.length; i++) {\n        firebase\n          .firestore()\n          .collection('groups')\n          .doc(groupCodes[i].groupCode)\n          .collection('members')\n          .doc(currentUser)\n          .update({\n            inTent: status,\n          })\n          .catch((error) => console.error(error));\n      }\n    }\n  }\n\n  useEffect(() => {\n    let mounted = true;\n    async function prepare() {\n      try {\n        await SplashScreen.preventAutoHideAsync();\n\n        firebase.auth().onAuthStateChanged((user) => {\n          if (!user) {\n            setState({\n              isReady: true,\n              loggedIn: false,\n            });\n          } else {\n            setState({\n              isReady: true,\n              loggedIn: true,\n            });\n          }\n        });\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n    async function location() {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        console.log('Permission to access location was denied');\n        return;\n      } else {\n        let { status } = await Location.requestBackgroundPermissionsAsync();\n        console.log(status);\n        if (status !== 'granted') {\n          console.log('Background permissions were denied');\n          return;\n        } else {\n          console.log('geofencing started');\n          Location.startGeofencingAsync('KVILLE', [{ latitude: 35.997435, longitude: -78.940823, radius: 150 }]);\n        }\n      }\n    }\n    if (Platform.OS !== 'web') {\n      location();\n    }\n    if (mounted) {\n      prepare();\n    }\n\n    return () => (mounted = false);\n  }, []);\n\n  const onLayoutRootView = useCallback(async () => {\n    if (state.isReady) {\n      await SplashScreen.hideAsync();\n    }\n  }, [state.isReady]);\n\n  if (!state.isReady) {\n    return null;\n  }\n\n  if (!state.loggedIn) {\n    return (\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <ThemeProvider>\n            <NavigationContainer onReady={onLayoutRootView}>\n              <Stack.Navigator initialRouteName='Login'>\n                <Stack.Screen name='Register' component={RegisterScreen} options={{ headerShown: false }} />\n                <Stack.Screen name='Login' component={LoginScreen} options={{ headerShown: false }} />\n                <Stack.Screen\n                  name='ForgotPassword'\n                  component={ForgotPasswordScreen}\n                  options={({ navigation }) => ({\n                    title: '',\n                    headerStyle: {\n                      backgroundColor: '#f6f6f6',\n                      borderBottomWidth: 0,\n                      shadowColor: 'transparent',\n                    },\n                    headerTitleStyle: {\n                      fontSize: 28,\n                    },\n                  })}\n                />\n              </Stack.Navigator>\n              <StatusBar style='light' />\n              <Snackbar />\n            </NavigationContainer>\n          </ThemeProvider>\n        </PersistGate>\n      </Provider>\n    );\n  }\n\n  //Main screen, after landing\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <ThemeProvider>\n            <NavigationStack />\n          </ThemeProvider>\n        </PersistGate>\n      </Provider>\n    </QueryClientProvider>\n  );\n}\n"],"sourceRoot":""}